{
  "openapi": "3.0.2",
  "info": {
    "title": "DPF-APIリファレンスマニュアル",
    "version": "1.0",
    "contact": {
      "name": "IIJ サポートセンター",
      "url": "https://help.iij.ad.jp/"
    },
    "description": "# 1. はじめに\n\n## 1.1 DPF-APIについて\nIIJ DNSプラットフォームサービスでは、DNSレコードやゾーン情報などを、\\\nお客様が用意したプログラムから自動的に操作するためのAPI機能を提供しています。\\\n以降、IIJ DNSプラットフォームサービスを「DPF」、DPFが提供するAPIを「DPF-API」あるいは単に「API」と表記します。\\\nDPF-APIの利用には、DPFの契約とIIJ IDサービスの契約が必要となります。\n\n本リファレンスマニュアルは[**OpenAPI**](https://www.openapis.org/)に準拠しています。\n\nこのWEBページはopenapi.jsonから自動生成しています。**このWEBページとopenapi.jsonの内容が異なる場合は、openapi.jsonの内容を正とします。**\nopenapi.jsonは、上部のDownloadボタンからダウンロードできます。\n\n## 1.2 サポート範囲\nDPF-APIを呼び出すためのプログラム、及びそのプログラムを稼働させるためのサーバは、お客様にてご用意ください。\\\nお客様にご用意いただくプログラムの開発、利用、動作についてのお問い合わせは承ることができません。\n\n以下の事項についてのお問い合わせは、弊社[**サポートセンター**](https://help.iij.ad.jp/)にて承ります。\n- DPF-APIの挙動が本リファレンスマニュアルと異なる場合\n- DPF-APIがシステムエラーを応答した場合\n\n## 1.3 参考資料\n- IIJ DNSプラットフォームサービス オンラインマニュアル\n  - [https://manual.iij.jp/dpf/help/](https://manual.iij.jp/dpf/help/)\n\n- IIJ IDサービス オンラインマニュアル\n  - [https://manual.iij.jp/iid/admin-help/](https://manual.iij.jp/iid/admin-help/)\n\n# 2. 利用方法\nDPF-APIは、URLとHTTPリクエストヘッダ、HTTPリクエストボディでパラメータを指定して利用します。\\\nまた、IIJ IDサービスのアクセストークンと管理対象の権限設定が必要です。\n\n## 2.1 リクエスト仕様\n\n項目 | 規格\n-----|-----\nプロトコル | HTTP/1.1、HTTP/2（https）\nHTTPメソッド | GET、POST、PATCH、PUT、DELETE\nフォーマット | JSON\n文字コード | UTF-8\nタイムアウト | 300秒\n\n- httpでのリクエストは受け付けません。必ずhttpsを使用してください。\n- DPF-APIを呼び出すプログラムは、リクエスト先が正当なものであることを確認するため、SSL証明書を検証することを推奨します。\n- 短期間に極めて多数のリクエストが行われた場合、サービスの健全性を保つためにリクエストを制限する場合があります。\n\n### アクセストークン\nAPIリクエストの際にIIJ IDサービスによって発行されたアクセストークンをAuthorizationヘッダに指定する必要があります。\\\n各APIにより必要となるアクセス権の範囲（許可するスコープ）が異なるのでご注意ください。\n\nアクセストークン作成時に指定できる「許可するスコープ」は以下のとおりです。\n\n許可するスコープ | 実行できるAPI\n-----------------|------------\ndpf_read | 参照系API\ndpf_write | 更新系、及び参照系API\ndpf_contract | 契約系API\n\n発行済のアクセストークンは、[**IIJ IDサービス**](https://www.auth.iij.jp/console/)の「アクセストークンの管理」より確認できます。\\\nDPF-APIを利用する場合は「利用するリソースサーバ」の設定で「IIJ DNSサービスAPI」を選択してください。\\\nアクセストークン管理方法のマニュアルは[**こちら**](https://manual.iij.jp/iid/admin-help/9054382.html)を参照してください。\n\n### 管理対象の権限設定\nDPFでは、管理対象となる契約単位での参照、編集権限を細かく設定できます。\\\nアクセストークンの許可するスコープが適切であっても、管理対象の権限が付与されていない場合はAPIを実行できません。\\\n管理対象の権限設定のマニュアルは[**こちら**](https://manual.iij.jp/dpf/help/19004706.html#IIJID%E3%82%B5%E3%83%BC%E3%83%93%E3%82%B9%E3%81%A8%E9%80%A3%E6%90%BA%E3%81%99%E3%82%8B-IIJID%E3%82%B5%E3%83%BC%E3%83%93%E3%82%B9%E3%82%A2%E3%82%AB%E3%82%A6%E3%83%B3%E3%83%88%E3%81%B8%E7%AE%A1%E7%90%86%E6%A8%A9%E9%99%90%E3%82%92%E4%BB%98%E4%B8%8E%E3%81%99%E3%82%8B)を参照してください。\n\n## 2.2 HTTPリクエスト\n\n### 例\n```\n<HTTPメソッド> /dpf/<version>/<APIパス> HTTP/1.1\nHost: api.dns-platform.jp\nAuthorization: Bearer <access_token>\nContent-Type: application/json; charset=UTF-8\n\n<HTTPリクエストボディ: JSON形式のAPI固有のパラメータ>\n```\n\n### リクエストパラメータ\nDPF-APIで指定するパラメータは以下のとおりです。\\\nリクエストパラメータに同一のキーが含まれる場合の動作は保証されません。\n\n共通 | 指定箇所 | パラメータ | 意味\n-----|----------|------------|-----\n共通 | HTTPメソッド | HTTPメソッド | HTTPメソッド（値：GET、POST、PATCH、PUT、DELETE）\n共通 | URL | version | DPF-APIバージョン（値：v1）\n個別 | URL | APIパス | API名称やAPI個別のパラメータの組み合わせ\n共通 | HTTPヘッダー | access_token | IIJ IDアクセストークン（参照：[**IIJ IDサービス**](https://www.auth.iij.jp/console/)）\n個別 | HTTPボディ | APIごとに異なる | JSON形式のパラメータ\n\n## 2.3 HTTPレスポンス\n\n### 成功レスポンス\nAPIごとにレスポンスが異なります。\n\n### エラーレスポンス\nHTTPステータスコード、及びレスポンスボディによってクライアントプログラムにエラーを通知します。\n\n#### 例：アクセストークンが誤っている\n```\n{\n  \"request_id\": \"782d746ac3cb46499b31708fa80e8660\",\n  \"error_type\": \"ParameterError\",\n  \"error_message\": \"There are invalid parameters.\",\n  \"error_details\": [\n    {\n      \"code\": \"invalid\",\n      \"attribute\": \"access_token\"\n    }\n  ]\n}\n```\n\n#### エラーコード一覧\nHTTP Status Code | error_type | error_message | code | attribute | 説明 | 対処方法\n-----------------|------------|---------------|------|-----------|------|---------\n400 | ParameterError | There are invalid parameters. | invalid | access_token | 指定したアクセストークンに誤りがあります | アクセストークンを確認してください\n400 | ParameterError | JSON parse error occurred. | - | - | パラメータとして不正なJSON文字列が指定されました | リクエストのパラメータを確認してください\n400 | ParameterError | There are invalid parameters. | （API個別） | （API個別） | 不正なパラメータが指定されました | 各APIのエラーコードを確認してください\n404 | NotFound | Specified resource not found. | - | - | アクセスURLが正しくありません <br> 存在しないAPIが指定されました <br> 指定された以外のHTTPメソッドが指定されました | 左記の内容を確認してください\n429 | TooManyRequests | Too many requests. | - | - | 大量のAPIリクエストが送信されました | 単位時間当たりのAPIリクエスト数を確認してください\n500 | SystemError | System error occurred. | - | - | システム障害が発生しました | [**サポートセンター**](https://help.iij.ad.jp/)へお問い合わせください\n504 | GatewayTimeout | Gateway timeout. | - | - | リクエストがタイムアウトしました | しばらく待ってから再度リクエストしてください\n\n## 2.4 非同期リクエスト\n\nDPF-APIにおけるGET以外のAPIは全て非同期APIです。\\\n非同期APIはリクエストを受け付けると即座にレスポンスを返却しますが、\\\nリクエストに対する実際の処理は非同期で行われます。\n\n非同期リクエストの受け付けに成功した場合のHTTPステータスコードは202で、\\\n返却されたレスポンスボディには、処理進捗を確認するためのURL（jobs_url）が含まれます。\\\nこのjobs_urlに対してGETリクエストをすることで進捗状況を確認できます。\n\n進捗状況を確認した際、非同期処理が正常に終了していた場合は、\\\n返却されたレスポンスボディには、対象リソースを取得するためのURL（resources_url）が含まれます。\\\nこのresources_urlに対してGETリクエストをすることで実行結果を確認できます。\n\n### 例\n#### 非同期リクエストのレスポンス\n```\nHTTP/1.1 202 Accepted\nDate: Mon, 26 Mar 20XX hh:mm:dd GMT\nContent-Type: application/json; charset=utf-8\n〜 略 〜\n\n{\n  \"request_id\": \"782d746ac3cb46499b31708fa80e8660\",\n  \"jobs_url\": \"https://api.dns-platform.jp/dpf/<version>/jobs/<request_id>\"\n}\n```\n\n#### GETリクエスト\n```\nGET /dpf/<version>/jobs/<request_id> HTTP/1.1\nHost: api.dns-platform.jp\nAuthorization: Bearer <access_token>\nContent-Type: application/json; charset=UTF-8\n\n{}\n```\n\n#### 進捗状況のレスポンス\n```\nHTTP/1.1 200 OK\nDate: Mon, 26 Mar 20XX hh:mm:dd GMT\nContent-Type: application/json; charset=utf-8\n〜 略 〜\n\n{\n  \"request_id\": \"782d746ac3cb46499b31708fa80e8660\",\n  \"resources_url\": <resources_url>,\n  \"status\": \"SUCCESSFUL\"\n}\n```\n"
  },
  "servers": [
    {
      "url": "https://api.dns-platform.jp/dpf/v1",
      "description": "API endpoint"
    }
  ],
  "paths": {
    "/common_configs/{CommonConfigId}/cc_primaries": {
      "parameters": [
        {
          "$ref": "#/components/parameters/CommonConfigId"
        }
      ],
      "get": {
        "operationId": "getCcPrimaryList",
        "summary": "プライマリネームサーバ設定の一覧取得",
        "description": "プライマリネームサーバの設定の一覧を取得します。\n",
        "tags": [
          "cc_primaries"
        ],
        "security": [
          {
            "DPFViewer": [
              "dpf_read"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCcPrimaries"
                },
                "examples": {
                  "GetCcPrimaries": {
                    "$ref": "#/components/examples/GetCcPrimaries"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request\n\n<details close>\n<summary>ErrorDetails</summary>\n\ncode | attribute | 対処方法\n-----|-----------|----------\nnot_found | common_config | 指定したCommonConfigIdを確認してください\ninvalid | schema | 指定したパラメータを確認してください\n\n</details>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                },
                "examples": {
                  "BadRequest": {
                    "$ref": "#/components/examples/BadRequest"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "operationId": "postCcPrimary",
        "summary": "プライマリネームサーバ設定の作成",
        "description": "新しくプライマリネームサーバを作成します。\\\n作成できる最大件数は5件です。\n",
        "tags": [
          "cc_primaries"
        ],
        "security": [
          {
            "DPFOperator": [
              "dpf_write"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PostCcPrimary"
              },
              "examples": {
                "PostCcPrimaries": {
                  "$ref": "#/components/examples/PostCcPrimary"
                }
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Accepted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AsyncResponse"
                },
                "examples": {
                  "AsyncResponse": {
                    "$ref": "#/components/examples/AsyncResponse"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request\n\n<details close>\n<summary>ErrorDetails</summary>\n\ncode | attribute | 対処方法\n-----|-----------|----------\nnot_found | common_config | 指定したCommonConfigIdを確認してください\ninvalid | schema | 指定したパラメータを確認してください\nnot_found | tsig | 指定したTSIG鍵を確認してください\ninvalid | address | 指定したaddressを確認してください\ntoo_many | address | 登録の上限数を超えています\nduplicated | address | 既に登録されています\n\n</details>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                },
                "examples": {
                  "BadRequest": {
                    "$ref": "#/components/examples/BadRequest"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/common_configs/{CommonConfigId}/cc_primaries/{CcPrimaryId}": {
      "parameters": [
        {
          "$ref": "#/components/parameters/CommonConfigId"
        },
        {
          "$ref": "#/components/parameters/CcPrimaryId"
        }
      ],
      "get": {
        "operationId": "getCcPrimary",
        "summary": "プライマリネームサーバ設定の取得",
        "description": "指定したCcPrimaryIdのプライマリネームサーバを取得します。\n",
        "tags": [
          "cc_primaries"
        ],
        "security": [
          {
            "DPFViewer": [
              "dpf_read"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCcPrimary"
                },
                "examples": {
                  "GetCcPrimary": {
                    "$ref": "#/components/examples/GetCcPrimary"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request\n\n<details close>\n<summary>ErrorDetails</summary>\n\ncode | attribute | 対処方法\n-----|-----------|----------\nnot_found | common_config | 指定したCommonConfigIdを確認してください\ninvalid | schema | 指定したパラメータを確認してください\nnot_found | cc_primary | 指定したCcPrimaryIdを確認してください\n\n</details>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                },
                "examples": {
                  "BadRequest": {
                    "$ref": "#/components/examples/BadRequest"
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "operationId": "patchCcPrimary",
        "summary": "プライマリネームサーバ設定の更新",
        "description": "指定したCcPrimaryIdのプライマリネームサーバを更新します。\n",
        "tags": [
          "cc_primaries"
        ],
        "security": [
          {
            "DPFOperator": [
              "dpf_write"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PatchCcPrimary"
              },
              "examples": {
                "PatchCcPrimary": {
                  "$ref": "#/components/examples/PatchCcPrimary"
                }
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Accepted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AsyncResponse"
                },
                "examples": {
                  "AsyncResponse": {
                    "$ref": "#/components/examples/AsyncResponse"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request\n\n<details close>\n<summary>ErrorDetails</summary>\n\ncode | attribute | 対処方法\n-----|-----------|----------\nnot_found | common_config | 指定したCommonConfigIdを確認してください\ninvalid | schema | 指定したパラメータを確認してください\nnot_found | cc_primary | 指定したCcPrimaryIdを確認してください\nnot_found | tsig | 指定したTSIGを確認してください\ninvalid | address | 指定したaddressを確認してください\nduplicated | address | 指定したaddressを確認してください\n\n</details>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                },
                "examples": {
                  "BadRequest": {
                    "$ref": "#/components/examples/BadRequest"
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "deleteCcPrimary",
        "summary": "プライマリネームサーバ設定の削除",
        "description": "指定したCcPrimaryIdのプライマリネームサーバを削除します。\n",
        "tags": [
          "cc_primaries"
        ],
        "security": [
          {
            "DPFOperator": [
              "dpf_write"
            ]
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AsyncResponse"
                },
                "examples": {
                  "AsyncResponse": {
                    "$ref": "#/components/examples/AsyncResponse"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request\n\n<details close>\n<summary>ErrorDetails</summary>\n\ncode | attribute | 対処方法\n-----|-----------|----------\nnot_found | common_config | 指定したCommonConfigIdを確認してください\ninvalid | schema | 指定したパラメータを確認してください\nnot_found | cc_primary | 指定したCcPrimaryIdを確認してください\nforbidden | cc_primary | 有効のため削除できません\n\n</details>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                },
                "examples": {
                  "BadRequest": {
                    "$ref": "#/components/examples/BadRequest"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/common_configs/{CommonConfigId}/cc_sec_notified_servers": {
      "parameters": [
        {
          "$ref": "#/components/parameters/CommonConfigId"
        }
      ],
      "get": {
        "operationId": "getCcSecNotifiedServerList",
        "summary": "DNS NOTIFY設定の一覧取得",
        "description": "DNS NOTIFYの設定の一覧を取得します。\n",
        "tags": [
          "cc_sec_notified_servers"
        ],
        "security": [
          {
            "DPFViewer": [
              "dpf_read"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCcSecNotifiedServers"
                },
                "examples": {
                  "GetCcSecNotifiedServers": {
                    "$ref": "#/components/examples/GetCcSecNotifiedServers"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request\n\n<details close>\n<summary>ErrorDetails</summary>\n\ncode | attribute | 対処方法\n-----|-----------|----------\nnot_found | common_config | 指定したCommonConfigIdを確認してください\ninvalid | schema | 指定したパラメータを確認してください\n\n</details>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                },
                "examples": {
                  "BadRequest": {
                    "$ref": "#/components/examples/BadRequest"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "operationId": "postCcSecNotifiedServer",
        "summary": "DNS NOTIFY設定の作成",
        "description": "新しくDNS NOFITYを作成します。\\\n作成できる最大件数は256件です。\n",
        "tags": [
          "cc_sec_notified_servers"
        ],
        "security": [
          {
            "DPFOperator": [
              "dpf_write"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PostCcSecNotifiedServer"
              },
              "examples": {
                "PostCcSecNotifiedServers": {
                  "$ref": "#/components/examples/PostCcSecNotifiedServer"
                }
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Accepted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AsyncResponse"
                },
                "examples": {
                  "AsyncResponse": {
                    "$ref": "#/components/examples/AsyncResponse"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request\n\n<details close>\n<summary>ErrorDetails</summary>\n\ncode | attribute | 対処方法\n-----|-----------|----------\nnot_found | common_config | 指定したCommonConfigIdを確認してください\ninvalid | schema | 指定したパラメータを確認してください\nnot_found | tsig | 指定したTSIG鍵を確認してください\ninvalid | address | 指定したaddressを確認してください\ntoo_many | address | 登録の上限数を超えています\nduplicated | address | 既に登録されています\n\n</details>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                },
                "examples": {
                  "BadRequest": {
                    "$ref": "#/components/examples/BadRequest"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/common_configs/{CommonConfigId}/cc_sec_notified_servers/{CcSecNotifiedServerId}": {
      "parameters": [
        {
          "$ref": "#/components/parameters/CommonConfigId"
        },
        {
          "$ref": "#/components/parameters/CcSecNotifiedServerId"
        }
      ],
      "get": {
        "operationId": "getCcSecNotifiedServer",
        "summary": "DNS NOTIFY設定の取得",
        "description": "指定したCcSecNotifiedServerIdのDNS NOTIFYを取得します。\n",
        "tags": [
          "cc_sec_notified_servers"
        ],
        "security": [
          {
            "DPFViewer": [
              "dpf_read"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCcSecNotifiedServer"
                },
                "examples": {
                  "GetCcSecNotifiedServer": {
                    "$ref": "#/components/examples/GetCcSecNotifiedServer"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request\n\n<details close>\n<summary>ErrorDetails</summary>\n\ncode | attribute | 対処方法\n-----|-----------|----------\nnot_found | common_config | 指定したCommonConfigIdを確認してください\ninvalid | schema | 指定したパラメータを確認してください\nnot_found | cc_sec_notified_server | 指定したCcSecNotifiedServerIdを確認してください\n\n</details>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                },
                "examples": {
                  "BadRequest": {
                    "$ref": "#/components/examples/BadRequest"
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "operationId": "patchCcSecNotifiedServer",
        "summary": "DNS NOTIFY設定の更新",
        "description": "指定したCcSecNotifiedServerIdのDNS NOTIFYを更新します。\n",
        "tags": [
          "cc_sec_notified_servers"
        ],
        "security": [
          {
            "DPFOperator": [
              "dpf_write"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PatchCcSecNotifiedServer"
              },
              "examples": {
                "PatchCcSecNotifiedServer": {
                  "$ref": "#/components/examples/PatchCcSecNotifiedServer"
                }
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Accepted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AsyncResponse"
                },
                "examples": {
                  "AsyncResponse": {
                    "$ref": "#/components/examples/AsyncResponse"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request\n\n<details close>\n<summary>ErrorDetails</summary>\n\ncode | attribute | 対処方法\n-----|-----------|----------\nnot_found | common_config | 指定したCommonConfigIdを確認してください\ninvalid | schema | 指定したパラメータを確認してください\nnot_found | cc_sec_notified_server | 指定したCcSecNotifiedServerIdを確認してください\nnot_found | tsig | 指定したTSIGを確認してください\ninvalid | address | 指定したaddressを確認してください\nduplicated | address | 指定したaddressを確認してください\n\n</details>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                },
                "examples": {
                  "BadRequest": {
                    "$ref": "#/components/examples/BadRequest"
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "deleteCcSecNotifiedServer",
        "summary": "DNS NOTIFY設定の削除",
        "description": "指定したCcSecNotifiedServerIdのDNS NOTIFYを削除します。\n",
        "tags": [
          "cc_sec_notified_servers"
        ],
        "security": [
          {
            "DPFOperator": [
              "dpf_write"
            ]
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AsyncResponse"
                },
                "examples": {
                  "AsyncResponse": {
                    "$ref": "#/components/examples/AsyncResponse"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request\n\n<details close>\n<summary>ErrorDetails</summary>\n\ncode | attribute | 対処方法\n-----|-----------|----------\nnot_found | common_config | 指定したCommonConfigIdを確認してください\ninvalid | schema | 指定したパラメータを確認してください\nnot_found | cc_sec_notified_server | 指定したCcSecNotifiedServerIdを確認してください\n\n</details>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                },
                "examples": {
                  "BadRequest": {
                    "$ref": "#/components/examples/BadRequest"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/common_configs/{CommonConfigId}/cc_sec_transfer_acls": {
      "parameters": [
        {
          "$ref": "#/components/parameters/CommonConfigId"
        }
      ],
      "get": {
        "operationId": "getCcSecTransferAclList",
        "summary": "ゾーン転送ACLの一覧取得",
        "description": "ゾーン転送ACLの設定の一覧を取得します。\n",
        "tags": [
          "cc_sec_transfer_acls"
        ],
        "security": [
          {
            "DPFViewer": [
              "dpf_read"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCcSecTransferAcls"
                },
                "examples": {
                  "GetCcSecTransferAcls": {
                    "$ref": "#/components/examples/GetCcSecTransferAcls"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request\n\n<details close>\n<summary>ErrorDetails</summary>\n\ncode | attribute | 対処方法\n-----|-----------|----------\nnot_found | common_config | 指定したCommonConfigIdを確認してください\ninvalid | schema | 指定したパラメータを確認してください\n\n</details>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                },
                "examples": {
                  "BadRequest": {
                    "$ref": "#/components/examples/BadRequest"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "operationId": "postCcSecTransferAcl",
        "summary": "ゾーン転送ACLの作成",
        "description": "新しくゾーン転送ACLを作成します。\\\n作成できる最大件数は5件です。\n",
        "tags": [
          "cc_sec_transfer_acls"
        ],
        "security": [
          {
            "DPFOperator": [
              "dpf_write"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PostCcSecTransferAcl"
              },
              "examples": {
                "PostCcSecTransferAcls": {
                  "$ref": "#/components/examples/PostCcSecTransferAcl"
                }
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Accepted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AsyncResponse"
                },
                "examples": {
                  "AsyncResponse": {
                    "$ref": "#/components/examples/AsyncResponse"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request\n\n<details close>\n<summary>ErrorDetails</summary>\n\ncode | attribute | 対処方法\n-----|-----------|----------\nnot_found | common_config | 指定したCommonConfigIdを確認してください\ninvalid | schema | 指定したパラメータを確認してください\nnot_found | tsig | 指定したTSIG鍵を確認してください\ninvalid | network | 指定したnetworkを確認してください\ntoo_many | network | 登録の上限数を超えています\nduplicated | network | 指定したnetworkを確認してください\n\n</details>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                },
                "examples": {
                  "BadRequest": {
                    "$ref": "#/components/examples/BadRequest"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/common_configs/{CommonConfigId}/cc_sec_transfer_acls/{CcSecTransferAclId}": {
      "parameters": [
        {
          "$ref": "#/components/parameters/CommonConfigId"
        },
        {
          "$ref": "#/components/parameters/CcSecTransferAclId"
        }
      ],
      "get": {
        "operationId": "getCcSecTransferAcl",
        "summary": "ゾーン転送ACLの取得",
        "description": "指定したCcSecTransferAclIdのゾーン転送ACLを取得します。\n",
        "tags": [
          "cc_sec_transfer_acls"
        ],
        "security": [
          {
            "DPFViewer": [
              "dpf_read"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCcSecTransferAcl"
                },
                "examples": {
                  "GetCcSecTransferAcl": {
                    "$ref": "#/components/examples/GetCcSecTransferAcl"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request\n\n<details close>\n<summary>ErrorDetails</summary>\n\ncode | attribute | 対処方法\n-----|-----------|----------\nnot_found | common_config | 指定したCommonConfigIdを確認してください\ninvalid | schema | 指定したパラメータを確認してください\nnot_found | cc_sec_transfer_acl | 指定したCcSecTransferAclIdを確認してください\n\n</details>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                },
                "examples": {
                  "BadRequest": {
                    "$ref": "#/components/examples/BadRequest"
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "operationId": "patchCcSecTransferAcl",
        "summary": "ゾーン転送ACLの更新",
        "description": "指定したCcSecTransferAclIdのゾーン転送ACLを更新します。\n",
        "tags": [
          "cc_sec_transfer_acls"
        ],
        "security": [
          {
            "DPFOperator": [
              "dpf_write"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PatchCcSecTransferAcl"
              },
              "examples": {
                "PatchCcSecTransferAcl": {
                  "$ref": "#/components/examples/PatchCcSecTransferAcl"
                }
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Accepted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AsyncResponse"
                },
                "examples": {
                  "AsyncResponse": {
                    "$ref": "#/components/examples/AsyncResponse"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request\n\n<details close>\n<summary>ErrorDetails</summary>\n\ncode | attribute | 対処方法\n-----|-----------|----------\nnot_found | common_config | 指定したCommonConfigIdを確認してください\ninvalid | schema | 指定したパラメータを確認してください\nnot_found | cc_sec_transfer_acl | 指定したCcSecTransferAclIdを確認してください\nnot_found | tsig | 指定したTSIGを確認してください\ninvalid | network | 指定したnetworkを確認してください\nduplicated | network | 指定したnetworkを確認してください\n\n</details>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                },
                "examples": {
                  "BadRequest": {
                    "$ref": "#/components/examples/BadRequest"
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "deleteCcSecTransferAcl",
        "summary": "ゾーン転送ACLの削除",
        "description": "指定したCcSecTransferAclIdのゾーン転送ACLを削除します。\n",
        "tags": [
          "cc_sec_transfer_acls"
        ],
        "security": [
          {
            "DPFOperator": [
              "dpf_write"
            ]
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AsyncResponse"
                },
                "examples": {
                  "AsyncResponse": {
                    "$ref": "#/components/examples/AsyncResponse"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request\n\n<details close>\n<summary>ErrorDetails</summary>\n\ncode | attribute | 対処方法\n-----|-----------|----------\nnot_found | common_config | 指定したCommonConfigIdを確認してください\ninvalid | schema | 指定したパラメータを確認してください\nnot_found | cc_sec_transfer_acl | 指定したCcSecTransferAclIdを確認してください\n\n</details>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                },
                "examples": {
                  "BadRequest": {
                    "$ref": "#/components/examples/BadRequest"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/common_configs/{CommonConfigId}/cc_notice_accounts": {
      "parameters": [
        {
          "$ref": "#/components/parameters/CommonConfigId"
        }
      ],
      "get": {
        "operationId": "getCcNoticeAccountList",
        "summary": "通知先アカウント設定の一覧取得",
        "description": "通知先アカウントの設定の一覧を取得します。\n",
        "tags": [
          "cc_notice_accounts"
        ],
        "security": [
          {
            "DPFViewer": [
              "dpf_read"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCcNoticeAccounts"
                },
                "examples": {
                  "GetCcNoticeAccounts": {
                    "$ref": "#/components/examples/GetCcNoticeAccounts"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request\n\n<details close>\n<summary>ErrorDetails</summary>\n\ncode | attribute | 対処方法\n-----|-----------|----------\nnot_found | common_config | 指定したCommonConfigIdを確認してください\ninvalid | schema | 指定したパラメータを確認してください\n\n</details>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                },
                "examples": {
                  "BadRequest": {
                    "$ref": "#/components/examples/BadRequest"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "operationId": "postCcNoticeAccount",
        "summary": "通知先アカウント設定の作成",
        "description": "新しく通知先アカウントを作成します。\n",
        "tags": [
          "cc_notice_accounts"
        ],
        "security": [
          {
            "DPFOperator": [
              "dpf_write"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PostCcNoticeAccount"
              },
              "examples": {
                "PostCcNoticeAccounts": {
                  "$ref": "#/components/examples/PostCcNoticeAccount"
                }
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Accepted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AsyncResponse"
                },
                "examples": {
                  "AsyncResponse": {
                    "$ref": "#/components/examples/AsyncResponse"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request\n\n<details close>\n<summary>ErrorDetails</summary>\n\ncode | attribute | 対処方法\n-----|-----------|----------\nnot_found | common_config | 指定したCommonConfigIdを確認してください\nduplicated | resource_name | 指定したCcNoticeAccountResourceNameは既に登録されています\ninvalid_length | resource_name | 指定したCcNoticeAccountResourceNameの文字数を確認してください\ninvalid_format | resource_name | 指定したCcNoticeAccountResourceNameのフォーマットを確認してください\ntoo_many | name | 登録の上限数を超えています\ninvalid_format | name | 指定したアカウント名のフォーマットを確認してください\ninvalid_char_type | mail | 指定したメールアドレスの文字種を確認してください\ninvalid_format | mail | 指定したメールアドレスのフォーマットを確認してください\nrequired | country_code | 電話番号を指定する場合は国番号を指定する必要があります\nconflicted | country_code | 電話番号を指定していない場合は国番号を指定しないでください\ninvalid | schema | 指定したパラメータを確認してください\n\n</details>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                },
                "examples": {
                  "BadRequest": {
                    "$ref": "#/components/examples/BadRequest"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/common_configs/{CommonConfigId}/cc_notice_accounts/{CcNoticeAccountResourceName}": {
      "parameters": [
        {
          "$ref": "#/components/parameters/CommonConfigId"
        },
        {
          "$ref": "#/components/parameters/CcNoticeAccountResourceName"
        }
      ],
      "get": {
        "operationId": "getCcNoticeAccount",
        "summary": "通知先アカウントの取得",
        "description": "指定したCcNoticeAccountResourceNameの通知先アカウント設定を取得します。\n",
        "tags": [
          "cc_notice_accounts"
        ],
        "security": [
          {
            "DPFViewer": [
              "dpf_read"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCcNoticeAccount"
                },
                "examples": {
                  "GetCcNoticeAccount": {
                    "$ref": "#/components/examples/GetCcNoticeAccount"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request\n\n<details close>\n<summary>ErrorDetails</summary>\n\ncode | attribute | 対処方法\n-----|-----------|----------\nnot_found | common_config | 指定したCommonConfigIdを確認してください\nnot_found | cc_notice_account | 指定したCcNoticeAccountResourceNameを確認してください\ninvalid | schema | 指定したパラメータを確認してください\n\n</details>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                },
                "examples": {
                  "BadRequest": {
                    "$ref": "#/components/examples/BadRequest"
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "operationId": "patchCcNoticeAccount",
        "summary": "通知先アカウント設定の更新",
        "description": "指定したCcNoticeAccountResourceNameの通知先アカウント設定を更新します。\\\nアカウントに登録されたメールアドレスや電話番号を削除したい場合は、空文字を指定してください。\n",
        "tags": [
          "cc_notice_accounts"
        ],
        "security": [
          {
            "DPFOperator": [
              "dpf_write"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PatchCcNoticeAccount"
              },
              "examples": {
                "PatchCcNoticeAccount": {
                  "$ref": "#/components/examples/PatchCcNoticeAccount"
                }
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Accepted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AsyncResponse"
                },
                "examples": {
                  "AsyncResponse": {
                    "$ref": "#/components/examples/AsyncResponse"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request\n\n<details close>\n<summary>ErrorDetails</summary>\n\ncode | attribute | 対処方法\n-----|-----------|----------\nnot_found | common_config | 指定したCommonConfigIdを確認してください\nnot_found | cc_notice_account | 指定したCcNoticeAccountResourceNameを確認してください\ninvalid_format | name | 指定したアカウント名のフォーマットを確認してください\ninvalid_char_type | mail | 指定したメールアドレスの文字種を確認してください\ninvalid_format | mail | 指定したメールアドレスのフォーマットを確認してください\nrequired | country_code | 国番号を指定してください\nconflicted | country_code | 電話番号を指定してください\ninvalid | schema | 指定したパラメータを確認してください\n\n</details>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                },
                "examples": {
                  "BadRequest": {
                    "$ref": "#/components/examples/BadRequest"
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "deleteCcNoticeAccount",
        "summary": "通知先アカウント設定の削除",
        "description": "指定したCcNoticeAccountResourceNameの通知先アカウント設定を削除します。\n",
        "tags": [
          "cc_notice_accounts"
        ],
        "security": [
          {
            "DPFOperator": [
              "dpf_write"
            ]
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AsyncResponse"
                },
                "examples": {
                  "AsyncResponse": {
                    "$ref": "#/components/examples/AsyncResponse"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request\n\n<details close>\n<summary>ErrorDetails</summary>\n\ncode | attribute | 対処方法\n-----|-----------|----------\nnot_found | common_config | 指定したCommonConfigIdを確認してください\nnot_found | cc_notice_account | 指定したCcNoticeAccountResourceNameを確認してください\ninvalid | schema | 指定したパラメータを確認してください\n\n</details>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                },
                "examples": {
                  "BadRequest": {
                    "$ref": "#/components/examples/BadRequest"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/contracts/{ContractId}/common_configs": {
      "parameters": [
        {
          "$ref": "#/components/parameters/ContractId"
        }
      ],
      "get": {
        "operationId": "getCommonConfigList",
        "summary": "共通設定の一覧取得",
        "description": "共通設定の一覧を取得します。\\\n\"_keywords\" から始まるパラメータは、合計で30個まで指定可能です。\n",
        "tags": [
          "common_configs"
        ],
        "security": [
          {
            "DPFViewer": [
              "dpf_read"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/Type"
          },
          {
            "$ref": "#/components/parameters/Offset"
          },
          {
            "$ref": "#/components/parameters/Limit"
          },
          {
            "$ref": "#/components/parameters/KeywordsFullText"
          },
          {
            "$ref": "#/components/parameters/KeywordsName"
          },
          {
            "$ref": "#/components/parameters/KeywordsDescription"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCommonConfigs"
                },
                "examples": {
                  "GetCommonConfigs": {
                    "$ref": "#/components/examples/GetCommonConfigs"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request\n\n<details close>\n<summary>ErrorDetails</summary>\n\ncode | attribute | 対処方法\n-----|-----------|----------\nnot_found | contract | 指定したContractIdを確認してください\ninvalid | schema | 指定したパラメータを確認してください\n\n</details>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                },
                "examples": {
                  "BadRequest": {
                    "$ref": "#/components/examples/BadRequest"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "operationId": "postCommonConfig",
        "summary": "共通設定の作成",
        "description": "新しく共通設定を作成します。\n",
        "tags": [
          "common_configs"
        ],
        "security": [
          {
            "DPFOperator": [
              "dpf_write"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PostCommonConfig"
              },
              "examples": {
                "PostCommonConfig": {
                  "$ref": "#/components/examples/PostCommonConfig"
                }
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Accepted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AsyncResponse"
                },
                "examples": {
                  "AsyncResponse": {
                    "$ref": "#/components/examples/AsyncResponse"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request\n\n<details close>\n<summary>ErrorDetails</summary>\n\ncode | attribute | 対処方法\n-----|-----------|----------\nnot_found | contract | 指定したContractIdを確認してください\ninvalid | schema | 指定したパラメータを確認してください\nduplicated | name | 指定したnameを確認してください\n\n</details>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                },
                "examples": {
                  "BadRequest": {
                    "$ref": "#/components/examples/BadRequest"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/contracts/{ContractId}/common_configs/count": {
      "parameters": [
        {
          "$ref": "#/components/parameters/ContractId"
        }
      ],
      "get": {
        "operationId": "getCommonConfigListCount",
        "summary": "共通設定の件数取得",
        "description": "共通設定の件数を取得します。\\\n\"_keywords\" から始まるパラメータは、合計で30個まで指定可能です。\n",
        "tags": [
          "common_configs"
        ],
        "security": [
          {
            "DPFViewer": [
              "dpf_read"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/Type"
          },
          {
            "$ref": "#/components/parameters/KeywordsFullText"
          },
          {
            "$ref": "#/components/parameters/KeywordsName"
          },
          {
            "$ref": "#/components/parameters/KeywordsDescription"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCount"
                },
                "examples": {
                  "GetCount": {
                    "$ref": "#/components/examples/GetCount"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request\n\n<details close>\n<summary>ErrorDetails</summary>\n\ncode | attribute | 対処方法\n-----|-----------|----------\nnot_found | contract | 指定したContractIdを確認してください\ninvalid | schema | 指定したパラメータを確認してください\n\n</details>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                },
                "examples": {
                  "BadRequest": {
                    "$ref": "#/components/examples/BadRequest"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/contracts/{ContractId}/common_configs/default": {
      "parameters": [
        {
          "$ref": "#/components/parameters/ContractId"
        }
      ],
      "patch": {
        "operationId": "patchCommonConfigDefault",
        "summary": "初期適用される共通設定の更新",
        "description": "ゾーンおよびLBドメインを新規追加した場合に、自動で適用される共通設定を切り替えます。\n",
        "tags": [
          "common_configs"
        ],
        "security": [
          {
            "DPFOperator": [
              "dpf_write"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PatchDefaultCommonConfig"
              },
              "examples": {
                "PatchDefaultCommonConfig": {
                  "$ref": "#/components/examples/PatchDefaultCommonConfig"
                }
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Accepted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AsyncResponse"
                },
                "examples": {
                  "AsyncResponse": {
                    "$ref": "#/components/examples/AsyncResponse"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request\n\n<details close>\n<summary>ErrorDetails</summary>\n\ncode | attribute | 対処方法\n-----|-----------|----------\nnot_found | contract | 指定したContractIdを確認してください\ninvalid | schema | 指定したパラメータを確認してください\nnot_found | common_config | 指定したCommonConfigIdを確認してください\n\n</details>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                },
                "examples": {
                  "BadRequest": {
                    "$ref": "#/components/examples/BadRequest"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/contracts/{ContractId}/common_configs/{CommonConfigId}": {
      "parameters": [
        {
          "$ref": "#/components/parameters/ContractId"
        },
        {
          "$ref": "#/components/parameters/CommonConfigId"
        }
      ],
      "get": {
        "operationId": "getCommonConfig",
        "summary": "共通設定の取得",
        "description": "指定したCommonConfigIdの共通設定を取得します。\n",
        "tags": [
          "common_configs"
        ],
        "security": [
          {
            "DPFViewer": [
              "dpf_read"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCommonConfig"
                },
                "examples": {
                  "GetCommonConfig": {
                    "$ref": "#/components/examples/GetCommonConfig"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request\n\n<details close>\n<summary>ErrorDetails</summary>\n\ncode | attribute | 対処方法\n-----|-----------|----------\nnot_found | contract | 指定したContractIdを確認してください\ninvalid | schema | 指定したパラメータを確認してください\nnot_found | common_config | 指定したCommonConfigIdを確認してください\n\n</details>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                },
                "examples": {
                  "BadRequest": {
                    "$ref": "#/components/examples/BadRequest"
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "operationId": "patchCommonConfig",
        "summary": "共通設定の更新",
        "description": "指定したCommonConfigIdの共通設定を更新します。\n",
        "tags": [
          "common_configs"
        ],
        "security": [
          {
            "DPFOperator": [
              "dpf_write"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PatchCommonConfig"
              },
              "examples": {
                "PatchCommonConfig": {
                  "$ref": "#/components/examples/PatchCommonConfig"
                }
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Accepted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AsyncResponse"
                },
                "examples": {
                  "AsyncResponse": {
                    "$ref": "#/components/examples/AsyncResponse"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request\n\n<details close>\n<summary>ErrorDetails</summary>\n\ncode | attribute | 対処方法\n-----|-----------|----------\nnot_found | contract | 指定したContractIdを確認してください\ninvalid | schema | 指定したパラメータを確認してください\nnot_found | common_config | 指定したCommonConfigIdを確認してください\nduplicated | name | 指定したnameを確認してください\n\n</details>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                },
                "examples": {
                  "BadRequest": {
                    "$ref": "#/components/examples/BadRequest"
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "deleteCommonConfig",
        "summary": "共通設定の削除",
        "description": "指定したCommonConfigIdの共通設定を削除します。\n",
        "tags": [
          "common_configs"
        ],
        "security": [
          {
            "DPFOperator": [
              "dpf_write"
            ]
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AsyncResponse"
                },
                "examples": {
                  "AsyncResponse": {
                    "$ref": "#/components/examples/AsyncResponse"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request\n\n<details close>\n<summary>ErrorDetails</summary>\n\ncode | attribute | 対処方法\n-----|-----------|----------\nnot_found | contract | 指定したContractIdを確認してください\ninvalid | schema | 指定したパラメータを確認してください\nnot_found | common_config | 指定したCommonConfigIdを確認してください\nforbidden | common_config | 参照元が存在しているため削除できません\n\n</details>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                },
                "examples": {
                  "BadRequest": {
                    "$ref": "#/components/examples/BadRequest"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/contracts/{ContractId}/common_configs/{CommonConfigId}/copy": {
      "parameters": [
        {
          "$ref": "#/components/parameters/ContractId"
        },
        {
          "$ref": "#/components/parameters/CommonConfigId"
        }
      ],
      "post": {
        "operationId": "postCommonConfigCopy",
        "summary": "共通設定のコピー",
        "description": "指定した共通設定と同じ内容の共通設定を別の共通設定名で作成します。\n",
        "tags": [
          "common_configs"
        ],
        "security": [
          {
            "DPFOperator": [
              "dpf_write"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PostCommonConfig"
              },
              "examples": {
                "PostCommonConfig": {
                  "$ref": "#/components/examples/PostCommonConfig"
                }
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Accepted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AsyncResponse"
                },
                "examples": {
                  "AsyncResponse": {
                    "$ref": "#/components/examples/AsyncResponse"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request\n\n<details close>\n<summary>ErrorDetails</summary>\n\ncode | attribute | 対処方法\n-----|-----------|----------\nnot_found | contract | 指定したContractIdを確認してください\ninvalid | schema | 指定したパラメータを確認してください\nnot_found | common_config | 指定したCommonConfigIdを確認してください\nduplicated | name | 指定したnameを確認してください\n\n</details>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                },
                "examples": {
                  "BadRequest": {
                    "$ref": "#/components/examples/BadRequest"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/contracts/{ContractId}/common_configs/{CommonConfigId}/managed_dns": {
      "parameters": [
        {
          "$ref": "#/components/parameters/ContractId"
        },
        {
          "$ref": "#/components/parameters/CommonConfigId"
        }
      ],
      "patch": {
        "operationId": "patchCommonConfigManagedDns",
        "summary": "マネージドDNSサーバの状態更新",
        "description": "マネージドDNSサーバをプライマリネームサーバとして有効もしくは無効とするかの切り替えを行えます。\n",
        "tags": [
          "common_configs"
        ],
        "security": [
          {
            "DPFOperator": [
              "dpf_write"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PatchManagedDns"
              },
              "examples": {
                "PatchManagedDns": {
                  "$ref": "#/components/examples/PatchManagedDns"
                }
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Accepted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AsyncResponse"
                },
                "examples": {
                  "AsyncResponse": {
                    "$ref": "#/components/examples/AsyncResponse"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request\n\n<details close>\n<summary>ErrorDetails</summary>\n\ncode | attribute | 対処方法\n-----|-----------|----------\nnot_found | contract | 指定したContractIdを確認してください\ninvalid | schema | 指定したパラメータを確認してください\nnot_found | common_config | 指定したCommonConfigIdを確認してください\n\n</details>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                },
                "examples": {
                  "BadRequest": {
                    "$ref": "#/components/examples/BadRequest"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/contracts/{ContractId}/contract_partners": {
      "parameters": [
        {
          "$ref": "#/components/parameters/ContractId"
        }
      ],
      "get": {
        "operationId": "getContractPartnerList",
        "summary": "DPF連携サービスの一覧取得",
        "description": "DPFが連携しているサービスの一覧を取得します。\n",
        "tags": [
          "contract_partners"
        ],
        "security": [
          {
            "DPFViewer": [
              "dpf_read"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetContractPartners"
                },
                "examples": {
                  "GetContractPartners": {
                    "$ref": "#/components/examples/GetContractPartners"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request\n\n<details close>\n<summary>ErrorDetails</summary>\n\ncode | attribute | 対処方法\n-----|-----------|----------\ninvalid | schema | 指定したパラメータを確認してください\nnot_found | contract | 指定したContractIdを確認してください\n\n</details>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                },
                "examples": {
                  "BadRequest": {
                    "$ref": "#/components/examples/BadRequest"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/contracts": {
      "get": {
        "operationId": "getContractList",
        "summary": "DPF契約情報の一覧取得",
        "description": "DPF契約情報の一覧を取得します。\\\n\"_keywords\" から始まるパラメータは、合計で30個まで指定可能です。\n",
        "tags": [
          "contracts"
        ],
        "security": [
          {
            "DPFViewer": [
              "dpf_read"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/Type"
          },
          {
            "$ref": "#/components/parameters/Offset"
          },
          {
            "$ref": "#/components/parameters/Limit"
          },
          {
            "$ref": "#/components/parameters/KeywordsFullText"
          },
          {
            "$ref": "#/components/parameters/KeywordsServiceCode"
          },
          {
            "$ref": "#/components/parameters/KeywordsContractsPlan"
          },
          {
            "$ref": "#/components/parameters/KeywordsContractsState"
          },
          {
            "$ref": "#/components/parameters/KeywordsContractsFavorite"
          },
          {
            "$ref": "#/components/parameters/KeywordsDescription"
          },
          {
            "$ref": "#/components/parameters/KeywordsLabel"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetContracts"
                },
                "examples": {
                  "GetContracts": {
                    "$ref": "#/components/examples/GetContracts"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request\n\n<details close>\n<summary>ErrorDetails</summary>\n\ncode | attribute | 対処方法\n-----|-----------|----------\ninvalid | schema | 指定したパラメータを確認してください\ninvalid | keywords | 指定したパラメータの型を確認してください\n\n</details>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                },
                "examples": {
                  "BadRequest": {
                    "$ref": "#/components/examples/BadRequest"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/contracts/count": {
      "get": {
        "operationId": "getContractListCount",
        "summary": "DPF契約情報の件数取得",
        "description": "DPF契約の件数を取得します。\\\n\"_keywords\" から始まるパラメータは、合計で30個まで指定可能です。\n",
        "tags": [
          "contracts"
        ],
        "security": [
          {
            "DPFViewer": [
              "dpf_read"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/Type"
          },
          {
            "$ref": "#/components/parameters/KeywordsFullText"
          },
          {
            "$ref": "#/components/parameters/KeywordsServiceCode"
          },
          {
            "$ref": "#/components/parameters/KeywordsContractsPlan"
          },
          {
            "$ref": "#/components/parameters/KeywordsContractsState"
          },
          {
            "$ref": "#/components/parameters/KeywordsContractsFavorite"
          },
          {
            "$ref": "#/components/parameters/KeywordsDescription"
          },
          {
            "$ref": "#/components/parameters/KeywordsLabel"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCount"
                },
                "examples": {
                  "GetCount": {
                    "$ref": "#/components/examples/GetCount"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request\n\n<details close>\n<summary>ErrorDetails</summary>\n\ncode | attribute | 対処方法\n-----|-----------|----------\ninvalid | schema | 指定したパラメータを確認してください\ninvalid | keywords | 指定したパラメータの型を確認してください\n\n</details>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                },
                "examples": {
                  "BadRequest": {
                    "$ref": "#/components/examples/BadRequest"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/contracts/{ContractId}": {
      "parameters": [
        {
          "$ref": "#/components/parameters/ContractId"
        }
      ],
      "get": {
        "operationId": "getContract",
        "summary": "DPF契約情報の取得",
        "description": "指定したContractIdのDPF契約を取得します。\n",
        "tags": [
          "contracts"
        ],
        "security": [
          {
            "DPFViewer": [
              "dpf_read"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetContract"
                },
                "examples": {
                  "GetContract": {
                    "$ref": "#/components/examples/GetContract"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request\n\n<details close>\n<summary>ErrorDetails</summary>\n\ncode | attribute | 対処方法\n-----|-----------|----------\nnot_found | contract | 指定したContractIdを確認してください\ninvalid | schema | 指定したパラメータを確認してください\n\n</details>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                },
                "examples": {
                  "BadRequest": {
                    "$ref": "#/components/examples/BadRequest"
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "operationId": "patchContract",
        "summary": "DPF契約情報の更新",
        "description": "指定したContractIdのDPF契約を更新します。\n",
        "tags": [
          "contracts"
        ],
        "security": [
          {
            "DPFOperator": [
              "dpf_write"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PatchContract"
              },
              "examples": {
                "PatchContract": {
                  "$ref": "#/components/examples/PatchContract"
                }
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Accepted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AsyncResponse"
                },
                "examples": {
                  "AsyncResponse": {
                    "$ref": "#/components/examples/AsyncResponse"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request\n\n<details close>\n<summary>ErrorDetails</summary>\n\ncode | attribute | 対処方法\n-----|-----------|----------\nnot_found | contract | 指定したContractIdを確認してください\ninvalid | schema | 指定したパラメータを確認してください\n\n</details>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                },
                "examples": {
                  "BadRequest": {
                    "$ref": "#/components/examples/BadRequest"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/contracts/{ContractId}/labels": {
      "parameters": [
        {
          "$ref": "#/components/parameters/ContractId"
        }
      ],
      "get": {
        "operationId": "getContractLabels",
        "summary": "DPF契約情報のラベル一覧取得",
        "description": "指定したContractIdのラベルの一覧を取得します。\n",
        "tags": [
          "contracts"
        ],
        "security": [
          {
            "DPFViewer": [
              "dpf_read"
            ]
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/GetContractLabelsSuccessResponse"
          },
          "400": {
            "description": "Bad Request\n\n<details close>\n<summary>ErrorDetails</summary>\n\ncode | attribute | 対処方法\n-----|-----------|----------\nnot_found | contract | 指定したContractIdを確認してください\ninvalid | schema | 指定したパラメータを確認してください\n\n</details>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                },
                "examples": {
                  "BadRequest": {
                    "$ref": "#/components/examples/BadRequest"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "putContractLabels",
        "summary": "DPF契約情報のラベル一括更新",
        "description": "指定したContractIdのラベルを一括更新します。\\\nエラー発生時はErrorDetailsにtargetキーが付与され、問題の箇所が特定できます。\n",
        "tags": [
          "contracts"
        ],
        "security": [
          {
            "DPFOperator": [
              "dpf_write"
            ]
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/PutContractLabels"
        },
        "responses": {
          "202": {
            "$ref": "#/components/responses/Accepted"
          },
          "400": {
            "$ref": "#/components/responses/PutContractLabelsBadRequest"
          }
        }
      }
    },
    "/contracts/{ContractId}/zones": {
      "parameters": [
        {
          "$ref": "#/components/parameters/ContractId"
        }
      ],
      "get": {
        "operationId": "getContractsZoneList",
        "summary": "DPF契約に紐付くゾーンの一覧取得",
        "description": "指定したContractIdのDPF契約に紐付くゾーンの一覧を取得します。\\\n\"_keywords\" から始まるパラメータは、合計で30個まで指定可能です。\n",
        "tags": [
          "zones (contracts)"
        ],
        "security": [
          {
            "DPFViewer": [
              "dpf_read"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/Type"
          },
          {
            "$ref": "#/components/parameters/Offset"
          },
          {
            "$ref": "#/components/parameters/Limit"
          },
          {
            "$ref": "#/components/parameters/KeywordsFullText"
          },
          {
            "$ref": "#/components/parameters/KeywordsServiceCode"
          },
          {
            "$ref": "#/components/parameters/KeywordsName"
          },
          {
            "$ref": "#/components/parameters/KeywordsNetwork"
          },
          {
            "$ref": "#/components/parameters/KeywordsZonesState"
          },
          {
            "$ref": "#/components/parameters/KeywordsZonesFavorite"
          },
          {
            "$ref": "#/components/parameters/KeywordsDescription"
          },
          {
            "$ref": "#/components/parameters/KeywordsCommonConfigId"
          },
          {
            "$ref": "#/components/parameters/KeywordsZoneProxyEnabled"
          },
          {
            "$ref": "#/components/parameters/KeywordsLabel"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetZones"
                },
                "examples": {
                  "GetZones": {
                    "$ref": "#/components/examples/GetZones"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request\n\n<details close>\n<summary>ErrorDetails</summary>\n\ncode | attribute | 対処方法\n-----|-----------|----------\nnot_found | contract | 指定したContractIdを確認してください\ninvalid | schema | 指定したパラメータを確認してください\ninvalid | keywords | 指定したパラメータの型を確認してください\n\n</details>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                },
                "examples": {
                  "BadRequest": {
                    "$ref": "#/components/examples/BadRequest"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/contracts/{ContractId}/zones/common_configs": {
      "parameters": [
        {
          "$ref": "#/components/parameters/ContractId"
        }
      ],
      "patch": {
        "operationId": "patchContractsZoneCommonConfigs",
        "summary": "DPF契約に紐付くゾーンの共通設定の更新",
        "description": "指定したContractIdの共通設定を切り替えます。\n",
        "tags": [
          "zones (contracts)"
        ],
        "security": [
          {
            "DPFOperator": [
              "dpf_write"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PatchContractsZones"
              },
              "examples": {
                "PatchCommonConfig": {
                  "$ref": "#/components/examples/PatchContractsZones"
                }
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Accepted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AsyncResponse"
                },
                "examples": {
                  "AsyncResponse": {
                    "$ref": "#/components/examples/AsyncResponse"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request\n\n<details close>\n<summary>ErrorDetails</summary>\n\ncode | attribute | 対処方法\n-----|-----------|----------\nnot_found | contract | 指定したContractIdを確認してください\ninvalid | schema | 指定したパラメータを確認してください\nnot_found | common_config | 指定した共通設定を確認してください\nnot_found | zones | 指定したゾーンを確認してください\n\n</details>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                },
                "examples": {
                  "BadRequest": {
                    "$ref": "#/components/examples/BadRequest"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/contracts/{ContractId}/zones/count": {
      "parameters": [
        {
          "$ref": "#/components/parameters/ContractId"
        }
      ],
      "get": {
        "operationId": "getContractsZoneListCount",
        "summary": "DPF契約に紐付くゾーンの件数取得",
        "description": "指定したContractIdのDPF契約に紐付くゾーンの件数を取得します。\\\n\"_keywords\" から始まるパラメータは、合計で30個まで指定可能です。\n",
        "tags": [
          "zones (contracts)"
        ],
        "security": [
          {
            "DPFViewer": [
              "dpf_read"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/Type"
          },
          {
            "$ref": "#/components/parameters/KeywordsFullText"
          },
          {
            "$ref": "#/components/parameters/KeywordsServiceCode"
          },
          {
            "$ref": "#/components/parameters/KeywordsName"
          },
          {
            "$ref": "#/components/parameters/KeywordsNetwork"
          },
          {
            "$ref": "#/components/parameters/KeywordsZonesState"
          },
          {
            "$ref": "#/components/parameters/KeywordsZonesFavorite"
          },
          {
            "$ref": "#/components/parameters/KeywordsDescription"
          },
          {
            "$ref": "#/components/parameters/KeywordsCommonConfigId"
          },
          {
            "$ref": "#/components/parameters/KeywordsZoneProxyEnabled"
          },
          {
            "$ref": "#/components/parameters/KeywordsLabel"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCount"
                },
                "examples": {
                  "GetCount": {
                    "$ref": "#/components/examples/GetCount"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request\n\n<details close>\n<summary>ErrorDetails</summary>\n\ncode | attribute | 対処方法\n-----|-----------|----------\nnot_found | contract | 指定したContractIdを確認してください\ninvalid | schema | 指定したパラメータを確認してください\ninvalid | keywords | 指定したパラメータの型を確認してください\n\n</details>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                },
                "examples": {
                  "BadRequest": {
                    "$ref": "#/components/examples/BadRequest"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/contracts/{ContractId}/lb_domains": {
      "parameters": [
        {
          "$ref": "#/components/parameters/ContractId"
        }
      ],
      "get": {
        "operationId": "getContractsLbDomainList",
        "summary": "DPF契約に紐付くLBドメインの一覧取得",
        "description": "指定したContractIdのDPF契約に紐付くLBドメインの一覧を取得します。\\\n\"_keywords\" から始まるパラメータは、合計で30個まで指定可能です。\\\nエラー発生時はErrorDetailsにtargetキーが付与され、問題の箇所が特定できます。\n",
        "tags": [
          "lb_domains (contracts)"
        ],
        "security": [
          {
            "DPFViewer": [
              "dpf_read"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/Type"
          },
          {
            "$ref": "#/components/parameters/Offset"
          },
          {
            "$ref": "#/components/parameters/Limit"
          },
          {
            "$ref": "#/components/parameters/KeywordsFullText"
          },
          {
            "$ref": "#/components/parameters/KeywordsServiceCode"
          },
          {
            "$ref": "#/components/parameters/KeywordsName"
          },
          {
            "$ref": "#/components/parameters/KeywordsLbDomainState"
          },
          {
            "$ref": "#/components/parameters/KeywordsLbDomainFavorite"
          },
          {
            "$ref": "#/components/parameters/KeywordsDescription"
          },
          {
            "$ref": "#/components/parameters/KeywordsCommonConfigId"
          },
          {
            "$ref": "#/components/parameters/KeywordsLabel"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetLbDomains"
                },
                "examples": {
                  "GetLbDomains": {
                    "$ref": "#/components/examples/GetLbDomains"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request\n\n<details close>\n<summary>ErrorDetails</summary>\n\ncode | attribute | 対処方法\n-----|-----------|----------\nnot_found | contract | 指定したContractIdを確認してください\ninvalid | schema | 指定したパラメータを確認してください\ninvalid_char_type_value | keywords | 指定したパラメータの文字種を確認してください\ninvalid_type_value | keywords | 指定したパラメータの型を確認してください\n\n</details>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TargetBadRequest"
                },
                "examples": {
                  "BadRequest": {
                    "$ref": "#/components/examples/BadRequest"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/contracts/{ContractId}/lb_domains/common_configs": {
      "parameters": [
        {
          "$ref": "#/components/parameters/ContractId"
        }
      ],
      "patch": {
        "operationId": "patchContractsLbDomainCommonConfigs",
        "summary": "DPF契約に紐付くLBドメインの共通設定の更新",
        "description": "指定したContractIdの共通設定を切り替えます。\\\nエラー発生時はErrorDetailsにtargetキーが付与され、問題の箇所が特定できます。\n",
        "tags": [
          "lb_domains (contracts)"
        ],
        "security": [
          {
            "DPFOperator": [
              "dpf_write"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PatchContractsLbDomains"
              },
              "examples": {
                "PatchCommonConfig": {
                  "$ref": "#/components/examples/PatchContractsLbDomains"
                }
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Accepted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AsyncResponse"
                },
                "examples": {
                  "AsyncResponse": {
                    "$ref": "#/components/examples/AsyncResponse"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request\n\n<details close>\n<summary>ErrorDetails</summary>\n\ncode | attribute | 対処方法\n-----|-----------|----------\nnot_found | contract | 指定したContractIdを確認してください\nnot_found | common_config | 指定した共通設定を確認してください\nnot_found | lb_domains | 指定したLbDomainIdを確認してください\ninvalid_char_type_id | lb_domains | 指定したLbDomainIdの文字種を確認してください\ninvalid | schema | 指定したパラメータを確認してください\n\n</details>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TargetBadRequest"
                },
                "examples": {
                  "BadRequest": {
                    "$ref": "#/components/examples/BadRequest"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/contracts/{ContractId}/lb_domains/count": {
      "parameters": [
        {
          "$ref": "#/components/parameters/ContractId"
        }
      ],
      "get": {
        "operationId": "getContractsLbDomainListCount",
        "summary": "DPF契約に紐付くLBドメインの件数取得",
        "description": "指定したContractIdのDPF契約に紐付くLBドメインの件数を取得します。\\\n\"_keywords\" から始まるパラメータは、合計で30個まで指定可能です。\\\nエラー発生時はErrorDetailsにtargetキーが付与され、問題の箇所が特定できます。\n",
        "tags": [
          "lb_domains (contracts)"
        ],
        "security": [
          {
            "DPFViewer": [
              "dpf_read"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/Type"
          },
          {
            "$ref": "#/components/parameters/KeywordsFullText"
          },
          {
            "$ref": "#/components/parameters/KeywordsServiceCode"
          },
          {
            "$ref": "#/components/parameters/KeywordsName"
          },
          {
            "$ref": "#/components/parameters/KeywordsLbDomainState"
          },
          {
            "$ref": "#/components/parameters/KeywordsLbDomainFavorite"
          },
          {
            "$ref": "#/components/parameters/KeywordsDescription"
          },
          {
            "$ref": "#/components/parameters/KeywordsCommonConfigId"
          },
          {
            "$ref": "#/components/parameters/KeywordsLabel"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCount"
                },
                "examples": {
                  "GetCount": {
                    "$ref": "#/components/examples/GetCount"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request\n\n<details close>\n<summary>ErrorDetails</summary>\n\ncode | attribute | 対処方法\n-----|-----------|----------\nnot_found | contract | 指定したContractIdを確認してください\ninvalid | schema | 指定したパラメータを確認してください\ninvalid_char_type_value | keywords | 指定したパラメータの文字種を確認してください\ninvalid_type_value | keywords | 指定したパラメータの型を確認してください\n\n</details>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TargetBadRequest"
                },
                "examples": {
                  "BadRequest": {
                    "$ref": "#/components/examples/BadRequest"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/zones/{ZoneId}/default_ttl": {
      "parameters": [
        {
          "$ref": "#/components/parameters/ZoneId"
        }
      ],
      "get": {
        "operationId": "getDefaultTtlList",
        "summary": "デフォルトTTLの取得",
        "description": "デフォルトTTLの一覧を取得します。\n",
        "tags": [
          "default_ttl"
        ],
        "security": [
          {
            "DPFViewer": [
              "dpf_read"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetDefaultTtl"
                },
                "examples": {
                  "GetDefaultTtl": {
                    "$ref": "#/components/examples/GetDefaultTtl"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request\n\n<details close>\n<summary>ErrorDetails</summary>\n\ncode | attribute | 対処方法\n-----|-----------|----------\nnot_found | zone | 指定したZoneIdを確認してください\ninvalid | schema | 指定したパラメータを確認してください\n\n</details>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                },
                "examples": {
                  "BadRequest": {
                    "$ref": "#/components/examples/BadRequest"
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "operationId": "patchDefaultTtl",
        "summary": "デフォルトTTLの更新",
        "description": "デフォルトTTLを更新します。\\\n[**編集中レコードのゾーン反映**](#tag/zones/operation/patchZoneChanges)を実行するまでは権威サーバには反映されません。\n",
        "tags": [
          "default_ttl"
        ],
        "security": [
          {
            "DPFOperator": [
              "dpf_write"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PatchDefaultTtl"
              },
              "examples": {
                "PatchDefaultTtl": {
                  "$ref": "#/components/examples/PatchDefaultTtl"
                }
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Accepted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AsyncResponse"
                },
                "examples": {
                  "AsyncResponse": {
                    "$ref": "#/components/examples/AsyncResponse"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request\n\n<details close>\n<summary>ErrorDetails</summary>\n\ncode | attribute | 対処方法\n-----|-----------|----------\nnot_found | zone | 指定したZoneIdを確認してください\ninvalid | schema | 指定したパラメータを確認してください\n\n</details>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                },
                "examples": {
                  "BadRequest": {
                    "$ref": "#/components/examples/BadRequest"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/zones/{ZoneId}/default_ttl/changes": {
      "parameters": [
        {
          "$ref": "#/components/parameters/ZoneId"
        }
      ],
      "delete": {
        "operationId": "deleteDefaultTtlChanges",
        "summary": "編集中デフォルトTTLの取消",
        "description": "デフォルトTTLの操作を取消します。\n",
        "tags": [
          "default_ttl"
        ],
        "security": [
          {
            "DPFOperator": [
              "dpf_write"
            ]
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AsyncResponse"
                },
                "examples": {
                  "AsyncResponse": {
                    "$ref": "#/components/examples/AsyncResponse"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request\n\n<details close>\n<summary>ErrorDetails</summary>\n\ncode | attribute | 対処方法\n-----|-----------|----------\nnot_found | zone | 指定したZoneIdを確認してください\ninvalid | schema | 指定したパラメータを確認してください\nforbidden | default_ttl | デフォルトTTLの状態を確認してください\n\n</details>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                },
                "examples": {
                  "BadRequest": {
                    "$ref": "#/components/examples/BadRequest"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/zones/{ZoneId}/default_ttl/diffs": {
      "parameters": [
        {
          "$ref": "#/components/parameters/ZoneId"
        }
      ],
      "get": {
        "operationId": "getDefaultTtlDiffs",
        "summary": "デフォルトTTLの編集差分の取得",
        "description": "現在DNSに登録されているデフォルトTTLと反映予定のデフォルトTTLの差分一覧を取得します。\n",
        "tags": [
          "default_ttl"
        ],
        "security": [
          {
            "DPFViewer": [
              "dpf_read"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetDefaultTtlDiffs"
                },
                "examples": {
                  "GetDiffs": {
                    "$ref": "#/components/examples/GetDiffsDefaultTtl"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request\n\n<details close>\n<summary>ErrorDetails</summary>\n\ncode | attribute | 対処方法\n-----|-----------|----------\nnot_found | zone | 指定したZoneIdを確認してください\ninvalid | schema | 指定したパラメータを確認してください\n\n</details>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                },
                "examples": {
                  "BadRequest": {
                    "$ref": "#/components/examples/BadRequest"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/delegations": {
      "get": {
        "operationId": "getDelegationList",
        "summary": "ネームサーバ申請候補の一覧取得",
        "description": "ネームサーバとして申請可能なゾーンの候補の一覧を取得します。\\\n\"_keywords\" から始まるパラメータは、合計で30個まで指定可能です。\n",
        "tags": [
          "delegations"
        ],
        "security": [
          {
            "DPFViewer": [
              "dpf_read"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/Type"
          },
          {
            "$ref": "#/components/parameters/Offset"
          },
          {
            "$ref": "#/components/parameters/Limit"
          },
          {
            "$ref": "#/components/parameters/KeywordsFullText"
          },
          {
            "$ref": "#/components/parameters/KeywordsServiceCode"
          },
          {
            "$ref": "#/components/parameters/KeywordsName"
          },
          {
            "$ref": "#/components/parameters/KeywordsNetwork"
          },
          {
            "$ref": "#/components/parameters/KeywordsZonesFavorite"
          },
          {
            "$ref": "#/components/parameters/KeywordsDescription"
          },
          {
            "$ref": "#/components/parameters/KeywordsDelegationsRequested"
          },
          {
            "$ref": "#/components/parameters/KeywordsLabel"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetDelegations"
                },
                "examples": {
                  "GetDelegations": {
                    "$ref": "#/components/examples/GetDelegations"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request\n\n<details close>\n<summary>ErrorDetails</summary>\n\ncode | attribute | 対処方法\n-----|-----------|----------\ninvalid | schema | 指定したパラメータを確認してください\ninvalid | keywords | 指定したパラメータの型を確認してください\n\n</details>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                },
                "examples": {
                  "BadRequest": {
                    "$ref": "#/components/examples/BadRequest"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "operationId": "postDelegation",
        "summary": "ネームサーバ申請",
        "description": "指定したゾーンを申請します。\n",
        "tags": [
          "delegations"
        ],
        "security": [
          {
            "DPFOperator": [
              "dpf_write"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PostDelegations"
              },
              "examples": {
                "PostDelegations": {
                  "$ref": "#/components/examples/PostDelegations"
                }
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Accepted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AsyncResponse"
                },
                "examples": {
                  "AsyncResponse": {
                    "$ref": "#/components/examples/AsyncResponse"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request\n\n<details close>\n<summary>ErrorDetails</summary>\n\ncode | attribute | 対処方法\n-----|-----------|----------\nnot_found | zones | 指定したZoneIdを確認してください\ninvalid | schema | 指定したパラメータを確認してください\n\n</details>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                },
                "examples": {
                  "BadRequest": {
                    "$ref": "#/components/examples/BadRequest"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/delegations/count": {
      "get": {
        "operationId": "getDelegationListCount",
        "summary": "ネームサーバ申請候補の件数取得",
        "description": "ネームサーバとして申請可能なゾーンの候補の件数を取得します。\\\n\"_keywords\" から始まるパラメータは、合計で30個まで指定可能です。\n",
        "tags": [
          "delegations"
        ],
        "security": [
          {
            "DPFViewer": [
              "dpf_read"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/Type"
          },
          {
            "$ref": "#/components/parameters/KeywordsFullText"
          },
          {
            "$ref": "#/components/parameters/KeywordsServiceCode"
          },
          {
            "$ref": "#/components/parameters/KeywordsName"
          },
          {
            "$ref": "#/components/parameters/KeywordsNetwork"
          },
          {
            "$ref": "#/components/parameters/KeywordsZonesFavorite"
          },
          {
            "$ref": "#/components/parameters/KeywordsDescription"
          },
          {
            "$ref": "#/components/parameters/KeywordsDelegationsRequested"
          },
          {
            "$ref": "#/components/parameters/KeywordsLabel"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCount"
                },
                "examples": {
                  "GetCount": {
                    "$ref": "#/components/examples/GetCount"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request\n\n<details close>\n<summary>ErrorDetails</summary>\n\ncode | attribute | 対処方法\n-----|-----------|----------\ninvalid | schema | 指定したパラメータを確認してください\ninvalid | keywords | 指定したパラメータの型を確認してください\n\n</details>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                },
                "examples": {
                  "BadRequest": {
                    "$ref": "#/components/examples/BadRequest"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/zones/{ZoneId}/dnssec": {
      "parameters": [
        {
          "$ref": "#/components/parameters/ZoneId"
        }
      ],
      "get": {
        "operationId": "getDnssecList",
        "summary": "DNSSEC情報の取得",
        "description": "DNSSEC情報の一覧を取得します。\n",
        "tags": [
          "dnssec"
        ],
        "security": [
          {
            "DPFViewer": [
              "dpf_read"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetDnssec"
                },
                "examples": {
                  "GetDnssec": {
                    "$ref": "#/components/examples/GetDnssec"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request\n\n<details close>\n<summary>ErrorDetails</summary>\n\ncode | attribute | 対処方法\n-----|-----------|----------\nnot_found | zone | 指定したZoneIdを確認してください\ninvalid | schema | 指定したパラメータを確認してください\n\n</details>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                },
                "examples": {
                  "BadRequest": {
                    "$ref": "#/components/examples/BadRequest"
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "operationId": "patchDnssec",
        "summary": "DNSSEC情報の更新",
        "description": "DNSSECの情報を更新します。\n",
        "tags": [
          "dnssec"
        ],
        "security": [
          {
            "DPFOperator": [
              "dpf_write"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PatchDnssec"
              },
              "examples": {
                "PatchDnssec": {
                  "$ref": "#/components/examples/PatchDnssec"
                }
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Accepted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AsyncResponse"
                },
                "examples": {
                  "AsyncResponse": {
                    "$ref": "#/components/examples/AsyncResponse"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request\n\n<details close>\n<summary>ErrorDetails</summary>\n\ncode | attribute | 対処方法\n-----|-----------|----------\nnot_found | zone | 指定したZoneIdを確認してください\ninvalid | schema | 指定したパラメータを確認してください\nforbidden | dnssec | DNSSECの状態を確認してください\nresolve_error | dnssec | DNSSECの状態を確認してください\n\n</details>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                },
                "examples": {
                  "BadRequest": {
                    "$ref": "#/components/examples/BadRequest"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/zones/{ZoneId}/dnssec/ksk_rollover": {
      "parameters": [
        {
          "$ref": "#/components/parameters/ZoneId"
        }
      ],
      "patch": {
        "operationId": "patchDnssecKskRollover",
        "summary": "KSKロールオーバーの開始",
        "description": "指定したゾーンに対してKSKロールオーバーを開始します。\\\nロールオーバーはds_stateが「3」の場合のみ開始できます。\n",
        "tags": [
          "dnssec"
        ],
        "security": [
          {
            "DPFOperator": [
              "dpf_write"
            ]
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AsyncResponse"
                },
                "examples": {
                  "AsyncResponse": {
                    "$ref": "#/components/examples/AsyncResponse"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request\n\n<details close>\n<summary>ErrorDetails</summary>\n\ncode | attribute | 対処方法\n-----|-----------|----------\nnot_found | zone | 指定したZoneIdを確認してください\ninvalid | schema | 指定したパラメータを確認してください\nforbidden | dnssec | DNSSECの状態を確認してください\n\n</details>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                },
                "examples": {
                  "BadRequest": {
                    "$ref": "#/components/examples/BadRequest"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/zones/{ZoneId}/ds_records": {
      "parameters": [
        {
          "$ref": "#/components/parameters/ZoneId"
        }
      ],
      "get": {
        "operationId": "getDsRecordList",
        "summary": "DSレコードの一覧取得",
        "description": "上位のネームサーバに登録が必要なDSレコードを取得できます。\n",
        "tags": [
          "ds_records"
        ],
        "security": [
          {
            "DPFViewer": [
              "dpf_read"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetDsRecords"
                },
                "examples": {
                  "GetDsRecords": {
                    "$ref": "#/components/examples/GetDsRecords"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request\n\n<details close>\n<summary>ErrorDetails</summary>\n\ncode | attribute | 対処方法\n-----|-----------|----------\nnot_found | zone | 指定したZoneIdを確認してください\ninvalid | schema | 指定したパラメータを確認してください\n\n</details>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                },
                "examples": {
                  "BadRequest": {
                    "$ref": "#/components/examples/BadRequest"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/jobs/{RequestId}": {
      "parameters": [
        {
          "$ref": "#/components/parameters/RequestId"
        }
      ],
      "get": {
        "operationId": "getJob",
        "summary": "非同期リクエストの状態確認",
        "description": "ジョブの進捗状況を取得します。\\\nこのAPIの詳しい利用方法は、[**非同期リクエスト**](#section/2./2.4)を参照してください。\n",
        "tags": [
          "jobs"
        ],
        "security": [
          {
            "DPFViewer": [
              "dpf_read"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetJobs"
                },
                "examples": {
                  "GetJobsRunning": {
                    "$ref": "#/components/examples/GetJobsRunning"
                  },
                  "GetJobsSuccessful": {
                    "$ref": "#/components/examples/GetJobsSuccessful"
                  },
                  "GetJobsFailed": {
                    "$ref": "#/components/examples/GetJobsFailed"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request\n\n<details close>\n<summary>ErrorDetails</summary>\n\ncode | attribute | 対処方法\n-----|-----------|----------\nnot_found | request_id | 指定したRequestIdを確認してください\ninvalid | schema | 指定したパラメータを確認してください\n\n</details>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                },
                "examples": {
                  "BadRequest": {
                    "$ref": "#/components/examples/BadRequest"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/contracts/{ContractId}/logs": {
      "parameters": [
        {
          "$ref": "#/components/parameters/ContractId"
        }
      ],
      "get": {
        "operationId": "getContractsLogList",
        "summary": "DPF契約操作ログの一覧取得",
        "description": "DPF契約を操作したログの一覧を取得します。\\\n\"_keywords\" から始まるパラメータは、合計で30個まで指定可能です。\n",
        "tags": [
          "logs (contracts)"
        ],
        "security": [
          {
            "DPFViewer": [
              "dpf_read"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/Type"
          },
          {
            "$ref": "#/components/parameters/LogsOffset"
          },
          {
            "$ref": "#/components/parameters/LogsLimit"
          },
          {
            "$ref": "#/components/parameters/StartDate"
          },
          {
            "$ref": "#/components/parameters/EndDate"
          },
          {
            "$ref": "#/components/parameters/TimeZone"
          },
          {
            "$ref": "#/components/parameters/Order"
          },
          {
            "$ref": "#/components/parameters/KeywordsFullText"
          },
          {
            "$ref": "#/components/parameters/KeywordsContractsLogsLogType"
          },
          {
            "$ref": "#/components/parameters/KeywordsOperator"
          },
          {
            "$ref": "#/components/parameters/KeywordsContractsLogsOperation"
          },
          {
            "$ref": "#/components/parameters/KeywordsTarget"
          },
          {
            "$ref": "#/components/parameters/KeywordsDetail"
          },
          {
            "$ref": "#/components/parameters/KeywordsRequestId"
          },
          {
            "$ref": "#/components/parameters/KeywordsContractsLogsStatus"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetContractsLogs"
                },
                "examples": {
                  "GetContractsLogs": {
                    "$ref": "#/components/examples/GetContractsLogs"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request\n\n<details close>\n<summary>ErrorDetails</summary>\n\ncode | attribute | 対処方法\n-----|-----------|----------\nnot_found | contract | 指定したContractIdを確認してください\ninvalid | schema | 指定したパラメータを確認してください\ninvalid | start_date | 指定した日付を確認してください\ninvalid | end_date | 指定した日付を確認してください\n\n</details>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                },
                "examples": {
                  "BadRequest": {
                    "$ref": "#/components/examples/BadRequest"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/contracts/{ContractId}/logs/count": {
      "parameters": [
        {
          "$ref": "#/components/parameters/ContractId"
        }
      ],
      "get": {
        "operationId": "getContractsLogListCount",
        "summary": "DPF契約操作ログの件数取得",
        "description": "DPF契約を操作したログの件数を取得します。\\\n\"_keywords\" から始まるパラメータは、合計で30個まで指定可能です。\n",
        "tags": [
          "logs (contracts)"
        ],
        "security": [
          {
            "DPFViewer": [
              "dpf_read"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/Type"
          },
          {
            "$ref": "#/components/parameters/StartDate"
          },
          {
            "$ref": "#/components/parameters/EndDate"
          },
          {
            "$ref": "#/components/parameters/TimeZone"
          },
          {
            "$ref": "#/components/parameters/KeywordsFullText"
          },
          {
            "$ref": "#/components/parameters/KeywordsContractsLogsLogType"
          },
          {
            "$ref": "#/components/parameters/KeywordsOperator"
          },
          {
            "$ref": "#/components/parameters/KeywordsContractsLogsOperation"
          },
          {
            "$ref": "#/components/parameters/KeywordsTarget"
          },
          {
            "$ref": "#/components/parameters/KeywordsDetail"
          },
          {
            "$ref": "#/components/parameters/KeywordsRequestId"
          },
          {
            "$ref": "#/components/parameters/KeywordsContractsLogsStatus"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCount"
                },
                "examples": {
                  "GetCount": {
                    "$ref": "#/components/examples/GetCount"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request\n\n<details close>\n<summary>ErrorDetails</summary>\n\ncode | attribute | 対処方法\n-----|-----------|----------\nnot_found | contract | 指定したContractIdを確認してください\ninvalid | schema | 指定したパラメータを確認してください\ninvalid | start_date | 指定した日付を確認してください\ninvalid | end_date | 指定した日付を確認してください\n\n</details>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                },
                "examples": {
                  "BadRequest": {
                    "$ref": "#/components/examples/BadRequest"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/zones/{ZoneId}/logs": {
      "parameters": [
        {
          "$ref": "#/components/parameters/ZoneId"
        }
      ],
      "get": {
        "operationId": "getZonesLogList",
        "summary": "ゾーン操作ログの一覧取得",
        "description": "ゾーンを操作したログの一覧を取得します。\\\n\"_keywords\" から始まるパラメータは、合計で30個まで指定可能です。\n",
        "tags": [
          "logs (zones)"
        ],
        "security": [
          {
            "DPFViewer": [
              "dpf_read"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/Type"
          },
          {
            "$ref": "#/components/parameters/LogsOffset"
          },
          {
            "$ref": "#/components/parameters/LogsLimit"
          },
          {
            "$ref": "#/components/parameters/StartDate"
          },
          {
            "$ref": "#/components/parameters/EndDate"
          },
          {
            "$ref": "#/components/parameters/TimeZone"
          },
          {
            "$ref": "#/components/parameters/Order"
          },
          {
            "$ref": "#/components/parameters/KeywordsFullText"
          },
          {
            "$ref": "#/components/parameters/KeywordsZonesLogsLogType"
          },
          {
            "$ref": "#/components/parameters/KeywordsOperator"
          },
          {
            "$ref": "#/components/parameters/KeywordsZonesLogsOperation"
          },
          {
            "$ref": "#/components/parameters/KeywordsTarget"
          },
          {
            "$ref": "#/components/parameters/KeywordsDetail"
          },
          {
            "$ref": "#/components/parameters/KeywordsRequestId"
          },
          {
            "$ref": "#/components/parameters/KeywordsZonesLogsStatus"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetZonesLogs"
                },
                "examples": {
                  "GetContractsLogs": {
                    "$ref": "#/components/examples/GetZonesLogs"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request\n\n<details close>\n<summary>ErrorDetails</summary>\n\ncode | attribute | 対処方法\n-----|-----------|----------\nnot_found | zone | 指定したZoneIdを確認してください\ninvalid | schema | 指定したパラメータを確認してください\ninvalid | start_date | 指定した日付を確認してください\ninvalid | end_date | 指定した日付を確認してください\n\n</details>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                },
                "examples": {
                  "BadRequest": {
                    "$ref": "#/components/examples/BadRequest"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/zones/{ZoneId}/logs/count": {
      "parameters": [
        {
          "$ref": "#/components/parameters/ZoneId"
        }
      ],
      "get": {
        "operationId": "getZonesLogListCount",
        "summary": "ゾーン操作ログの件数取得",
        "description": "ゾーンを操作したログの件数を取得します。\\\n\"_keywords\" から始まるパラメータは、合計で30個まで指定可能です。\n",
        "tags": [
          "logs (zones)"
        ],
        "security": [
          {
            "DPFViewer": [
              "dpf_read"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/Type"
          },
          {
            "$ref": "#/components/parameters/StartDate"
          },
          {
            "$ref": "#/components/parameters/EndDate"
          },
          {
            "$ref": "#/components/parameters/TimeZone"
          },
          {
            "$ref": "#/components/parameters/KeywordsFullText"
          },
          {
            "$ref": "#/components/parameters/KeywordsZonesLogsLogType"
          },
          {
            "$ref": "#/components/parameters/KeywordsOperator"
          },
          {
            "$ref": "#/components/parameters/KeywordsZonesLogsOperation"
          },
          {
            "$ref": "#/components/parameters/KeywordsTarget"
          },
          {
            "$ref": "#/components/parameters/KeywordsDetail"
          },
          {
            "$ref": "#/components/parameters/KeywordsRequestId"
          },
          {
            "$ref": "#/components/parameters/KeywordsZonesLogsStatus"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCount"
                },
                "examples": {
                  "GetCount": {
                    "$ref": "#/components/examples/GetCount"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request\n\n<details close>\n<summary>ErrorDetails</summary>\n\ncode | attribute | 対処方法\n-----|-----------|----------\nnot_found | zone | 指定したZoneIdを確認してください\ninvalid | schema | 指定したパラメータを確認してください\ninvalid | start_date | 指定した日付を確認してください\ninvalid | end_date | 指定した日付を確認してください\n\n</details>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                },
                "examples": {
                  "BadRequest": {
                    "$ref": "#/components/examples/BadRequest"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/ping": {
      "get": {
        "operationId": "getPing",
        "summary": "API疎通確認",
        "description": "APIへの疎通を確認できます。\n",
        "tags": [
          "ping"
        ],
        "security": [
          {
            "DPFViewer": [
              "dpf_read"
            ]
          },
          {
            "DPFOperator": [
              "dpf_write"
            ]
          },
          {
            "ContractOperator": [
              "dpf_contract"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetPing"
                },
                "examples": {
                  "GetPing": {
                    "$ref": "#/components/examples/GetPing"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/contracts/{ContractId}/qps/histories": {
      "parameters": [
        {
          "$ref": "#/components/parameters/ContractId"
        }
      ],
      "get": {
        "operationId": "getQpList",
        "summary": "月別のQPSの一覧取得",
        "description": "DPF契約の月別のQPSを取得できます。\\\nDPF契約に紐付くゾーンおよびLBドメインの月別のQPSと、\\\nゾーンおよびLBドメインのクエリ数を元に集計したDPF契約の月別のQPSが取得できます。\n",
        "tags": [
          "qps"
        ],
        "security": [
          {
            "DPFViewer": [
              "dpf_read"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetQpsHistories"
                },
                "examples": {
                  "GetQps": {
                    "$ref": "#/components/examples/GetQpsHistories"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request\n\n<details close>\n<summary>ErrorDetails</summary>\n\ncode | attribute | 対処方法\n-----|-----------|----------\nnot_found | contract | 指定したContractIdを確認してください\ninvalid | schema | 指定したパラメータを確認してください\n\n</details>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                },
                "examples": {
                  "BadRequest": {
                    "$ref": "#/components/examples/BadRequest"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/zones/{ZoneId}/records": {
      "parameters": [
        {
          "$ref": "#/components/parameters/ZoneId"
        }
      ],
      "get": {
        "operationId": "getRecordList",
        "summary": "レコードの一覧取得",
        "description": "レコード情報の一覧を取得します。\\\n\"_keywords\" から始まるパラメータは、合計で30個まで指定可能です。\n",
        "tags": [
          "records"
        ],
        "security": [
          {
            "DPFViewer": [
              "dpf_read"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/Type"
          },
          {
            "$ref": "#/components/parameters/Offset"
          },
          {
            "$ref": "#/components/parameters/Limit"
          },
          {
            "$ref": "#/components/parameters/KeywordsFullText"
          },
          {
            "$ref": "#/components/parameters/KeywordsName"
          },
          {
            "$ref": "#/components/parameters/KeywordsTtl"
          },
          {
            "$ref": "#/components/parameters/KeywordsRrtype"
          },
          {
            "$ref": "#/components/parameters/KeywordsRdata"
          },
          {
            "$ref": "#/components/parameters/KeywordsDescription"
          },
          {
            "$ref": "#/components/parameters/KeywordsOperator"
          },
          {
            "$ref": "#/components/parameters/KeywordsLabel"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetRecords"
                },
                "examples": {
                  "GetRecords": {
                    "$ref": "#/components/examples/GetRecords"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request\n\n<details close>\n<summary>ErrorDetails</summary>\n\ncode | attribute | 対処方法\n-----|-----------|----------\nnot_found | zone | 指定したZoneIdを確認してください\ninvalid | schema | 指定したパラメータを確認してください\ninvalid | keywords | 指定したパラメータの型を確認してください\n\n</details>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                },
                "examples": {
                  "BadRequest": {
                    "$ref": "#/components/examples/BadRequest"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "putRecord",
        "summary": "レコードの一括更新",
        "description": "レコードを一括更新します。\\\n[**編集中レコードのゾーン反映**](#tag/zones/operation/patchZoneChanges)を実行するまでは権威サーバには反映されません。\n",
        "tags": [
          "records"
        ],
        "security": [
          {
            "DPFOperator": [
              "dpf_write"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PutRecord"
              },
              "examples": {
                "PutRecord": {
                  "$ref": "#/components/examples/PutRecord"
                }
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Accepted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AsyncResponse"
                },
                "examples": {
                  "AsyncResponse": {
                    "$ref": "#/components/examples/AsyncResponse"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request\n\n<details close>\n<summary>ErrorDetails</summary>\n\ncode | attribute | 対処方法\n-----|-----------|----------\ninvalid | schema | 指定したパラメータを確認してください\nnot_found | zone | 指定したZoneIdを確認してください\nforbidden | zone | ゾーンプロキシの設定が有効のため操作できません\ntoo_large | records | 指定したパラメータのデータ量が10Mibを超えています\nrequired | records | レコードのパラメータを指定してください\nduplicated | records | 同一nameおよびrrtypeのレコードを指定しています\ninvalid | records | レコードとして不正な形式です\ninvalid_type | records | 指定したレコードの型を確認してください\ninvalid_length | records | 指定したレコードの文字数を確認してください\ninvalid_char_type | records | 指定したレコードの文字種を確認してください\ninvalid_format | records | 指定したレコードのフォーマットを確認してください\nout_of_range | records | 指定したパラメータの数値を確認してください\ntoo_few | records | 登録の必須指定数を下回っています\ntoo_many | records | 登録の上限数を超えています\nforbidden | records | 許可されていない値を指定しています\nsoa_not_found | records | SOAレコードを指定してください\napex_ns_not_found | records | Zone ApexのNSレコードを指定してください\ncname_and_other_mixed | records | 指定したNameがCNAMEと同一のため操作できません\ncorresponding_ns_not_found | records | 指定したDSレコードのnameに対応するNSレコードが存在していません\ninvalid_quotes | records | TXTレコードのrdataは「\"」で囲むようにしてください。<br>JSON string として \" で囲まれている内部に、さらに rdata としての \" で囲んで含める必要があります。<br>したがって、JSON string 全体としては \"\\\\\"example\\\\\"\" といった形になります。\nreference_not_found | records | 参照先が存在しません\nreference_alias | records | 指定した参照先がCNAMEです\nmultiple_rdata_found | records | 指定したレコードタイプでは複数のrdataを指定することはできません\ninvalid_length_key | records | 指定したlabel_keyの文字数を確認してください\ninvalid_char_type_key | records | 指定したlabel_keyの文字種を確認してください\ninvalid_format_key | records | 指定したlabel_keyのフォーマットを確認してください\ninvalid_type_value | records | 指定したlabel_valueの型を確認してください\ninvalid_length_value | records | 指定したlabel_valueの文字数を確認してください\ninvalid_char_type_value | records | 指定したlabel_valueの文字種を確認してください\ninvalid_format_value | records | 指定したlabel_valueのフォーマットを確認してください\n</details>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TargetBadRequest"
                },
                "examples": {
                  "BadRequest": {
                    "$ref": "#/components/examples/BadRequest"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "operationId": "postRecord",
        "summary": "レコードの作成",
        "description": "新しくレコードを作成します。\\\n[**編集中レコードのゾーン反映**](#tag/zones/operation/patchZoneChanges)を実行するまでは権威サーバには反映されません。\n",
        "tags": [
          "records"
        ],
        "security": [
          {
            "DPFOperator": [
              "dpf_write"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PostRecord"
              },
              "examples": {
                "PostRecord": {
                  "$ref": "#/components/examples/PostRecord"
                }
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Accepted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AsyncResponse"
                },
                "examples": {
                  "AsyncResponse": {
                    "$ref": "#/components/examples/AsyncResponse"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request\n\n<details close>\n<summary>ErrorDetails</summary>\n\ncode | attribute | 対処方法\n-----|-----------|----------\nnot_found | zone | 指定したZoneIdを確認してください\nforbidden | zone | ゾーンプロキシの設定が有効のため操作できません\ninvalid | schema | 指定したパラメータを確認してください\ninvalid | record | レコードとして不正な形式です\nduplicated | record | 同一nameおよびrrtypeのレコードがすでに作成されています\ninvalid | name | 指定したnameを確認してください\ncname_and_other_mixed | name | 指定したnameがCNAMEと同一です\ncorresponding_ns_not_found | name | 指定したDSレコードのnameに対応するNSレコードが存在していません\ninvalid_quotes | rdata | TXTレコードのrdataは「\"」で囲むようにしてください。<br>JSON string として \" で囲まれている内部に、さらに rdata としての \" で囲んで含める必要があります。<br>したがって、JSON string 全体としては \"\\\\\"example\\\\\"\" といった形になります。\ninvalid | rdata | 指定したrdataを確認してください\nreference_not_found | rdata | 参照先が存在しません\nreference_alias | rdata | 指定した参照先がCNAMEです\nmultiple_rdata_found | rdata | 指定したレコードタイプでは複数のrdataを指定することはできません\ninvalid_format_key | labels | 指定したlabel_keyのフォーマットを確認してください\ninvalid_length_key | labels | 指定したlabel_keyの文字数を確認してください\ninvalid_char_type_key | labels | 指定したlabel_keyの文字種を確認してください\ninvalid_type_value | labels | 指定したlabel_valueの型を確認してください\ninvalid_format_value | labels | 指定したlabel_valueのフォーマットを確認してください\ninvalid_length_value | labels | 指定したlabel_valueの文字数を確認してください\ninvalid_char_type_value | labels | 指定したlabel_valueの文字種を確認してください\n\n</details>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TargetBadRequest"
                },
                "examples": {
                  "BadRequest": {
                    "$ref": "#/components/examples/BadRequest"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/zones/{ZoneId}/records/count": {
      "parameters": [
        {
          "$ref": "#/components/parameters/ZoneId"
        }
      ],
      "get": {
        "operationId": "getRecordListCount",
        "summary": "レコードの件数取得",
        "description": "レコード情報の件数を取得します。\\\n\"_keywords\" から始まるパラメータは、合計で30個まで指定可能です。\n",
        "tags": [
          "records"
        ],
        "security": [
          {
            "DPFViewer": [
              "dpf_read"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/Type"
          },
          {
            "$ref": "#/components/parameters/KeywordsFullText"
          },
          {
            "$ref": "#/components/parameters/KeywordsName"
          },
          {
            "$ref": "#/components/parameters/KeywordsTtl"
          },
          {
            "$ref": "#/components/parameters/KeywordsRrtype"
          },
          {
            "$ref": "#/components/parameters/KeywordsRdata"
          },
          {
            "$ref": "#/components/parameters/KeywordsDescription"
          },
          {
            "$ref": "#/components/parameters/KeywordsOperator"
          },
          {
            "$ref": "#/components/parameters/KeywordsLabel"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCount"
                },
                "examples": {
                  "GetCount": {
                    "$ref": "#/components/examples/GetCount"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request\n\n<details close>\n<summary>ErrorDetails</summary>\n\ncode | attribute | 対処方法\n-----|-----------|----------\nnot_found | zone | 指定したZoneIdを確認してください\ninvalid | schema | 指定したパラメータを確認してください\ninvalid | keywords | 指定したパラメータの型を確認してください\n\n</details>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                },
                "examples": {
                  "BadRequest": {
                    "$ref": "#/components/examples/BadRequest"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/zones/{ZoneId}/records/currents": {
      "parameters": [
        {
          "$ref": "#/components/parameters/ZoneId"
        }
      ],
      "get": {
        "operationId": "getRecordCurrents",
        "summary": "DNS反映済レコードの一覧取得",
        "description": "現在DNSに登録されているレコードの一覧を取得します。\\\n\"_keywords\" から始まるパラメータは、合計で30個まで指定可能です。\n",
        "tags": [
          "records"
        ],
        "security": [
          {
            "DPFViewer": [
              "dpf_read"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/Type"
          },
          {
            "$ref": "#/components/parameters/Offset"
          },
          {
            "$ref": "#/components/parameters/Limit"
          },
          {
            "$ref": "#/components/parameters/KeywordsFullText"
          },
          {
            "$ref": "#/components/parameters/KeywordsName"
          },
          {
            "$ref": "#/components/parameters/KeywordsTtl"
          },
          {
            "$ref": "#/components/parameters/KeywordsRrtype"
          },
          {
            "$ref": "#/components/parameters/KeywordsRdata"
          },
          {
            "$ref": "#/components/parameters/KeywordsDescription"
          },
          {
            "$ref": "#/components/parameters/KeywordsOperator"
          },
          {
            "$ref": "#/components/parameters/KeywordsLabel"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetRecords"
                },
                "examples": {
                  "GetRecords": {
                    "$ref": "#/components/examples/GetRecords"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request\n\n<details close>\n<summary>ErrorDetails</summary>\n\ncode | attribute | 対処方法\n-----|-----------|----------\nnot_found | zone | 指定したZoneIdを確認してください\ninvalid | schema | 指定したパラメータを確認してください\ninvalid | keywords | 指定したパラメータの型を確認してください\n\n</details>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                },
                "examples": {
                  "BadRequest": {
                    "$ref": "#/components/examples/BadRequest"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/zones/{ZoneId}/records/currents/count": {
      "parameters": [
        {
          "$ref": "#/components/parameters/ZoneId"
        }
      ],
      "get": {
        "operationId": "getRecordCurrentsCount",
        "summary": "DNS反映済レコードの件数取得",
        "description": "現在DNSに登録されているレコードの件数を取得します。\\\n\"_keywords\" から始まるパラメータは、合計で30個まで指定可能です。\n",
        "tags": [
          "records"
        ],
        "security": [
          {
            "DPFViewer": [
              "dpf_read"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/Type"
          },
          {
            "$ref": "#/components/parameters/KeywordsFullText"
          },
          {
            "$ref": "#/components/parameters/KeywordsName"
          },
          {
            "$ref": "#/components/parameters/KeywordsTtl"
          },
          {
            "$ref": "#/components/parameters/KeywordsRrtype"
          },
          {
            "$ref": "#/components/parameters/KeywordsRdata"
          },
          {
            "$ref": "#/components/parameters/KeywordsDescription"
          },
          {
            "$ref": "#/components/parameters/KeywordsOperator"
          },
          {
            "$ref": "#/components/parameters/KeywordsLabel"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCount"
                },
                "examples": {
                  "GetCount": {
                    "$ref": "#/components/examples/GetCount"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request\n\n<details close>\n<summary>ErrorDetails</summary>\n\ncode | attribute | 対処方法\n-----|-----------|----------\nnot_found | zone | 指定したZoneIdを確認してください\ninvalid | schema | 指定したパラメータを確認してください\ninvalid | keywords | 指定したパラメータの型を確認してください\n\n</details>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                },
                "examples": {
                  "BadRequest": {
                    "$ref": "#/components/examples/BadRequest"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/zones/{ZoneId}/records/diffs": {
      "parameters": [
        {
          "$ref": "#/components/parameters/ZoneId"
        }
      ],
      "get": {
        "operationId": "getRecordDiffs",
        "summary": "レコードの編集差分の一覧取得",
        "description": "現在DNSに登録されているレコードと反映予定のレコードの差分一覧を取得します。\n",
        "tags": [
          "records"
        ],
        "security": [
          {
            "DPFViewer": [
              "dpf_read"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/Type"
          },
          {
            "$ref": "#/components/parameters/Offset"
          },
          {
            "$ref": "#/components/parameters/Limit"
          },
          {
            "$ref": "#/components/parameters/KeywordsFullText"
          },
          {
            "$ref": "#/components/parameters/KeywordsName"
          },
          {
            "$ref": "#/components/parameters/KeywordsTtl"
          },
          {
            "$ref": "#/components/parameters/KeywordsRrtype"
          },
          {
            "$ref": "#/components/parameters/KeywordsRdata"
          },
          {
            "$ref": "#/components/parameters/KeywordsDescription"
          },
          {
            "$ref": "#/components/parameters/KeywordsLabel"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetRecordsDiffs"
                },
                "examples": {
                  "GetRecordsDiffs": {
                    "$ref": "#/components/examples/GetRecordsDiffs"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request\n\n<details close>\n<summary>ErrorDetails</summary>\n\ncode | attribute | 対処方法\n-----|-----------|----------\nnot_found | zone | 指定したZoneIdを確認してください\ninvalid | schema | 指定したパラメータを確認してください\ninvalid | keywords | 指定したパラメータの型を確認してください\n\n</details>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                },
                "examples": {
                  "BadRequest": {
                    "$ref": "#/components/examples/BadRequest"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/zones/{ZoneId}/records/diffs/count": {
      "parameters": [
        {
          "$ref": "#/components/parameters/ZoneId"
        }
      ],
      "get": {
        "operationId": "getRecordDiffsCount",
        "summary": "レコードの編集差分の件数取得",
        "description": "現在DNSに登録されているレコードと反映予定のレコードの差分数を取得します。\\\n\"_keywords\" から始まるパラメータは、合計で30個まで指定可能です。\n",
        "tags": [
          "records"
        ],
        "security": [
          {
            "DPFViewer": [
              "dpf_read"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/Type"
          },
          {
            "$ref": "#/components/parameters/KeywordsFullText"
          },
          {
            "$ref": "#/components/parameters/KeywordsName"
          },
          {
            "$ref": "#/components/parameters/KeywordsTtl"
          },
          {
            "$ref": "#/components/parameters/KeywordsRrtype"
          },
          {
            "$ref": "#/components/parameters/KeywordsRdata"
          },
          {
            "$ref": "#/components/parameters/KeywordsDescription"
          },
          {
            "$ref": "#/components/parameters/KeywordsLabel"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCount"
                },
                "examples": {
                  "GetCount": {
                    "$ref": "#/components/examples/GetCount"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request\n\n<details close>\n<summary>ErrorDetails</summary>\n\ncode | attribute | 対処方法\n-----|-----------|----------\nnot_found | zone | 指定したZoneIdを確認してください\ninvalid | schema | 指定したパラメータを確認してください\ninvalid | keywords | 指定したパラメータの型を確認してください\n\n</details>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                },
                "examples": {
                  "BadRequest": {
                    "$ref": "#/components/examples/BadRequest"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/zones/{ZoneId}/records/{RecordId}": {
      "parameters": [
        {
          "$ref": "#/components/parameters/ZoneId"
        },
        {
          "$ref": "#/components/parameters/RecordId"
        }
      ],
      "get": {
        "operationId": "getRecord",
        "summary": "レコードの取得",
        "description": "指定したRecordIdのレコードを取得します。\n",
        "tags": [
          "records"
        ],
        "security": [
          {
            "DPFViewer": [
              "dpf_read"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetRecord"
                },
                "examples": {
                  "GetRecord": {
                    "$ref": "#/components/examples/GetRecord"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request\n\n<details close>\n<summary>ErrorDetails</summary>\n\ncode | attribute | 対処方法\n-----|-----------|----------\nnot_found | zone | 指定したZoneIdを確認してください\ninvalid | schema | 指定したパラメータを確認してください\nnot_found | record | 指定したRecordIdを確認してください\n\n</details>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                },
                "examples": {
                  "BadRequest": {
                    "$ref": "#/components/examples/BadRequest"
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "operationId": "patchRecord",
        "summary": "レコードの更新",
        "description": "指定したRecordIdのレコードを更新します。\\\n[**編集中レコードのゾーン反映**](#tag/zones/operation/patchZoneChanges)を実行するまでは権威サーバには反映されません。\n",
        "tags": [
          "records"
        ],
        "security": [
          {
            "DPFOperator": [
              "dpf_write"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PatchRecord"
              },
              "examples": {
                "PatchRecord": {
                  "$ref": "#/components/examples/PatchRecord"
                }
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Accepted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AsyncResponse"
                },
                "examples": {
                  "AsyncResponse": {
                    "$ref": "#/components/examples/AsyncResponse"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request\n\n<details close>\n<summary>ErrorDetails</summary>\n\ncode | attribute | 対処方法\n-----|-----------|----------\nnot_found | zone | 指定したZoneIdを確認してください\nforbidden | zone | ゾーンプロキシの設定が有効のため操作できません\ninvalid | schema | 指定したパラメータを確認してください\nnot_found | record | 指定したRecordIdを確認してください\nforbidden | record | レコードの状態を確認してください\ninvalid | record | レコードとして不正な形式です\ninvalid_quotes | rdata | TXTレコードのrdataは「\"」で囲むようにしてください。<br>JSON string として \" で囲まれている内部に、さらに rdata としての \" で囲んで含める必要があります。<br>したがって、JSON string 全体としては \"\\\\\"example\\\\\"\" といった形になります。\ninvalid | rdata | 指定したrdataを確認してください\nreference_not_found | rdata | 参照先が存在しません\nreference_alias | rdata | 指定した参照先がCNAMEです\nmultiple_rdata_found | rdata | 指定したレコードタイプでは複数のrdataを指定することはできません\ninvalid_format_key | labels | 指定したlabel_keyのフォーマットを確認してください\ninvalid_length_key | labels | 指定したlabel_keyの文字数を確認してください\ninvalid_char_type_key | labels | 指定したlabel_keyの文字種を確認してください\ninvalid_type_value | labels | 指定したlabel_valueの型を確認してください\ninvalid_format_value | labels | 指定したlabel_valueのフォーマットを確認してください\ninvalid_length_value | labels | 指定したlabel_valueの文字数を確認してください\ninvalid_char_type_value | labels | 指定したlabel_valueの文字種を確認してください\n\n</details>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TargetBadRequest"
                },
                "examples": {
                  "BadRequest": {
                    "$ref": "#/components/examples/BadRequest"
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "deleteRecord",
        "summary": "レコードの削除",
        "description": "指定したRecordIdのレコードを削除します。\\\n[**編集中レコードのゾーン反映**](#tag/zones/operation/patchZoneChanges)を実行するまでは権威サーバには反映されません。\n",
        "tags": [
          "records"
        ],
        "security": [
          {
            "DPFOperator": [
              "dpf_write"
            ]
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AsyncResponse"
                },
                "examples": {
                  "AsyncResponse": {
                    "$ref": "#/components/examples/AsyncResponse"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request\n\n<details close>\n<summary>ErrorDetails</summary>\n\ncode | attribute | 対処方法\n-----|-----------|----------\nnot_found | zone | 指定したZoneIdを確認してください\nforbidden | zone | ゾーンプロキシの設定が有効のため操作できません\ninvalid | schema | 指定したパラメータを確認してください\nnot_found | record | 指定したRecordIdを確認してください\nforbidden | record | レコードの状態を確認してください\nsoa_not_found | record | SOAレコードの削除はできません\napex_ns_not_found | record | Zone ApexのNSレコードのため削除はできません\ncorresponding_ns_not_found | name | 同一nameのDSレコードが存在するためNSレコードの削除はできません\nreference_not_found | rdata | 参照先が存在しないため削除できません\n\n</details>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                },
                "examples": {
                  "BadRequest": {
                    "$ref": "#/components/examples/BadRequest"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/zones/{ZoneId}/records/{RecordId}/changes": {
      "parameters": [
        {
          "$ref": "#/components/parameters/ZoneId"
        },
        {
          "$ref": "#/components/parameters/RecordId"
        }
      ],
      "delete": {
        "operationId": "deleteRecordChanges",
        "summary": "編集中レコードの取消",
        "description": "指定したRecordIdのレコードの操作を取消します。\n",
        "tags": [
          "records"
        ],
        "security": [
          {
            "DPFOperator": [
              "dpf_write"
            ]
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AsyncResponse"
                },
                "examples": {
                  "AsyncResponse": {
                    "$ref": "#/components/examples/AsyncResponse"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request\n\n<details close>\n<summary>ErrorDetails</summary>\n\ncode | attribute | 対処方法\n-----|-----------|----------\nnot_found | zone | 指定したZoneIdを確認してください\nforbidden | zone | ゾーンプロキシの設定が有効のため操作できません\ninvalid | schema | 指定したパラメータを確認してください\nnot_found | record | 指定したRecordIdを確認してください\nforbidden | record | レコードの状態を確認してください\nduplicated | record | 同一nameおよびrrtypeのレコードがすでに存在しています\ncname_and_other_mixed | name | 指定したNameがCNAMEと同一のため操作できません\ncorresponding_ns_not_found | name | 指定したDSレコードのnameに対応するNSレコードが存在していません\ninvalid | rrtype | 指定したrrtypeを確認してください\nreference_not_found | rdata | 参照先が存在しないレコードが存在するため取り消しできません\nreference_alias | rdata | 指定した参照先がCNAMEです\n\n</details>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                },
                "examples": {
                  "BadRequest": {
                    "$ref": "#/components/examples/BadRequest"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/zones/{ZoneId}/records/{RecordId}/ds_records": {
      "parameters": [
        {
          "$ref": "#/components/parameters/ZoneId"
        },
        {
          "$ref": "#/components/parameters/RecordId"
        }
      ],
      "get": {
        "operationId": "getDsRecordsFromCds",
        "summary": "CDS経由のDSレコードの取得",
        "description": "指定したRecordIdのレコードによって取り込まれるCDS経由のDSレコードを取得します。\n",
        "tags": [
          "records"
        ],
        "security": [
          {
            "DPFViewer": [
              "dpf_read"
            ]
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/GetDsRecordsSuccessResponse"
          },
          "400": {
            "description": "Bad Request\n\n<details close>\n<summary>ErrorDetails</summary>\n\ncode | attribute | 対処方法\n-----|-----------|----------\nnot_found | zone | 指定したZoneIdを確認してください\ninvalid | schema | 指定したパラメータを確認してください\nnot_found | record | 指定したRecordIdを確認してください\ninvalid_record_id | record | Zone Apex以外のNSレコードのRecordIdを指定してください\n\n</details>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                },
                "examples": {
                  "BadRequest": {
                    "$ref": "#/components/examples/BadRequest"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/contracts/{ContractId}/tsigs": {
      "parameters": [
        {
          "$ref": "#/components/parameters/ContractId"
        }
      ],
      "get": {
        "operationId": "getTsigList",
        "summary": "TSIG鍵の一覧取得",
        "description": "TSIG鍵情報の一覧を取得します。\\\n\"_keywords\" から始まるパラメータは、合計で30個まで指定可能です。\n",
        "tags": [
          "tsigs"
        ],
        "security": [
          {
            "DPFViewer": [
              "dpf_read"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/Type"
          },
          {
            "$ref": "#/components/parameters/Offset"
          },
          {
            "$ref": "#/components/parameters/Limit"
          },
          {
            "$ref": "#/components/parameters/KeywordsFullText"
          },
          {
            "$ref": "#/components/parameters/KeywordsName"
          },
          {
            "$ref": "#/components/parameters/KeywordsDescription"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetTsigs"
                },
                "examples": {
                  "GetTsigs": {
                    "$ref": "#/components/examples/GetTsigs"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request\n\n<details close>\n<summary>ErrorDetails</summary>\n\ncode | attribute | 対処方法\n-----|-----------|----------\nnot_found | contract | 指定したContractIdを確認してください\ninvalid | schema | 指定したパラメータを確認してください\n\n</details>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                },
                "examples": {
                  "BadRequest": {
                    "$ref": "#/components/examples/BadRequest"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "operationId": "postTsig",
        "summary": "TSIG鍵の作成",
        "description": "新しくTSIG鍵を作成します。\n",
        "tags": [
          "tsigs"
        ],
        "security": [
          {
            "DPFOperator": [
              "dpf_write"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PostTsig"
              },
              "examples": {
                "PostTsigs": {
                  "$ref": "#/components/examples/PostTsig"
                }
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Accepted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AsyncResponse"
                },
                "examples": {
                  "AsyncResponse": {
                    "$ref": "#/components/examples/AsyncResponse"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request\n\n<details close>\n<summary>ErrorDetails</summary>\n\ncode | attribute | 対処方法\n-----|-----------|----------\nnot_found | contract | 指定したContractIdを確認してください\ninvalid | schema | 指定したパラメータを確認してください\nduplicated | name | 指定したnameを確認してください\n\n</details>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                },
                "examples": {
                  "BadRequest": {
                    "$ref": "#/components/examples/BadRequest"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/contracts/{ContractId}/tsigs/count": {
      "parameters": [
        {
          "$ref": "#/components/parameters/ContractId"
        }
      ],
      "get": {
        "operationId": "getTsigListCount",
        "summary": "TSIG鍵の件数取得",
        "description": "TSIG鍵の件数を取得します。\\\n\"_keywords\" から始まるパラメータは、合計で30個まで指定可能です。\n",
        "tags": [
          "tsigs"
        ],
        "security": [
          {
            "DPFViewer": [
              "dpf_read"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/Type"
          },
          {
            "$ref": "#/components/parameters/KeywordsFullText"
          },
          {
            "$ref": "#/components/parameters/KeywordsName"
          },
          {
            "$ref": "#/components/parameters/KeywordsDescription"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCount"
                },
                "examples": {
                  "GetCount": {
                    "$ref": "#/components/examples/GetCount"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request\n\n<details close>\n<summary>ErrorDetails</summary>\n\ncode | attribute | 対処方法\n-----|-----------|----------\nnot_found | contract | 指定したContractIdを確認してください\ninvalid | schema | 指定したパラメータを確認してください\n\n</details>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                },
                "examples": {
                  "BadRequest": {
                    "$ref": "#/components/examples/BadRequest"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/contracts/{ContractId}/tsigs/{TsigId}": {
      "parameters": [
        {
          "$ref": "#/components/parameters/ContractId"
        },
        {
          "$ref": "#/components/parameters/TsigId"
        }
      ],
      "get": {
        "operationId": "getTsig",
        "summary": "TSIG鍵の取得",
        "description": "指定したTsigIdのTSIG鍵を取得します。\n",
        "tags": [
          "tsigs"
        ],
        "security": [
          {
            "DPFViewer": [
              "dpf_read"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetTsig"
                },
                "examples": {
                  "GetTsig": {
                    "$ref": "#/components/examples/GetTsig"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request\n\n<details close>\n<summary>ErrorDetails</summary>\n\ncode | attribute | 対処方法\n-----|-----------|----------\nnot_found | contract | 指定したContractIdを確認してください\ninvalid | schema | 指定したパラメータを確認してください\nnot_found | tsig | 指定したTsigIdを確認してください\n\n</details>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                },
                "examples": {
                  "BadRequest": {
                    "$ref": "#/components/examples/BadRequest"
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "operationId": "patchTsig",
        "summary": "TSIG鍵の更新",
        "description": "指定したTsigIdのTSIG鍵を更新します。\n",
        "tags": [
          "tsigs"
        ],
        "security": [
          {
            "DPFOperator": [
              "dpf_write"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PatchTsig"
              },
              "examples": {
                "PatchTsig": {
                  "$ref": "#/components/examples/PatchTsig"
                }
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Accepted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AsyncResponse"
                },
                "examples": {
                  "AsyncResponse": {
                    "$ref": "#/components/examples/AsyncResponse"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request\n\n<details close>\n<summary>ErrorDetails</summary>\n\ncode | attribute | 対処方法\n-----|-----------|----------\nnot_found | contract | 指定したContractIdを確認してください\ninvalid | schema | 指定したパラメータを確認してください\nnot_found | tsig | 指定したTsigIdを確認してください\n\n</details>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                },
                "examples": {
                  "BadRequest": {
                    "$ref": "#/components/examples/BadRequest"
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "deleteTsig",
        "summary": "TSIG鍵の削除",
        "description": "指定したTsigIdのTSIG鍵を削除します。\n",
        "tags": [
          "tsigs"
        ],
        "security": [
          {
            "DPFOperator": [
              "dpf_write"
            ]
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AsyncResponse"
                },
                "examples": {
                  "AsyncResponse": {
                    "$ref": "#/components/examples/AsyncResponse"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request\n\n<details close>\n<summary>ErrorDetails</summary>\n\ncode | attribute | 対処方法\n-----|-----------|----------\nnot_found | contract | 指定したContractIdを確認してください\ninvalid | schema | 指定したパラメータを確認してください\nnot_found | tsig | 指定したTsigIdを確認してください\nforbidden | tsig | 参照元が存在しているため削除できません\n\n</details>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                },
                "examples": {
                  "BadRequest": {
                    "$ref": "#/components/examples/BadRequest"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/contracts/{ContractId}/tsigs/{TsigId}/common_configs": {
      "parameters": [
        {
          "$ref": "#/components/parameters/ContractId"
        },
        {
          "$ref": "#/components/parameters/TsigId"
        }
      ],
      "get": {
        "operationId": "getTsigCommonConfigs",
        "summary": "TSIG鍵を利用している共通設定の一覧取得",
        "description": "指定したTSIG鍵を使用している共通設定の一覧を取得します。\n",
        "tags": [
          "tsigs"
        ],
        "security": [
          {
            "DPFViewer": [
              "dpf_read"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/Offset"
          },
          {
            "$ref": "#/components/parameters/Limit"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetTsigsCommonConfigs"
                },
                "examples": {
                  "GetCommonConfigs": {
                    "$ref": "#/components/examples/GetCommonConfigsTsig"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request\n\n<details close>\n<summary>ErrorDetails</summary>\n\ncode | attribute | 対処方法\n-----|-----------|----------\nnot_found | contract | 指定したContractIdを確認してください\ninvalid | schema | 指定したパラメータを確認してください\nnot_found | tsig | 指定したTsigIdを確認してください\n\n</details>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                },
                "examples": {
                  "BadRequest": {
                    "$ref": "#/components/examples/BadRequest"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/contracts/{ContractId}/tsigs/{TsigId}/common_configs/count": {
      "parameters": [
        {
          "$ref": "#/components/parameters/ContractId"
        },
        {
          "$ref": "#/components/parameters/TsigId"
        }
      ],
      "get": {
        "operationId": "getTsigCommonConfigsCount",
        "summary": "TSIG鍵を利用している共通設定の件数取得",
        "description": "指定したTSIG鍵を使用している共通設定の件数を取得します。\n",
        "tags": [
          "tsigs"
        ],
        "security": [
          {
            "DPFViewer": [
              "dpf_read"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCount"
                },
                "examples": {
                  "GetCount": {
                    "$ref": "#/components/examples/GetCount"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request\n\n<details close>\n<summary>ErrorDetails</summary>\n\ncode | attribute | 対処方法\n-----|-----------|----------\nnot_found | contract | 指定したContractIdを確認してください\ninvalid | schema | 指定したパラメータを確認してください\nnot_found | tsig | 指定したTsigIdを確認してください\n\n</details>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                },
                "examples": {
                  "BadRequest": {
                    "$ref": "#/components/examples/BadRequest"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/zones/{ZoneId}/zone_histories": {
      "parameters": [
        {
          "$ref": "#/components/parameters/ZoneId"
        }
      ],
      "get": {
        "operationId": "getZoneHistoryList",
        "summary": "ゾーン反映履歴の一覧取得",
        "description": "ゾーン反映の履歴の一覧を取得します。\\\n\"_keywords\" から始まるパラメータは、合計で30個まで指定可能です。\n",
        "tags": [
          "zone_histories"
        ],
        "security": [
          {
            "DPFViewer": [
              "dpf_read"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/Type"
          },
          {
            "$ref": "#/components/parameters/Offset"
          },
          {
            "$ref": "#/components/parameters/Limit"
          },
          {
            "$ref": "#/components/parameters/KeywordsFullText"
          },
          {
            "$ref": "#/components/parameters/KeywordsDescription"
          },
          {
            "$ref": "#/components/parameters/KeywordsOperator"
          },
          {
            "$ref": "#/components/parameters/Order"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetZoneHistories"
                },
                "examples": {
                  "GetZoneHistories": {
                    "$ref": "#/components/examples/GetZoneHistories"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request\n\n<details close>\n<summary>ErrorDetails</summary>\n\ncode | attribute | 対処方法\n-----|-----------|----------\nnot_found | zone | 指定したZoneIdを確認してください\ninvalid | schema | 指定したパラメータを確認してください\n\n</details>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                },
                "examples": {
                  "BadRequest": {
                    "$ref": "#/components/examples/BadRequest"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/zones/{ZoneId}/zone_histories/count": {
      "parameters": [
        {
          "$ref": "#/components/parameters/ZoneId"
        }
      ],
      "get": {
        "operationId": "getZoneHistoryListCount",
        "summary": "ゾーン反映履歴の件数取得",
        "description": "ゾーン反映の履歴の件数を取得します。\\\n\"_keywords\" から始まるパラメータは、合計で30個まで指定可能です。\n",
        "tags": [
          "zone_histories"
        ],
        "security": [
          {
            "DPFViewer": [
              "dpf_read"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/Type"
          },
          {
            "$ref": "#/components/parameters/KeywordsFullText"
          },
          {
            "$ref": "#/components/parameters/KeywordsDescription"
          },
          {
            "$ref": "#/components/parameters/KeywordsOperator"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCount"
                },
                "examples": {
                  "GetCount": {
                    "$ref": "#/components/examples/GetCount"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request\n\n<details close>\n<summary>ErrorDetails</summary>\n\ncode | attribute | 対処方法\n-----|-----------|----------\nnot_found | zone | 指定したZoneIdを確認してください\ninvalid | schema | 指定したパラメータを確認してください\n\n</details>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                },
                "examples": {
                  "BadRequest": {
                    "$ref": "#/components/examples/BadRequest"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/zones/{ZoneId}/zone_histories/{ZoneHistoryId}/text": {
      "parameters": [
        {
          "$ref": "#/components/parameters/ZoneId"
        },
        {
          "$ref": "#/components/parameters/ZoneHistoryId"
        }
      ],
      "get": {
        "operationId": "getZoneHistoryText",
        "summary": "ゾーン反映時のRFC1035形式のテキストの取得",
        "description": "ゾーン反映の履歴をRFC1035形式のテキストファイルで取得します。\n",
        "tags": [
          "zone_histories"
        ],
        "security": [
          {
            "DPFViewer": [
              "dpf_read"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetZoneHistoriesText"
                },
                "examples": {
                  "GetZoneHistoriesText": {
                    "$ref": "#/components/examples/GetZoneHistoriesText"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request\n\n<details close>\n<summary>ErrorDetails</summary>\n\ncode | attribute | 対処方法\n-----|-----------|----------\nnot_found | zone | 指定したZoneIdを確認してください\ninvalid | schema | 指定したパラメータを確認してください\nnot_found | zone_history | 指定したZoneHistoryIdを確認してください\n\n</details>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                },
                "examples": {
                  "BadRequest": {
                    "$ref": "#/components/examples/BadRequest"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/zones/{ZoneId}/zone_proxy": {
      "parameters": [
        {
          "$ref": "#/components/parameters/ZoneId"
        }
      ],
      "get": {
        "operationId": "getZoneProxyList",
        "summary": "ゾーンプロキシ設定の取得",
        "description": "ゾーンプロキシの設定を取得します。\n",
        "tags": [
          "zone_proxy"
        ],
        "security": [
          {
            "DPFViewer": [
              "dpf_read"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetZoneProxy"
                },
                "examples": {
                  "GetZoneProxy": {
                    "$ref": "#/components/examples/GetZoneProxy"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request\n\n<details close>\n<summary>ErrorDetails</summary>\n\ncode | attribute | 対処方法\n-----|-----------|----------\nnot_found | zone | 指定したZoneIdを確認してください\ninvalid | schema | 指定したパラメータを確認してください\n\n</details>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                },
                "examples": {
                  "BadRequest": {
                    "$ref": "#/components/examples/BadRequest"
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "operationId": "patchZoneProxy",
        "summary": "ゾーンプロキシ設定の更新",
        "description": "ゾーンプロキシの設定を更新します。\n",
        "tags": [
          "zone_proxy"
        ],
        "security": [
          {
            "DPFOperator": [
              "dpf_write"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PatchZoneProxy"
              },
              "examples": {
                "PatchZoneProxy": {
                  "$ref": "#/components/examples/PatchZoneProxy"
                }
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Accepted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AsyncResponse"
                },
                "examples": {
                  "AsyncResponse": {
                    "$ref": "#/components/examples/AsyncResponse"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request\n\n<details close>\n<summary>ErrorDetails</summary>\n\ncode | attribute | 対処方法\n-----|-----------|----------\nnot_found | zone | 指定したZoneIdを確認してください\ninvalid | schema | 指定したパラメータを確認してください\nforbidden | zone | 編集中のレコードが存在しているため有効化できません\n\n</details>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                },
                "examples": {
                  "BadRequest": {
                    "$ref": "#/components/examples/BadRequest"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/zones/{ZoneId}/zone_proxy/health_check": {
      "parameters": [
        {
          "$ref": "#/components/parameters/ZoneId"
        }
      ],
      "get": {
        "operationId": "getZoneProxyHealthCheck",
        "summary": "プライマリネームサーバのヘルスチェック結果の取得",
        "description": "ゾーン転送のヘルスチェック結果の一覧を取得します。\n",
        "tags": [
          "zone_proxy"
        ],
        "security": [
          {
            "DPFViewer": [
              "dpf_read"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetZoneProxyHealth"
                },
                "examples": {
                  "GetZoneProxyHealth": {
                    "$ref": "#/components/examples/GetHealthCheck"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request\n\n<details close>\n<summary>ErrorDetails</summary>\n\ncode | attribute | 対処方法\n-----|-----------|----------\nnot_found | zone | 指定したZoneIdを確認してください\ninvalid | schema | 指定したパラメータを確認してください\n\n</details>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                },
                "examples": {
                  "BadRequest": {
                    "$ref": "#/components/examples/BadRequest"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/zones": {
      "get": {
        "operationId": "getZoneList",
        "summary": "ゾーンの一覧取得",
        "description": "DPF契約に紐付くゾーンの一覧を取得します。\\\n\"_keywords\" から始まるパラメータは、合計で30個まで指定可能です。\n",
        "tags": [
          "zones"
        ],
        "security": [
          {
            "DPFViewer": [
              "dpf_read"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/Type"
          },
          {
            "$ref": "#/components/parameters/Offset"
          },
          {
            "$ref": "#/components/parameters/Limit"
          },
          {
            "$ref": "#/components/parameters/KeywordsFullText"
          },
          {
            "$ref": "#/components/parameters/KeywordsServiceCode"
          },
          {
            "$ref": "#/components/parameters/KeywordsName"
          },
          {
            "$ref": "#/components/parameters/KeywordsNetwork"
          },
          {
            "$ref": "#/components/parameters/KeywordsZonesState"
          },
          {
            "$ref": "#/components/parameters/KeywordsZonesFavorite"
          },
          {
            "$ref": "#/components/parameters/KeywordsDescription"
          },
          {
            "$ref": "#/components/parameters/KeywordsCommonConfigId"
          },
          {
            "$ref": "#/components/parameters/KeywordsZoneProxyEnabled"
          },
          {
            "$ref": "#/components/parameters/KeywordsLabel"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetZones"
                },
                "examples": {
                  "GetZones": {
                    "$ref": "#/components/examples/GetZones"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request\n\n<details close>\n<summary>ErrorDetails</summary>\n\ncode | attribute | 対処方法\n-----|-----------|----------\ninvalid | schema | 指定したパラメータを確認してください\ninvalid | keywords | 指定したパラメータの型を確認してください\n\n</details>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                },
                "examples": {
                  "BadRequest": {
                    "$ref": "#/components/examples/BadRequest"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/zones/count": {
      "get": {
        "operationId": "getZoneListCount",
        "summary": "ゾーンの件数取得",
        "description": "DPF契約に紐付くゾーンの件数を取得します。\\\n\"_keywords\" から始まるパラメータは、合計で30個まで指定可能です。\n",
        "tags": [
          "zones"
        ],
        "security": [
          {
            "DPFViewer": [
              "dpf_read"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/Type"
          },
          {
            "$ref": "#/components/parameters/KeywordsFullText"
          },
          {
            "$ref": "#/components/parameters/KeywordsServiceCode"
          },
          {
            "$ref": "#/components/parameters/KeywordsName"
          },
          {
            "$ref": "#/components/parameters/KeywordsNetwork"
          },
          {
            "$ref": "#/components/parameters/KeywordsZonesState"
          },
          {
            "$ref": "#/components/parameters/KeywordsZonesFavorite"
          },
          {
            "$ref": "#/components/parameters/KeywordsDescription"
          },
          {
            "$ref": "#/components/parameters/KeywordsCommonConfigId"
          },
          {
            "$ref": "#/components/parameters/KeywordsZoneProxyEnabled"
          },
          {
            "$ref": "#/components/parameters/KeywordsLabel"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCount"
                },
                "examples": {
                  "GetCount": {
                    "$ref": "#/components/examples/GetCount"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request\n\n<details close>\n<summary>ErrorDetails</summary>\n\ncode | attribute | 対処方法\n-----|-----------|----------\ninvalid | schema | 指定したパラメータを確認してください\ninvalid | keywords | 指定したパラメータの型を確認してください\n\n</details>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                },
                "examples": {
                  "BadRequest": {
                    "$ref": "#/components/examples/BadRequest"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/zones/{ZoneId}": {
      "parameters": [
        {
          "$ref": "#/components/parameters/ZoneId"
        }
      ],
      "get": {
        "operationId": "getZone",
        "summary": "ゾーンの取得",
        "description": "指定したZoneIdのゾーンを取得します。\n",
        "tags": [
          "zones"
        ],
        "security": [
          {
            "DPFViewer": [
              "dpf_read"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetZone"
                },
                "examples": {
                  "GetZone": {
                    "$ref": "#/components/examples/GetZone"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request\n\n<details close>\n<summary>ErrorDetails</summary>\n\ncode | attribute | 対処方法\n-----|-----------|----------\nnot_found | zone | 指定したZoneIdを確認してください\ninvalid | schema | 指定したパラメータを確認してください\n\n</details>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                },
                "examples": {
                  "BadRequest": {
                    "$ref": "#/components/examples/BadRequest"
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "operationId": "patchZone",
        "summary": "ゾーンの更新",
        "description": "指定したZoneIdのゾーンを更新します。\n",
        "tags": [
          "zones"
        ],
        "security": [
          {
            "DPFOperator": [
              "dpf_write"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PatchZone"
              },
              "examples": {
                "PatchZone": {
                  "$ref": "#/components/examples/PatchZone"
                }
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Accepted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AsyncResponse"
                },
                "examples": {
                  "AsyncResponse": {
                    "$ref": "#/components/examples/AsyncResponse"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request\n\n<details close>\n<summary>ErrorDetails</summary>\n\ncode | attribute | 対処方法\n-----|-----------|----------\nnot_found | zone | 指定したZoneIdを確認してください\ninvalid | schema | 指定したパラメータを確認してください\n\n</details>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                },
                "examples": {
                  "BadRequest": {
                    "$ref": "#/components/examples/BadRequest"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/zones/{ZoneId}/labels": {
      "parameters": [
        {
          "$ref": "#/components/parameters/ZoneId"
        }
      ],
      "get": {
        "operationId": "getZoneLabels",
        "summary": "ゾーンのラベル一覧取得",
        "description": "指定したZoneIdのラベルの一覧を取得します。\n",
        "tags": [
          "zones"
        ],
        "security": [
          {
            "DPFViewer": [
              "dpf_read"
            ]
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/GetZoneLabelsSuccessResponse"
          },
          "400": {
            "description": "Bad Request\n\n<details close>\n<summary>ErrorDetails</summary>\n\ncode | attribute | 対処方法\n-----|-----------|----------\nnot_found | zone | 指定したZoneIdを確認してください\ninvalid | schema | 指定したパラメータを確認してください\n\n</details>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                },
                "examples": {
                  "BadRequest": {
                    "$ref": "#/components/examples/BadRequest"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "putZoneLabels",
        "summary": "ゾーンのラベル一括更新",
        "description": "指定したZoneIdのラベルを一括更新します。\\\nエラー発生時はErrorDetailsにtargetキーが付与され、問題の箇所が特定できます。\n",
        "tags": [
          "zones"
        ],
        "security": [
          {
            "DPFOperator": [
              "dpf_write"
            ]
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/PutZoneLabels"
        },
        "responses": {
          "202": {
            "$ref": "#/components/responses/Accepted"
          },
          "400": {
            "$ref": "#/components/responses/PutZoneLabelsBadRequest"
          }
        }
      }
    },
    "/zones/{ZoneId}/changes": {
      "parameters": [
        {
          "$ref": "#/components/parameters/ZoneId"
        }
      ],
      "patch": {
        "operationId": "patchZoneChanges",
        "summary": "編集中レコードのゾーン反映",
        "description": "編集中のレコードの操作を反映します。\n",
        "tags": [
          "zones"
        ],
        "security": [
          {
            "DPFOperator": [
              "dpf_write"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PatchZoneCommit"
              },
              "examples": {
                "PatchZoneCommit": {
                  "$ref": "#/components/examples/PatchZoneCommit"
                }
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Accepted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AsyncResponse"
                },
                "examples": {
                  "AsyncResponse": {
                    "$ref": "#/components/examples/AsyncResponse"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request\n\n<details close>\n<summary>ErrorDetails</summary>\n\ncode | attribute | 対処方法\n-----|-----------|----------\nnot_found | zone | 指定したZoneIdを確認してください\ninvalid | schema | 指定したパラメータを確認してください\nforbidden | zone | ゾーンプロキシの設定が有効のため操作できません\nreference_not_found | rdata | rdetaの参照先が存在しません\nresolve_error | rdata | 名前解決ができないゾーンが含まれています\n\n</details>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                },
                "examples": {
                  "BadRequest": {
                    "$ref": "#/components/examples/BadRequest"
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "deleteZoneChanges",
        "summary": "編集中レコードの一括取消",
        "description": "編集中のレコードの操作を一括で取り消します。\n",
        "tags": [
          "zones"
        ],
        "security": [
          {
            "DPFOperator": [
              "dpf_write"
            ]
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AsyncResponse"
                },
                "examples": {
                  "AsyncResponse": {
                    "$ref": "#/components/examples/AsyncResponse"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request\n\n<details close>\n<summary>ErrorDetails</summary>\n\ncode | attribute | 対処方法\n-----|-----------|----------\nnot_found | zone | 指定したZoneIdを確認してください\ninvalid | schema | 指定したパラメータを確認してください\nforbidden | zone | ゾーンプロキシの設定が有効のため操作できません\n\n</details>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                },
                "examples": {
                  "BadRequest": {
                    "$ref": "#/components/examples/BadRequest"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/zones/{ZoneId}/contract": {
      "parameters": [
        {
          "$ref": "#/components/parameters/ZoneId"
        }
      ],
      "get": {
        "operationId": "getZoneContract",
        "summary": "ゾーンに紐付くDPF契約情報の取得",
        "description": "指定したZoneIdのゾーンに紐付くDPF契約情報を取得します。\n",
        "tags": [
          "zones"
        ],
        "security": [
          {
            "DPFViewer": [
              "dpf_read"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetContract"
                },
                "examples": {
                  "GetContract": {
                    "$ref": "#/components/examples/GetContract"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request\n\n<details close>\n<summary>ErrorDetails</summary>\n\ncode | attribute | 対処方法\n-----|-----------|----------\nnot_found | zone | 指定したZoneIdを確認してください\ninvalid | schema | 指定したパラメータを確認してください\n\n</details>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                },
                "examples": {
                  "BadRequest": {
                    "$ref": "#/components/examples/BadRequest"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/zones/{ZoneId}/managed_dns_servers": {
      "parameters": [
        {
          "$ref": "#/components/parameters/ZoneId"
        }
      ],
      "get": {
        "operationId": "getZoneManagedDnsServers",
        "summary": "マネージドDNSサーバの一覧取得",
        "description": "指定したZoneIdのマネージドDNSサーバの一覧を取得します。\n",
        "tags": [
          "zones"
        ],
        "security": [
          {
            "DPFViewer": [
              "dpf_read"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetManagedServers"
                },
                "examples": {
                  "GetManagedServers": {
                    "$ref": "#/components/examples/GetManagedServers"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request\n\n<details close>\n<summary>ErrorDetails</summary>\n\ncode | attribute | 対処方法\n-----|-----------|----------\nnot_found | zone | 指定したZoneIdを確認してください\ninvalid | schema | 指定したパラメータを確認してください\n\n</details>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                },
                "examples": {
                  "BadRequest": {
                    "$ref": "#/components/examples/BadRequest"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/lb_domains": {
      "get": {
        "operationId": "getLbDomainList",
        "summary": "LBドメインの一覧取得",
        "description": "DPF契約に紐付くLBドメインの一覧を取得します。\\\n\"_keywords\" から始まるパラメータは、合計で30個まで指定可能です。\\\nエラー発生時はErrorDetailsにtargetキーが付与され、問題の箇所が特定できます。\n",
        "tags": [
          "lb_domains"
        ],
        "security": [
          {
            "DPFViewer": [
              "dpf_read"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/Type"
          },
          {
            "$ref": "#/components/parameters/Offset"
          },
          {
            "$ref": "#/components/parameters/Limit"
          },
          {
            "$ref": "#/components/parameters/KeywordsFullText"
          },
          {
            "$ref": "#/components/parameters/KeywordsServiceCode"
          },
          {
            "$ref": "#/components/parameters/KeywordsName"
          },
          {
            "$ref": "#/components/parameters/KeywordsLbDomainState"
          },
          {
            "$ref": "#/components/parameters/KeywordsLbDomainFavorite"
          },
          {
            "$ref": "#/components/parameters/KeywordsDescription"
          },
          {
            "$ref": "#/components/parameters/KeywordsCommonConfigId"
          },
          {
            "$ref": "#/components/parameters/KeywordsLabel"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetLbDomains"
                },
                "examples": {
                  "GetLbDomains": {
                    "$ref": "#/components/examples/GetLbDomains"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request\n\n<details close>\n<summary>ErrorDetails</summary>\n\ncode | attribute | 対処方法\n-----|-----------|----------\ninvalid | schema | 指定したパラメータを確認してください\ninvalid_char_type_value | keywords | 指定したパラメータの文字種を確認してください\ninvalid_type_value | keywords | 指定したパラメータの型を確認してください\n\n</details>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TargetBadRequest"
                },
                "examples": {
                  "BadRequest": {
                    "$ref": "#/components/examples/BadRequest"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/lb_domains/count": {
      "get": {
        "operationId": "getLbDomainListCount",
        "summary": "LBドメインの件数取得",
        "description": "DPF契約に紐付くLBドメインの件数を取得します。\\\n\"_keywords\" から始まるパラメータは、合計で30個まで指定可能です。\\\nエラー発生時はErrorDetailsにtargetキーが付与され、問題の箇所が特定できます。\n",
        "tags": [
          "lb_domains"
        ],
        "security": [
          {
            "DPFViewer": [
              "dpf_read"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/Type"
          },
          {
            "$ref": "#/components/parameters/KeywordsFullText"
          },
          {
            "$ref": "#/components/parameters/KeywordsServiceCode"
          },
          {
            "$ref": "#/components/parameters/KeywordsName"
          },
          {
            "$ref": "#/components/parameters/KeywordsLbDomainState"
          },
          {
            "$ref": "#/components/parameters/KeywordsLbDomainFavorite"
          },
          {
            "$ref": "#/components/parameters/KeywordsDescription"
          },
          {
            "$ref": "#/components/parameters/KeywordsCommonConfigId"
          },
          {
            "$ref": "#/components/parameters/KeywordsLabel"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCount"
                },
                "examples": {
                  "GetCount": {
                    "$ref": "#/components/examples/GetCount"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request\n\n<details close>\n<summary>ErrorDetails</summary>\n\ncode | attribute | 対処方法\n-----|-----------|----------\ninvalid | schema | 指定したパラメータを確認してください\ninvalid_char_type_value | keywords | 指定したパラメータの文字種を確認してください\ninvalid_type_value | keywords | 指定したパラメータの型を確認してください\n\n</details>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TargetBadRequest"
                },
                "examples": {
                  "BadRequest": {
                    "$ref": "#/components/examples/BadRequest"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/lb_domains/{LbDomainId}": {
      "parameters": [
        {
          "$ref": "#/components/parameters/LbDomainId"
        }
      ],
      "get": {
        "operationId": "getLbDomain",
        "summary": "LBドメインの取得",
        "description": "指定したLbDomainIdのLBドメインを取得します。\n",
        "tags": [
          "lb_domains"
        ],
        "security": [
          {
            "DPFViewer": [
              "dpf_read"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetLbDomain"
                },
                "examples": {
                  "GetLbDomain": {
                    "$ref": "#/components/examples/GetLbDomain"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request\n\n<details close>\n<summary>ErrorDetails</summary>\n\ncode | attribute | 対処方法\n-----|-----------|----------\nnot_found | lb_domain | 指定したLbDomainIdを確認してください\ninvalid | schema | 指定したパラメータを確認してください\n\n</details>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                },
                "examples": {
                  "BadRequest": {
                    "$ref": "#/components/examples/BadRequest"
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "operationId": "patchLbDomain",
        "summary": "LBドメインの更新",
        "description": "指定したLbDomainIdのLBドメインを更新します。\\\nRuleResourceNameを指定することで適用ルールの切り替えができます。\n",
        "tags": [
          "lb_domains"
        ],
        "security": [
          {
            "DPFOperator": [
              "dpf_write"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PatchLbDomain"
              },
              "examples": {
                "PatchLbDomain": {
                  "$ref": "#/components/examples/PatchLbDomain"
                }
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Accepted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AsyncResponse"
                },
                "examples": {
                  "AsyncResponse": {
                    "$ref": "#/components/examples/AsyncResponse"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request\n\n<details close>\n<summary>ErrorDetails</summary>\n\ncode | attribute | 対処方法\n-----|-----------|----------\nnot_found | lb_domain | 指定したLbDomainIdを確認してください\nnot_found | rule_resource_name | 指定したRuleResourceNameを確認してください\ninvalid_length | rule_resource_name | 指定したRuleResourceNameの文字数を確認してください\ninvalid_format | rule_resource_name | 指定したRuleResourceNameのフォーマットを確認してください\ninvalid | schema | 指定したパラメータを確認してください\n\n</details>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                },
                "examples": {
                  "BadRequest": {
                    "$ref": "#/components/examples/BadRequest"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/lb_domains/{LbDomainId}/labels": {
      "parameters": [
        {
          "$ref": "#/components/parameters/LbDomainId"
        }
      ],
      "get": {
        "operationId": "getLbDomainLabels",
        "summary": "LBドメインのラベル一覧取得",
        "description": "指定したLbDomainIdのラベルの一覧を取得します。\n",
        "tags": [
          "lb_domains"
        ],
        "security": [
          {
            "DPFViewer": [
              "dpf_read"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetLbDomainLabels"
                },
                "examples": {
                  "GetLbDomain": {
                    "$ref": "#/components/examples/GetLbDomainLabels"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request\n\n<details close>\n<summary>ErrorDetails</summary>\n\ncode | attribute | 対処方法\n-----|-----------|----------\nnot_found | lb_domain | 指定したLbDomainIdを確認してください\ninvalid | schema | 指定したパラメータを確認してください\n\n</details>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                },
                "examples": {
                  "BadRequest": {
                    "$ref": "#/components/examples/BadRequest"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "putLbDomainLabels",
        "summary": "LBドメインのラベル一括更新",
        "description": "指定したLbDomainIdのラベルを一括更新します。\\\nエラー発生時はErrorDetailsにtargetキーが付与され、問題の箇所が特定できます。\n",
        "tags": [
          "lb_domains"
        ],
        "security": [
          {
            "DPFOperator": [
              "dpf_write"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PutLbDomainLabels"
              },
              "examples": {
                "PutLbDomainLabels": {
                  "$ref": "#/components/examples/PutLbDomainLabels"
                }
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Accepted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AsyncResponse"
                },
                "examples": {
                  "AsyncResponse": {
                    "$ref": "#/components/examples/AsyncResponse"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request\n\n<details close>\n<summary>ErrorDetails</summary>\n\ncode | attribute | 対処方法\n-----|-----------|----------\nnot_found | lb_domain | 指定したLbDomainIdを確認してください\ninvalid | schema | 指定したパラメータを確認してください\ninvalid_format_key | labels | 指定したlabel_keyのフォーマットを確認してください\ninvalid_length_key | labels | 指定したlabel_keyの文字数を確認してください\ninvalid_char_type_key | labels | 指定したlabel_keyの文字種を確認してください\ninvalid_format_value | labels | 指定したlabel_valueのフォーマットを確認してください\ninvalid_length_value | labels | 指定したlabel_valueの文字数を確認してください\ninvalid_char_type_value | labels | 指定したlabel_valueの文字種を確認してください\ninvalid_type_value | labels | 指定したパラメータの型を確認してください\n\n</details>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TargetBadRequest"
                },
                "examples": {
                  "BadRequest": {
                    "$ref": "#/components/examples/BadRequest"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/lb_domains/{LbDomainId}/contract": {
      "parameters": [
        {
          "$ref": "#/components/parameters/LbDomainId"
        }
      ],
      "get": {
        "operationId": "getLbDomainContract",
        "summary": "LBドメインに紐付くDPF契約情報の取得",
        "description": "指定したLbDomainIdのLBドメインに紐付くDPF契約情報を取得します。\n",
        "tags": [
          "lb_domains"
        ],
        "security": [
          {
            "DPFViewer": [
              "dpf_read"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetContract"
                },
                "examples": {
                  "GetContract": {
                    "$ref": "#/components/examples/GetContract"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request\n\n<details close>\n<summary>ErrorDetails</summary>\n\ncode | attribute | 対処方法\n-----|-----------|----------\nnot_found | lb_domain | 指定したLbDomainIdを確認してください\ninvalid | schema | 指定したパラメータを確認してください\n\n</details>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                },
                "examples": {
                  "BadRequest": {
                    "$ref": "#/components/examples/BadRequest"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/lb_domains/{LbDomainId}/monitorings": {
      "parameters": [
        {
          "$ref": "#/components/parameters/LbDomainId"
        }
      ],
      "get": {
        "operationId": "getMonitoringList",
        "summary": "監視の一覧取得",
        "description": "監視の一覧を取得します。\n",
        "tags": [
          "monitorings"
        ],
        "security": [
          {
            "DPFViewer": [
              "dpf_read"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetMonitorings"
                },
                "examples": {
                  "GetMonitorings": {
                    "$ref": "#/components/examples/GetMonitorings"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request\n\n<details close>\n<summary>ErrorDetails</summary>\n\ncode | attribute | 対処方法\n-----|-----------|----------\nnot_found | lb_domain | 指定したLbDomainIdを確認してください\ninvalid | schema | 指定したパラメータを確認してください\n\n</details>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                },
                "examples": {
                  "BadRequest": {
                    "$ref": "#/components/examples/BadRequest"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "operationId": "postMonitoring",
        "summary": "監視の作成",
        "description": "新しく監視を作成します。\\\n作成できる最大件数は50件です。\\\nエラー発生時はErrorDetailsにtargetキーが付与され、問題の箇所が特定できます。\n",
        "tags": [
          "monitorings"
        ],
        "security": [
          {
            "DPFOperator": [
              "dpf_write"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PostMonitoring"
              },
              "examples": {
                "PostMonitoringPing": {
                  "$ref": "#/components/examples/PostMonitoringPing"
                },
                "PostMonitoringTCP": {
                  "$ref": "#/components/examples/PostMonitoringTCP"
                },
                "PostMonitoringHTTP": {
                  "$ref": "#/components/examples/PostMonitoringHTTP"
                },
                "PostMonitoringStatic": {
                  "$ref": "#/components/examples/PostMonitoringStatic"
                }
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Accepted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AsyncResponse"
                },
                "examples": {
                  "AsyncResponse": {
                    "$ref": "#/components/examples/AsyncResponse"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request\n\n<details close>\n<summary>ErrorDetails</summary>\n\ncode | attribute | 対処方法\n-----|-----------|----------\nnot_found | lb_domain | 指定したLbDomainIdを確認してください\nduplicated | resource_name | 指定したMonitoringResourceNameは既に登録されています\ninvalid_length | resource_name | 指定したMonitoringResourceNameの文字数を確認してください\ninvalid_format | resource_name | 指定したMonitoringResourceNameのフォーマットを確認してください\nduplicated | name | 指定した監視名は既に登録されています\ntoo_many | name | 登録の上限数を超えています\ninvalid_format | name | 指定した監視名のフォーマットを確認してください\ninvalid_format | tls_sni | 指定したTLS SNIのフォーマットを確認してください\ninvalid_format_status_code | status_codes | 指定したステータスコードのフォーマットを確認してください\ninvalid | schema | 指定したパラメータを確認してください\n\n</details>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TargetBadRequest"
                },
                "examples": {
                  "BadRequest": {
                    "$ref": "#/components/examples/BadRequest"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/lb_domains/{LbDomainId}/monitorings/{MonitoringResourceName}": {
      "parameters": [
        {
          "$ref": "#/components/parameters/LbDomainId"
        },
        {
          "$ref": "#/components/parameters/MonitoringResourceName"
        }
      ],
      "get": {
        "operationId": "getMonitoring",
        "summary": "監視の取得",
        "description": "指定したMonitoringResourceNameの監視を取得します。\n",
        "tags": [
          "monitorings"
        ],
        "security": [
          {
            "DPFViewer": [
              "dpf_read"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetMonitoring"
                },
                "examples": {
                  "GetMonitoring": {
                    "$ref": "#/components/examples/GetMonitoring"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request\n\n<details close>\n<summary>ErrorDetails</summary>\n\ncode | attribute | 対処方法\n-----|-----------|----------\nnot_found | lb_domain | 指定したLbDomainIdを確認してください\nnot_found | monitoring | 指定したMonitoringResourceNameを確認してください\ninvalid | schema | 指定したパラメータを確認してください\n\n</details>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                },
                "examples": {
                  "BadRequest": {
                    "$ref": "#/components/examples/BadRequest"
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "operationId": "patchMonitoring",
        "summary": "監視の更新",
        "description": "指定したMonitoringResourceNameの監視を更新します。\\\nエラー発生時はErrorDetailsにtargetキーが付与され、問題の箇所が特定できます。\n",
        "tags": [
          "monitorings"
        ],
        "security": [
          {
            "DPFOperator": [
              "dpf_write"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PatchMonitoring"
              },
              "examples": {
                "PatchMonitoringPing": {
                  "$ref": "#/components/examples/PatchMonitoringPing"
                },
                "PatchMonitoringTCP": {
                  "$ref": "#/components/examples/PatchMonitoringTCP"
                },
                "PatchMonitoringHTTP": {
                  "$ref": "#/components/examples/PatchMonitoringHTTP"
                },
                "PatchMonitoringStatic": {
                  "$ref": "#/components/examples/PatchMonitoringStatic"
                }
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Accepted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AsyncResponse"
                },
                "examples": {
                  "AsyncResponse": {
                    "$ref": "#/components/examples/AsyncResponse"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request\n\n<details close>\n<summary>ErrorDetails</summary>\n\ncode | attribute | 対処方法\n-----|-----------|----------\nnot_found | lb_domain | 指定したLbDomainIdを確認してください\nnot_found | monitoring | 指定したMonitoringResourceNameを確認してください\nduplicated | name | 指定した監視名は既に登録されています\ninvalid_format | name | 指定した監視名のフォーマットを確認してください\ninvalid_format | tls_sni | 指定したTLS SNIのフォーマットを確認してください\ninvalid_format_status_code | status_codes | 指定したステータスコードのフォーマットを確認してください\ninvalid | schema | 指定したパラメータを確認してください\n\n</details>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TargetBadRequest"
                },
                "examples": {
                  "BadRequest": {
                    "$ref": "#/components/examples/BadRequest"
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "deleteMonitoring",
        "summary": "監視の削除",
        "description": "指定したMonitoringResourceNameの監視を削除します。\n",
        "tags": [
          "monitorings"
        ],
        "security": [
          {
            "DPFOperator": [
              "dpf_write"
            ]
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AsyncResponse"
                },
                "examples": {
                  "AsyncResponse": {
                    "$ref": "#/components/examples/AsyncResponse"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request\n\n<details close>\n<summary>ErrorDetails</summary>\n\ncode | attribute | 対処方法\n-----|-----------|----------\nnot_found | lb_domain | 指定したLbDomainIdを確認してください\nnot_found | monitoring | 指定したMonitoringResourceNameを確認してください\nforbidden | monitoring | 指定したMonitoringResourceNameはエンドポイントで利用されています\ninvalid | schema | 指定したパラメータを確認してください\n\n</details>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                },
                "examples": {
                  "BadRequest": {
                    "$ref": "#/components/examples/BadRequest"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/lb_domains/{LbDomainId}/sites": {
      "parameters": [
        {
          "$ref": "#/components/parameters/LbDomainId"
        }
      ],
      "get": {
        "operationId": "getSiteList",
        "summary": "サイトの一覧取得",
        "description": "サイトの一覧を取得します。\n",
        "tags": [
          "sites"
        ],
        "security": [
          {
            "DPFViewer": [
              "dpf_read"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetSites"
                },
                "examples": {
                  "GetSites": {
                    "$ref": "#/components/examples/GetSites"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request\n\n<details close>\n<summary>ErrorDetails</summary>\n\ncode | attribute | 対処方法\n-----|-----------|----------\nnot_found | lb_domain | 指定したLbDomainIdを確認してください\ninvalid | schema | 指定したパラメータを確認してください\n\n</details>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                },
                "examples": {
                  "BadRequest": {
                    "$ref": "#/components/examples/BadRequest"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "operationId": "postSite",
        "summary": "サイトの作成",
        "description": "新しくサイトを作成します。\\\n作成できる最大件数は50件です。\n",
        "tags": [
          "sites"
        ],
        "security": [
          {
            "DPFOperator": [
              "dpf_write"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PostSite"
              },
              "examples": {
                "PostSite": {
                  "$ref": "#/components/examples/PostSite"
                }
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Accepted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AsyncResponse"
                },
                "examples": {
                  "AsyncResponse": {
                    "$ref": "#/components/examples/AsyncResponse"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request\n\n<details close>\n<summary>ErrorDetails</summary>\n\ncode | attribute | 対処方法\n-----|-----------|----------\nnot_found | lb_domain | 指定したLbDomainIdを確認してください\nduplicated | resource_name | 指定したSiteResourceNameは既に登録されています\ninvalid_length | resource_name | 指定したSiteResourceNameの文字数を確認してください\ninvalid_format | resource_name | 指定したSiteResourceNameのフォーマットを確認してください\ninvalid | schema | 指定したパラメータを確認してください\nduplicated | name | 指定したサイト名は既に登録されています\ntoo_many | name | 登録の上限数を超えています\ninvalid_format | name | 指定したサイト名のフォーマットを確認してください\n\n</details>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                },
                "examples": {
                  "BadRequest": {
                    "$ref": "#/components/examples/BadRequest"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/lb_domains/{LbDomainId}/sites/{SiteResourceName}": {
      "parameters": [
        {
          "$ref": "#/components/parameters/LbDomainId"
        },
        {
          "$ref": "#/components/parameters/SiteResourceName"
        }
      ],
      "get": {
        "operationId": "getSite",
        "summary": "サイトの取得",
        "description": "指定したSiteResourceNameのサイトを取得します。\n",
        "tags": [
          "sites"
        ],
        "security": [
          {
            "DPFViewer": [
              "dpf_read"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetSite"
                },
                "examples": {
                  "GetSite": {
                    "$ref": "#/components/examples/GetSite"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request\n\n<details close>\n<summary>ErrorDetails</summary>\n\ncode | attribute | 対処方法\n-----|-----------|----------\nnot_found | lb_domain | 指定したLbDomainIdを確認してください\nnot_found | site | 指定したSiteResourceNameを確認してください\ninvalid | schema | 指定したパラメータを確認してください\n\n</details>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                },
                "examples": {
                  "BadRequest": {
                    "$ref": "#/components/examples/BadRequest"
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "operationId": "patchSite",
        "summary": "サイトの更新",
        "description": "指定したSiteResourceNameのサイトを更新します。\n",
        "tags": [
          "sites"
        ],
        "security": [
          {
            "DPFOperator": [
              "dpf_write"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PatchSite"
              },
              "examples": {
                "PatchSite": {
                  "$ref": "#/components/examples/PatchSite"
                }
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Accepted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AsyncResponse"
                },
                "examples": {
                  "AsyncResponse": {
                    "$ref": "#/components/examples/AsyncResponse"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request\n\n<details close>\n<summary>ErrorDetails</summary>\n\ncode | attribute | 対処方法\n-----|-----------|----------\nnot_found | lb_domain | 指定したLbDomainIdを確認してください\nnot_found | site | 指定したSiteResourceNameを確認してください\ninvalid | schema | 指定したパラメータを確認してください\nduplicated | name | 指定したサイト名は既に登録されています\ninvalid_format | name | 指定したサイト名のフォーマットを確認してください\n\n</details>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                },
                "examples": {
                  "BadRequest": {
                    "$ref": "#/components/examples/BadRequest"
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "deleteSite",
        "summary": "サイトの削除",
        "description": "指定したSiteResourceNameのサイトを削除します。\n",
        "tags": [
          "sites"
        ],
        "security": [
          {
            "DPFOperator": [
              "dpf_write"
            ]
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AsyncResponse"
                },
                "examples": {
                  "AsyncResponse": {
                    "$ref": "#/components/examples/AsyncResponse"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request\n\n<details close>\n<summary>ErrorDetails</summary>\n\ncode | attribute | 対処方法\n-----|-----------|----------\nnot_found | lb_domain | 指定したLbDomainIdを確認してください\nnot_found | site | 指定したSiteResourceNameを確認してください\ninvalid | schema | 指定したパラメータを確認してください\nforbidden | site | 指定したSiteResourceNameはルールで利用されています\n\n</details>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                },
                "examples": {
                  "BadRequest": {
                    "$ref": "#/components/examples/BadRequest"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/lb_domains/{LbDomainId}/sites/{SiteResourceName}/endpoints": {
      "parameters": [
        {
          "$ref": "#/components/parameters/LbDomainId"
        },
        {
          "$ref": "#/components/parameters/SiteResourceName"
        }
      ],
      "get": {
        "operationId": "getEndpointList",
        "summary": "エンドポイントの一覧取得",
        "description": "エンドポイントの一覧を取得します。\n",
        "tags": [
          "endpoints"
        ],
        "security": [
          {
            "DPFViewer": [
              "dpf_read"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetEndpoints"
                },
                "examples": {
                  "GetEndpoints": {
                    "$ref": "#/components/examples/GetEndpoints"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request\n\n<details close>\n<summary>ErrorDetails</summary>\n\ncode | attribute | 対処方法\n-----|-----------|----------\nnot_found | lb_domain | 指定したLbDomainIdを確認してください\nnot_found | site | 指定したSiteResourceNameを確認してください\ninvalid | schema | 指定したパラメータを確認してください\n\n</details>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                },
                "examples": {
                  "BadRequest": {
                    "$ref": "#/components/examples/BadRequest"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "operationId": "postEndpoint",
        "summary": "エンドポイントの作成",
        "description": "新しくエンドポイントを作成します。\\\n作成できる最大件数は50件です。\\\nエラー発生時はErrorDetailsにtargetキーが付与され、問題の箇所が特定できます。\n",
        "tags": [
          "endpoints"
        ],
        "security": [
          {
            "DPFOperator": [
              "dpf_write"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PostEndpoint"
              },
              "examples": {
                "PostEndpoint": {
                  "$ref": "#/components/examples/PostEndpoint"
                }
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Accepted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AsyncResponse"
                },
                "examples": {
                  "AsyncResponse": {
                    "$ref": "#/components/examples/AsyncResponse"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request\n\n<details close>\n<summary>ErrorDetails</summary>\n\ncode | attribute | 対処方法\n-----|-----------|----------\nnot_found | lb_domain | 指定したLbDomainIdを確認してください\nnot_found | site | 指定したSiteResourceNameを確認してください\nduplicated | resource_name | 指定したEndpointResourceNameは既に登録されています\ninvalid_length | resource_name | 指定したEndpointResourceNameの文字数を確認してください\ninvalid_format | resource_name | 指定したEndpointResourceNameのフォーマットを確認してください\nduplicated | name | 指定したエンドポイント名は既に登録されています\ntoo_many | name | 登録の上限数を超えています\ninvalid_format | name | 指定したエンドポイント名のフォーマットを確認してください\ninvalid_length | monitoring_target | 指定した監視ターゲットの文字数を確認してください\ninvalid_format | monitoring_target | 指定した監視ターゲットのフォーマットを確認してください\nforbidden | monitoring_target | 指定した監視ターゲットは許容されていません\ntoo_many | rdata | 登録の上限数を超えています\nduplicated_rdatum | rdata | 指定したRDATAは既に登録されています\ninvalid_char_type_rdatum | rdata | 指定したRDATAの文字種を確認してください\ninvalid_length_rdatum | rdata | 指定したRDATAの文字数を確認してください\ninvalid_format_rdatum | rdata | 指定したRDATAのフォーマットを確認してください\nduplicated_resource_name | monitorings | 指定した監視は既に登録されています\ninvalid_length_resource_name | monitorings | 指定した監視の文字数を確認してください\ninvalid_format_resource_name | monitorings | 指定した監視のフォーマットを確認してください\nnot_found | monitorings | 指定した監視を確認してください\ninvalid | schema | 指定したパラメータを確認してください\n\n</details>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TargetBadRequest"
                },
                "examples": {
                  "BadRequest": {
                    "$ref": "#/components/examples/BadRequest"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/lb_domains/{LbDomainId}/sites/{SiteResourceName}/endpoints/{EndpointResourceName}": {
      "parameters": [
        {
          "$ref": "#/components/parameters/LbDomainId"
        },
        {
          "$ref": "#/components/parameters/SiteResourceName"
        },
        {
          "$ref": "#/components/parameters/EndpointResourceName"
        }
      ],
      "get": {
        "operationId": "getEndpoint",
        "summary": "エンドポイントの取得",
        "description": "指定したEndpointResourceNameのエンドポイントを取得します。\n",
        "tags": [
          "endpoints"
        ],
        "security": [
          {
            "DPFViewer": [
              "dpf_read"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetEndpoint"
                },
                "examples": {
                  "GetEndpoint": {
                    "$ref": "#/components/examples/GetEndpoint"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request\n\n<details close>\n<summary>ErrorDetails</summary>\n\ncode | attribute | 対処方法\n-----|-----------|----------\nnot_found | lb_domain | 指定したLbDomainIdを確認してください\nnot_found | site | 指定したSiteResourceNameを確認してください\nnot_found | endpoint | 指定したEndpointResourceNameを確認してください\ninvalid | schema | 指定したパラメータを確認してください\n\n</details>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                },
                "examples": {
                  "BadRequest": {
                    "$ref": "#/components/examples/BadRequest"
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "operationId": "patchEndpoint",
        "summary": "エンドポイントの更新",
        "description": "指定したEndpointResourceNameのエンドポイントを更新します。\\\nエラー発生時はErrorDetailsにtargetキーが付与され、問題の箇所が特定できます。\n",
        "tags": [
          "endpoints"
        ],
        "security": [
          {
            "DPFOperator": [
              "dpf_write"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PatchEndpoint"
              },
              "examples": {
                "PatchEndpoint": {
                  "$ref": "#/components/examples/PatchEndpoint"
                }
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Accepted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AsyncResponse"
                },
                "examples": {
                  "AsyncResponse": {
                    "$ref": "#/components/examples/AsyncResponse"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request\n\n<details close>\n<summary>ErrorDetails</summary>\n\ncode | attribute | 対処方法\n-----|-----------|----------\nnot_found | lb_domain | 指定したLbDomainIdを確認してください\nnot_found | site | 指定したSiteResourceNameを確認してください\nnot_found | endpoint | 指定したEndpointResourceNameを確認してください\nduplicated | name | 指定したエンドポイント名は既に登録されています\ninvalid_format | name | 指定したエンドポイント名のフォーマットを確認してください\ninvalid_length | monitoring_target | 指定した監視ターゲットの文字数を確認してください\ninvalid_format | monitoring_target | 指定した監視ターゲットのフォーマットを確認してください\nforbidden | monitoring_target | 指定した監視ターゲットは許容されていません\ntoo_many | rdata | 登録の上限数を超えています\nduplicated_rdatum | rdata | 指定したRDATAは既に登録されています\ninvalid_char_type_rdatum | rdata | 指定したRDATAの文字種を確認してください\ninvalid_length_rdatum | rdata | 指定したRDATAの文字数を確認してください\ninvalid_format_rdatum | rdata | 指定したRDATAのフォーマットを確認してください\nduplicated_resource_name | monitorings | 指定した監視は既に登録されています\ninvalid_length_resource_name | monitorings | 指定した監視の文字数を確認してください\ninvalid_format_resource_name | monitorings | 指定した監視のフォーマットを確認してください\nnot_found | monitorings | 指定した監視を確認してください\ninvalid | schema | 指定したパラメータを確認してください\n\n</details>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TargetBadRequest"
                },
                "examples": {
                  "BadRequest": {
                    "$ref": "#/components/examples/BadRequest"
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "deleteEndpoint",
        "summary": "エンドポイントの削除",
        "description": "指定したEndpointResourceNameのエンドポイントを削除します。\n",
        "tags": [
          "endpoints"
        ],
        "security": [
          {
            "DPFOperator": [
              "dpf_write"
            ]
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AsyncResponse"
                },
                "examples": {
                  "AsyncResponse": {
                    "$ref": "#/components/examples/AsyncResponse"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request\n\n<details close>\n<summary>ErrorDetails</summary>\n\ncode | attribute | 対処方法\n-----|-----------|----------\nnot_found | lb_domain | 指定したLbDomainIdを確認してください\nnot_found | site | 指定したSiteResourceNameを確認してください\nnot_found | endpoint | 指定したEndpointResourceNameを確認してください\ninvalid | schema | 指定したパラメータを確認してください\n\n</details>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                },
                "examples": {
                  "BadRequest": {
                    "$ref": "#/components/examples/BadRequest"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/lb_domains/{LbDomainId}/sites/{SiteResourceName}/endpoints/{EndpointResourceName}/failover": {
      "parameters": [
        {
          "$ref": "#/components/parameters/LbDomainId"
        },
        {
          "$ref": "#/components/parameters/SiteResourceName"
        },
        {
          "$ref": "#/components/parameters/EndpointResourceName"
        }
      ],
      "post": {
        "operationId": "postEndpointFailover",
        "summary": "エンドポイントの手動切り離し",
        "description": "指定したEndpointResourceNameのエンドポイントの手動切り離しを実行します。\n",
        "tags": [
          "endpoints"
        ],
        "security": [
          {
            "DPFOperator": [
              "dpf_write"
            ]
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AsyncResponse"
                },
                "examples": {
                  "AsyncResponse": {
                    "$ref": "#/components/examples/AsyncResponse"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request\n\n<details close>\n<summary>ErrorDetails</summary>\n\ncode | attribute | 対処方法\n-----|-----------|----------\nnot_found | lb_domain | 指定したLbDomainIdを確認してください\nnot_found | site | 指定したSiteResourceNameを確認してください\nnot_found | endpoint | 指定したEndpointResourceNameを確認してください\nforbidden | endpoint | 指定したEndpointResourceNameの状態や手動切り離し設定値がfalseになっています\ninvalid | schema | 指定したパラメータを確認してください\n\n</details>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                },
                "examples": {
                  "BadRequest": {
                    "$ref": "#/components/examples/BadRequest"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/lb_domains/{LbDomainId}/sites/{SiteResourceName}/endpoints/{EndpointResourceName}/failback": {
      "parameters": [
        {
          "$ref": "#/components/parameters/LbDomainId"
        },
        {
          "$ref": "#/components/parameters/SiteResourceName"
        },
        {
          "$ref": "#/components/parameters/EndpointResourceName"
        }
      ],
      "post": {
        "operationId": "postEndpointFailback",
        "summary": "エンドポイントの手動切り戻し",
        "description": "指定したEndpointResourceNameのエンドポイントの手動切り戻しを実行します。\n",
        "tags": [
          "endpoints"
        ],
        "security": [
          {
            "DPFOperator": [
              "dpf_write"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PostManualFailback"
              },
              "examples": {
                "PostManualFailback": {
                  "$ref": "#/components/examples/PostManualFailback"
                }
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Accepted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AsyncResponse"
                },
                "examples": {
                  "AsyncResponse": {
                    "$ref": "#/components/examples/AsyncResponse"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request\n\n<details close>\n<summary>ErrorDetails</summary>\n\ncode | attribute | 対処方法\n-----|-----------|----------\nnot_found | lb_domain | 指定したLbDomainIdを確認してください\nnot_found | site | 指定したSiteResourceNameを確認してください\nnot_found | endpoint | 指定したEndpointResourceNameを確認してください\nforbidden | endpoint | 指定したEndpointResourceNameの状態や手動切り離し設定値がfalseになっています\ninvalid_live_status | endpoint | 指定したEndpointResourceNameのLive Statusを確認してください\ninvalid | schema | 指定したパラメータを確認してください        \n\n</details>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                },
                "examples": {
                  "BadRequest": {
                    "$ref": "#/components/examples/BadRequest"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/lb_domains/{LbDomainId}/rules": {
      "parameters": [
        {
          "$ref": "#/components/parameters/LbDomainId"
        }
      ],
      "get": {
        "operationId": "getRuleList",
        "summary": "ルールの一覧取得",
        "description": "ルールの一覧を取得します。\n",
        "tags": [
          "rules"
        ],
        "security": [
          {
            "DPFViewer": [
              "dpf_read"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetRules"
                },
                "examples": {
                  "GetRules": {
                    "$ref": "#/components/examples/GetRules"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request\n\n<details close>\n<summary>ErrorDetails</summary>\n\ncode | attribute | 対処方法\n-----|-----------|----------\nnot_found | lb_domain | 指定したLbDomainIdを確認してください\ninvalid | schema | 指定したパラメータを確認してください\n\n</details>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                },
                "examples": {
                  "BadRequest": {
                    "$ref": "#/components/examples/BadRequest"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "operationId": "postRule",
        "summary": "ルールの作成",
        "description": "新しくルールを作成します。\\\n作成できる最大件数は10件です。\n",
        "tags": [
          "rules"
        ],
        "security": [
          {
            "DPFOperator": [
              "dpf_write"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PostRule"
              },
              "examples": {
                "PostRule": {
                  "$ref": "#/components/examples/PostRule"
                }
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Accepted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AsyncResponse"
                },
                "examples": {
                  "AsyncResponse": {
                    "$ref": "#/components/examples/AsyncResponse"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request\n\n<details close>\n<summary>ErrorDetails</summary>\n\ncode | attribute | 対処方法\n-----|-----------|----------\nnot_found | lb_domain | 指定したLbDomainIdを確認してください\nduplicated | resource_name | 指定したRuleResourceNameは既に登録されています\ninvalid_length | resource_name | 指定したRuleResourceNameの文字数を確認してください\ninvalid_format | resource_name | 指定したRuleResourceNameのフォーマットを確認してください\nduplicated | name | 指定したルール名は既に登録されています\ntoo_many | name | 登録の上限数を超えています\ninvalid_format | name | 指定したルール名のフォーマットを確認してください\ninvalid | schema | 指定したパラメータを確認してください\n\n</details>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                },
                "examples": {
                  "BadRequest": {
                    "$ref": "#/components/examples/BadRequest"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/lb_domains/{LbDomainId}/rules/{RuleResourceName}": {
      "parameters": [
        {
          "$ref": "#/components/parameters/LbDomainId"
        },
        {
          "$ref": "#/components/parameters/RuleResourceName"
        }
      ],
      "get": {
        "operationId": "getRule",
        "summary": "ルールの取得",
        "description": "指定したRuleResourceNameのルールを取得します。\n",
        "tags": [
          "rules"
        ],
        "security": [
          {
            "DPFViewer": [
              "dpf_read"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetRule"
                },
                "examples": {
                  "GetRule": {
                    "$ref": "#/components/examples/GetRule"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request\n\n<details close>\n<summary>ErrorDetails</summary>\n\ncode | attribute | 対処方法\n-----|-----------|----------\nnot_found | lb_domain | 指定したLbDomainIdを確認してください\nnot_found | rule | 指定したRuleResourceNameを確認してください\ninvalid | schema | 指定したパラメータを確認してください\n\n</details>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                },
                "examples": {
                  "BadRequest": {
                    "$ref": "#/components/examples/BadRequest"
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "operationId": "patchRule",
        "summary": "ルールの更新",
        "description": "指定したRuleResourceNameのルールを更新します。\n",
        "tags": [
          "rules"
        ],
        "security": [
          {
            "DPFOperator": [
              "dpf_write"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PatchRule"
              },
              "examples": {
                "PatchRule": {
                  "$ref": "#/components/examples/PatchRule"
                }
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Accepted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AsyncResponse"
                },
                "examples": {
                  "AsyncResponse": {
                    "$ref": "#/components/examples/AsyncResponse"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request\n\n<details close>\n<summary>ErrorDetails</summary>\n\ncode | attribute | 対処方法\n-----|-----------|----------\nnot_found | lb_domain | 指定したLbDomainIdを確認してください\nnot_found | rule | 指定したRuleResourceNameを確認してください\ninvalid | schema | 指定したパラメータを確認してください\nduplicated | name | 指定したルール名は既に登録されています\ninvalid_format | name | 指定したルール名のフォーマットを確認してください\n\n</details>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                },
                "examples": {
                  "BadRequest": {
                    "$ref": "#/components/examples/BadRequest"
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "deleteRule",
        "summary": "ルールの削除",
        "description": "指定したRuleResourceNameのルールを削除します。\n",
        "tags": [
          "rules"
        ],
        "security": [
          {
            "DPFOperator": [
              "dpf_write"
            ]
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AsyncResponse"
                },
                "examples": {
                  "AsyncResponse": {
                    "$ref": "#/components/examples/AsyncResponse"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request\n\n<details close>\n<summary>ErrorDetails</summary>\n\ncode | attribute | 対処方法\n-----|-----------|----------\nnot_found | lb_domain | 指定したLbDomainIdを確認してください\nnot_found | rule | 指定したRuleResourceNameを確認してください\nforbidden | rule | 指定したRuleResourceNameは適用中のルールのため削除できません\ninvalid | schema | 指定したパラメータを確認してください\n\n</details>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                },
                "examples": {
                  "BadRequest": {
                    "$ref": "#/components/examples/BadRequest"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/lb_domains/{LbDomainId}/rules/{RuleResourceName}/rule_methods": {
      "parameters": [
        {
          "$ref": "#/components/parameters/LbDomainId"
        },
        {
          "$ref": "#/components/parameters/RuleResourceName"
        }
      ],
      "get": {
        "operationId": "getRuleMethodList",
        "summary": "ルールメソッドの一覧取得",
        "description": "ルールメソッドの一覧を取得します。\n",
        "tags": [
          "rule_methods"
        ],
        "security": [
          {
            "DPFViewer": [
              "dpf_read"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetRuleMethods"
                },
                "examples": {
                  "GetRuleMethods": {
                    "$ref": "#/components/examples/GetRuleMethods"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request\n\n<details close>\n<summary>ErrorDetails</summary>\n\ncode | attribute | 対処方法\n-----|-----------|----------\nnot_found | lb_domain | 指定したLbDomainIdを確認してください\nnot_found | rule | 指定したRuleResourceNameを確認してください\ninvalid | schema | 指定したパラメータを確認してください\n\n</details>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                },
                "examples": {
                  "BadRequest": {
                    "$ref": "#/components/examples/BadRequest"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "operationId": "postRuleMethod",
        "summary": "ルールメソッドの作成",
        "description": "新しくルールメソッドを作成します。\\\n作成できるメソッドは最大6階層です。\n",
        "tags": [
          "rule_methods"
        ],
        "security": [
          {
            "DPFOperator": [
              "dpf_write"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PostRuleMethod"
              },
              "examples": {
                "PostRuleMethod": {
                  "$ref": "#/components/examples/PostRuleMethod"
                }
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Accepted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AsyncResponse"
                },
                "examples": {
                  "AsyncResponse": {
                    "$ref": "#/components/examples/AsyncResponse"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request\n\n<details close>\n<summary>ErrorDetails</summary>\n\ncode | attribute | 対処方法\n-----|-----------|----------\nnot_found | lb_domain | 指定したLbDomainIdを確認してください\nnot_found | rule | 指定したRuleResourceNameを確認してください\nrequired | priority | 優先度を指定してください\nduplicated | priority | 指定した優先度は既に登録されています\nforbidden | priority | 親メソッドがfailoverの場合のみ指定してください\ntoo_many | method | 登録の上限数を超えています\nduplicated | method | 指定したメソッドは既に登録されています\ntoo_deep | method | 登録最大階層を超えています\nconflicted | method | 指定したメソッドは競合しています\nforbidden | mtype | 指定できないmtypeを指定しています\nrequired | parent_resource_name | ParentResourceNameを指定してください\nforbidden | parent_resource_name | 指定できないParentResourceNameを指定しています\nnot_found | parent_resource_name | 指定したParentResourceNameを確認してください\ninvalid_length | parent_resource_name | 指定したParentResourceNameの文字数を確認してください\ninvalid_format | parent_resource_name | 指定したParentResourceNameのフォーマットを確認してください\nduplicated | resource_name | 指定したRuleMethodResourceNameは既に登録されています\ninvalid_length | resource_name | 指定したRuleMethodResourceNameの文字数を確認してください\ninvalid_format | resource_name | 指定したRuleMethodResourceNameのフォーマットを確認してください\nnot_found | site_resource_name | 指定したSiteResourceNameを確認してください\nrequired | site_resource_name | SiteResourceNameを指定してください\ninvalid_length | site_resource_name | 指定したSiteResourceNameの文字数を確認してください\ninvalid_format | site_resource_name | 指定したSiteResourceNameのフォーマットを確認してください\nforbidden | site_resource_name | 指定できないSiteResourceNameを指定しています\nconflicted | site_resource_name | 指定できないサイトを指定しています\ninvalid | schema | 指定したパラメータを確認してください\n\n</details>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                },
                "examples": {
                  "BadRequest": {
                    "$ref": "#/components/examples/BadRequest"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/lb_domains/{LbDomainId}/rules/{RuleResourceName}/rule_methods/{RuleMethodResourceName}": {
      "parameters": [
        {
          "$ref": "#/components/parameters/LbDomainId"
        },
        {
          "$ref": "#/components/parameters/RuleResourceName"
        },
        {
          "$ref": "#/components/parameters/RuleMethodResourceName"
        }
      ],
      "get": {
        "operationId": "getRuleMethod",
        "summary": "ルールメソッドの取得",
        "description": "指定したRuleMethodResourceNameのルールメソッドを取得します。\n",
        "tags": [
          "rule_methods"
        ],
        "security": [
          {
            "DPFViewer": [
              "dpf_read"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetRuleMethod"
                },
                "examples": {
                  "GetRuleMethod": {
                    "$ref": "#/components/examples/GetRuleMethod"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request\n\n<details close>\n<summary>ErrorDetails</summary>\n\ncode | attribute | 対処方法\n-----|-----------|----------\nnot_found | lb_domain | 指定したLbDomainIdを確認してください\nnot_found | rule | 指定したRuleResourceNameを確認してください\nnot_found | rule_method | 指定したRuleMethodResourceNameを確認してください\ninvalid | schema | 指定したパラメータを確認してください\n\n</details>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                },
                "examples": {
                  "BadRequest": {
                    "$ref": "#/components/examples/BadRequest"
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "operationId": "patchRuleMethod",
        "summary": "ルールメソッドの更新",
        "description": "指定したRuleMethodResourceNameのルールメソッドを更新します。\n",
        "tags": [
          "rule_methods"
        ],
        "security": [
          {
            "DPFOperator": [
              "dpf_write"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PatchRuleMethod"
              },
              "examples": {
                "PatchRuleMethod": {
                  "$ref": "#/components/examples/PatchRuleMethod"
                }
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Accepted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AsyncResponse"
                },
                "examples": {
                  "AsyncResponse": {
                    "$ref": "#/components/examples/AsyncResponse"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request\n\n<details close>\n<summary>ErrorDetails</summary>\n\ncode | attribute | 対処方法\n-----|-----------|----------\nnot_found | lb_domain | 指定したLbDomainIdを確認してください\nnot_found | rule | 指定したRuleResourceNameを確認してください\nnot_found | rule_method | 指定したRuleMethodResourceNameを確認してください\nduplicated | priority | 指定した優先度は既に登録されています\nforbidden | priority | 親メソッドがfailoverの場合のみ指定してください\ninvalid | schema | 指定したパラメータを確認してください\n\n</details>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                },
                "examples": {
                  "BadRequest": {
                    "$ref": "#/components/examples/BadRequest"
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "deleteRuleMethod",
        "summary": "ルールメソッドの削除",
        "description": "指定したRuleMethodResourceNameのルールメソッドを削除します。\n",
        "tags": [
          "rule_methods"
        ],
        "security": [
          {
            "DPFOperator": [
              "dpf_write"
            ]
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AsyncResponse"
                },
                "examples": {
                  "AsyncResponse": {
                    "$ref": "#/components/examples/AsyncResponse"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request\n\n<details close>\n<summary>ErrorDetails</summary>\n\ncode | attribute | 対処方法\n-----|-----------|----------\nnot_found | lb_domain | 指定したLbDomainIdを確認してください\nnot_found | rule | 指定したRuleResourceNameを確認してください\nnot_found | rule_method | 指定したRuleMethodResourceNameを確認してください\nforbidden | rule_method | 指定したRuleMethodResourceNameは子メソッドが存在するため削除できません\ninvalid | schema | 指定したパラメータを確認してください\n\n</details>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                },
                "examples": {
                  "BadRequest": {
                    "$ref": "#/components/examples/BadRequest"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/lb_domains/{LbDomainId}/config": {
      "parameters": [
        {
          "$ref": "#/components/parameters/LbDomainId"
        }
      ],
      "get": {
        "operationId": "getConfigList",
        "summary": "設定の一覧取得",
        "description": "設定の一覧を取得します。\n",
        "tags": [
          "config"
        ],
        "security": [
          {
            "DPFViewer": [
              "dpf_read"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetConfig"
                },
                "examples": {
                  "GetConfig": {
                    "$ref": "#/components/examples/GetConfig"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request\n\n<details close>\n<summary>ErrorDetails</summary>\n\ncode | attribute | 対処方法\n-----|-----------|----------\nnot_found | lb_domain | 指定したLbDomainIdを確認してください\ninvalid | schema | 指定したパラメータを確認してください\n\n</details>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                },
                "examples": {
                  "BadRequest": {
                    "$ref": "#/components/examples/BadRequest"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "putConfig",
        "summary": "設定の一括更新",
        "description": "設定を一括更新します。\\\nエラー発生時はErrorDetailsにJSONPath形式のtargetキーが付与され、問題の箇所が特定できます。\n",
        "tags": [
          "config"
        ],
        "security": [
          {
            "DPFOperator": [
              "dpf_write"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PutConfig"
              },
              "examples": {
                "PutConfig": {
                  "$ref": "#/components/examples/PutConfig"
                }
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Accepted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AsyncResponse"
                },
                "examples": {
                  "AsyncResponse": {
                    "$ref": "#/components/examples/AsyncResponse"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request\n\n<details close>\n<summary>ErrorDetails</summary>\n\ncode | attribute | 対処方法\n-----|-----------|----------\nnot_found | lb_domain | 指定したLbDomainIdを確認してください\ninvalid | schema | 指定したパラメータを確認してください\ntoo_large | config | 指定したパラメータのデータ量が1Mibを超えています\nrequired | config | targetのパラメータを指定してください\nrule_in_use | config | 適用中のルールが存在しません\nnot_found | config | 特定のリソースが存在しません\ninvalid_type | config | 指定したパラメータの型を確認してください\ninvalid_length | config | 指定したパラメータの文字数を確認してください\ninvalid_char_type | config | 指定したパラメータの文字種を確認してください\ninvalid_format | config | 指定したパラメータのフォーマットを確認してください\nout_of_range | config | 指定したパラメータの数値を確認してください\ntoo_many | config | 登録の上限数を超えています\ntoo_few | config | 登録の必須指定数を下回っています\nforbidden | config | 許容されていない文字列を指定しています\nduplicated | config | 同じパラメータを複数指定しています\nconflicted | config | 競合するパラメータを指定しています\ntoo_deep | config | 指定したパラメータは登録最大階層を超えています\n\n</details>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TargetBadRequest"
                },
                "examples": {
                  "BadRequest": {
                    "$ref": "#/components/examples/BadRequest"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/lb_domains/{LbDomainId}/logs": {
      "parameters": [
        {
          "$ref": "#/components/parameters/LbDomainId"
        }
      ],
      "get": {
        "operationId": "getLbDomainsLogList",
        "summary": "LBドメイン操作ログの一覧取得",
        "description": "LBドメインを操作したログの一覧を取得します。\\\n\"_keywords\" から始まるパラメータは、合計で30個まで指定可能です。\n",
        "tags": [
          "logs (lb_domains)"
        ],
        "security": [
          {
            "DPFViewer": [
              "dpf_read"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/Type"
          },
          {
            "$ref": "#/components/parameters/LogsOffset"
          },
          {
            "$ref": "#/components/parameters/LogsLimit"
          },
          {
            "$ref": "#/components/parameters/StartDate"
          },
          {
            "$ref": "#/components/parameters/EndDate"
          },
          {
            "$ref": "#/components/parameters/TimeZone"
          },
          {
            "$ref": "#/components/parameters/Order"
          },
          {
            "$ref": "#/components/parameters/KeywordsFullText"
          },
          {
            "$ref": "#/components/parameters/KeywordsLbDomainsLogsLogType"
          },
          {
            "$ref": "#/components/parameters/KeywordsOperator"
          },
          {
            "$ref": "#/components/parameters/KeywordsLbDomainsLogsOperation"
          },
          {
            "$ref": "#/components/parameters/KeywordsTarget"
          },
          {
            "$ref": "#/components/parameters/KeywordsDetail"
          },
          {
            "$ref": "#/components/parameters/KeywordsRequestId"
          },
          {
            "$ref": "#/components/parameters/KeywordsLbDomainsLogsStatus"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetLbDomainsLogs"
                },
                "examples": {
                  "GetContractsLogs": {
                    "$ref": "#/components/examples/GetLbDomainsLogs"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request\n\n<details close>\n<summary>ErrorDetails</summary>\n\ncode | attribute | 対処方法\n-----|-----------|----------\nnot_found | lb_domain | 指定したLbDomainIdを確認してください\ninvalid | schema | 指定したパラメータを確認してください\ninvalid | start_date | 指定した日付を確認してください\ninvalid | end_date | 指定した日付を確認してください\n\n</details>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                },
                "examples": {
                  "BadRequest": {
                    "$ref": "#/components/examples/BadRequest"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/lb_domains/{LbDomainId}/logs/count": {
      "parameters": [
        {
          "$ref": "#/components/parameters/LbDomainId"
        }
      ],
      "get": {
        "operationId": "getLbDomainsLogListCount",
        "summary": "LBドメイン操作ログの件数取得",
        "description": "LBドメインを操作したログの件数を取得します。\\\n\"_keywords\" から始まるパラメータは、合計で30個まで指定可能です。\n",
        "tags": [
          "logs (lb_domains)"
        ],
        "security": [
          {
            "DPFViewer": [
              "dpf_read"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/Type"
          },
          {
            "$ref": "#/components/parameters/StartDate"
          },
          {
            "$ref": "#/components/parameters/EndDate"
          },
          {
            "$ref": "#/components/parameters/TimeZone"
          },
          {
            "$ref": "#/components/parameters/KeywordsFullText"
          },
          {
            "$ref": "#/components/parameters/KeywordsLbDomainsLogsLogType"
          },
          {
            "$ref": "#/components/parameters/KeywordsOperator"
          },
          {
            "$ref": "#/components/parameters/KeywordsLbDomainsLogsOperation"
          },
          {
            "$ref": "#/components/parameters/KeywordsTarget"
          },
          {
            "$ref": "#/components/parameters/KeywordsDetail"
          },
          {
            "$ref": "#/components/parameters/KeywordsRequestId"
          },
          {
            "$ref": "#/components/parameters/KeywordsLbDomainsLogsStatus"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCount"
                },
                "examples": {
                  "GetCount": {
                    "$ref": "#/components/examples/GetCount"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request\n\n<details close>\n<summary>ErrorDetails</summary>\n\ncode | attribute | 対処方法\n-----|-----------|----------\nnot_found | lb_domain | 指定したLbDomainIdを確認してください\ninvalid | schema | 指定したパラメータを確認してください\ninvalid | start_date | 指定した日付を確認してください\ninvalid | end_date | 指定した日付を確認してください\n\n</details>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                },
                "examples": {
                  "BadRequest": {
                    "$ref": "#/components/examples/BadRequest"
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "DPFOperator": {
        "description": "IIJ-IDで[設定]の更新権限を持ったユーザが発行したアクセストークン",
        "type": "http",
        "scheme": "bearer"
      },
      "DPFViewer": {
        "description": "IIJ-IDで[設定]の参照権限を持ったユーザが発行したアクセストークン",
        "type": "http",
        "scheme": "bearer"
      },
      "ContractOperator": {
        "description": "IIJ-IDで[運用]の更新権限を持ったユーザが発行したアクセストークン",
        "type": "http",
        "scheme": "bearer"
      }
    },
    "parameters": {
      "RequestId": {
        "name": "RequestId",
        "description": "ID",
        "in": "path",
        "required": true,
        "schema": {
          "$ref": "#/components/schemas/RequestId"
        }
      },
      "ContractId": {
        "name": "ContractId",
        "description": "ID",
        "in": "path",
        "required": true,
        "schema": {
          "$ref": "#/components/schemas/SystemId"
        }
      },
      "TsigId": {
        "name": "TsigId",
        "description": "ID",
        "in": "path",
        "required": true,
        "schema": {
          "$ref": "#/components/schemas/Id"
        }
      },
      "CommonConfigId": {
        "name": "CommonConfigId",
        "description": "GET common_configs Schemaにおける id",
        "in": "path",
        "required": true,
        "schema": {
          "$ref": "#/components/schemas/Id"
        }
      },
      "CcSecTransferAclId": {
        "name": "CcSecTransferAclId",
        "description": "ID",
        "in": "path",
        "required": true,
        "schema": {
          "$ref": "#/components/schemas/Id"
        }
      },
      "CcSecNotifiedServerId": {
        "name": "CcSecNotifiedServerId",
        "description": "ID",
        "in": "path",
        "required": true,
        "schema": {
          "$ref": "#/components/schemas/Id"
        }
      },
      "CcPrimaryId": {
        "name": "CcPrimaryId",
        "description": "ID",
        "in": "path",
        "required": true,
        "schema": {
          "$ref": "#/components/schemas/Id"
        }
      },
      "CcNoticeAccountResourceName": {
        "name": "CcNoticeAccountResourceName",
        "description": "GET cc_notice_accounts Schemaにおける resource_name",
        "in": "path",
        "required": true,
        "schema": {
          "$ref": "#/components/schemas/ResourceName"
        }
      },
      "ZoneId": {
        "name": "ZoneId",
        "description": "ID",
        "in": "path",
        "required": true,
        "schema": {
          "$ref": "#/components/schemas/SystemId"
        }
      },
      "RecordId": {
        "name": "RecordId",
        "description": "ID",
        "in": "path",
        "required": true,
        "schema": {
          "$ref": "#/components/schemas/SystemId"
        }
      },
      "ZoneHistoryId": {
        "name": "ZoneHistoryId",
        "description": "ID",
        "in": "path",
        "required": true,
        "schema": {
          "$ref": "#/components/schemas/Id"
        }
      },
      "StartDate": {
        "name": "start_date",
        "description": "開始日",
        "in": "query",
        "schema": {
          "$ref": "#/components/schemas/SearchDate"
        }
      },
      "EndDate": {
        "name": "end_date",
        "description": "終了日",
        "in": "query",
        "schema": {
          "$ref": "#/components/schemas/SearchDate"
        }
      },
      "TimeZone": {
        "name": "time_zone",
        "description": "タイムゾーン",
        "in": "query",
        "schema": {
          "$ref": "#/components/schemas/SearchTimeZone"
        }
      },
      "Order": {
        "name": "order",
        "description": "ソート順",
        "in": "query",
        "schema": {
          "$ref": "#/components/schemas/SearchOrder"
        }
      },
      "LbDomainId": {
        "name": "LbDomainId",
        "description": "GET lb_domains Schemaにおける id",
        "in": "path",
        "required": true,
        "schema": {
          "$ref": "#/components/schemas/SystemId"
        }
      },
      "MonitoringResourceName": {
        "name": "MonitoringResourceName",
        "description": "GET monitorings Schemaにおける resource_name",
        "in": "path",
        "required": true,
        "schema": {
          "$ref": "#/components/schemas/ResourceName"
        }
      },
      "SiteResourceName": {
        "name": "SiteResourceName",
        "description": "GET sites Schemaにおける resource_name",
        "in": "path",
        "required": true,
        "schema": {
          "$ref": "#/components/schemas/ResourceName"
        }
      },
      "EndpointResourceName": {
        "name": "EndpointResourceName",
        "description": "GET endpoints Schemaにおける resource_name",
        "in": "path",
        "required": true,
        "schema": {
          "$ref": "#/components/schemas/ResourceName"
        }
      },
      "RuleResourceName": {
        "name": "RuleResourceName",
        "description": "GET rules Schemaにおける resource_name",
        "in": "path",
        "required": true,
        "schema": {
          "$ref": "#/components/schemas/ResourceName"
        }
      },
      "RuleMethodResourceName": {
        "name": "RuleMethodResourceName",
        "description": "GET rule_methods Schemaにおける resource_name",
        "in": "path",
        "required": true,
        "schema": {
          "$ref": "#/components/schemas/ResourceName"
        }
      },
      "LogsOffset": {
        "name": "offset",
        "in": "query",
        "schema": {
          "$ref": "#/components/schemas/SearchLogsOffset"
        }
      },
      "LogsLimit": {
        "name": "limit",
        "in": "query",
        "schema": {
          "$ref": "#/components/schemas/SearchLogsLimit"
        }
      },
      "Type": {
        "name": "type",
        "in": "query",
        "schema": {
          "$ref": "#/components/schemas/SearchType"
        }
      },
      "Offset": {
        "name": "offset",
        "in": "query",
        "schema": {
          "$ref": "#/components/schemas/SearchOffset"
        }
      },
      "Limit": {
        "name": "limit",
        "in": "query",
        "schema": {
          "$ref": "#/components/schemas/SearchLimit"
        }
      },
      "KeywordsFullText": {
        "name": "_keywords_full_text[]",
        "in": "query",
        "schema": {
          "$ref": "#/components/schemas/KeywordsString"
        }
      },
      "KeywordsServiceCode": {
        "name": "_keywords_service_code[]",
        "in": "query",
        "schema": {
          "$ref": "#/components/schemas/KeywordsString"
        }
      },
      "KeywordsContractsPlan": {
        "name": "_keywords_plan[]",
        "in": "query",
        "schema": {
          "$ref": "#/components/schemas/ContractPlan"
        }
      },
      "KeywordsContractsState": {
        "name": "_keywords_state[]",
        "in": "query",
        "schema": {
          "$ref": "#/components/schemas/ContractState"
        }
      },
      "KeywordsContractsFavorite": {
        "name": "_keywords_favorite[]",
        "in": "query",
        "schema": {
          "$ref": "#/components/schemas/ContractFavorite"
        }
      },
      "KeywordsDescription": {
        "name": "_keywords_description[]",
        "in": "query",
        "schema": {
          "$ref": "#/components/schemas/KeywordsString"
        }
      },
      "KeywordsName": {
        "name": "_keywords_name[]",
        "in": "query",
        "schema": {
          "$ref": "#/components/schemas/KeywordsString"
        }
      },
      "KeywordsNetwork": {
        "name": "_keywords_network[]",
        "in": "query",
        "schema": {
          "$ref": "#/components/schemas/KeywordsString"
        }
      },
      "KeywordsZonesState": {
        "name": "_keywords_state[]",
        "in": "query",
        "schema": {
          "$ref": "#/components/schemas/ZonesState"
        }
      },
      "KeywordsZonesFavorite": {
        "name": "_keywords_favorite[]",
        "in": "query",
        "schema": {
          "$ref": "#/components/schemas/ZonesFavorite"
        }
      },
      "KeywordsContractsLogsLogType": {
        "name": "_keywords_log_type[]",
        "in": "query",
        "schema": {
          "$ref": "#/components/schemas/ContractsLogsLogType"
        }
      },
      "KeywordsOperator": {
        "name": "_keywords_operator[]",
        "in": "query",
        "schema": {
          "$ref": "#/components/schemas/KeywordsString"
        }
      },
      "KeywordsContractsLogsOperation": {
        "name": "_keywords_operation[]",
        "in": "query",
        "schema": {
          "$ref": "#/components/schemas/ContractsLogsOperation"
        }
      },
      "KeywordsTarget": {
        "name": "_keywords_target[]",
        "in": "query",
        "schema": {
          "$ref": "#/components/schemas/KeywordsString"
        }
      },
      "KeywordsDetail": {
        "name": "_keywords_detail[]",
        "in": "query",
        "schema": {
          "$ref": "#/components/schemas/KeywordsString"
        }
      },
      "KeywordsRequestId": {
        "name": "_keywords_request_id[]",
        "in": "query",
        "schema": {
          "$ref": "#/components/schemas/KeywordsString"
        }
      },
      "KeywordsContractsLogsStatus": {
        "name": "_keywords_status[]",
        "in": "query",
        "schema": {
          "$ref": "#/components/schemas/ContractsLogsStatus"
        }
      },
      "KeywordsDelegationsRequested": {
        "name": "_keywords_requested[]",
        "in": "query",
        "schema": {
          "$ref": "#/components/schemas/DelegationsRequested"
        }
      },
      "KeywordsZonesLogsLogType": {
        "name": "_keywords_log_type[]",
        "in": "query",
        "schema": {
          "$ref": "#/components/schemas/ZonesLogsType"
        }
      },
      "KeywordsZonesLogsOperation": {
        "name": "_keywords_operation[]",
        "in": "query",
        "schema": {
          "$ref": "#/components/schemas/ZonesLogsOperation"
        }
      },
      "KeywordsZonesLogsStatus": {
        "name": "_keywords_status[]",
        "in": "query",
        "schema": {
          "$ref": "#/components/schemas/ZonesLogsStatus"
        }
      },
      "KeywordsTtl": {
        "name": "_keywords_ttl[]",
        "in": "query",
        "schema": {
          "$ref": "#/components/schemas/RecordsTtl"
        }
      },
      "KeywordsRrtype": {
        "name": "_keywords_rrtype[]",
        "in": "query",
        "schema": {
          "$ref": "#/components/schemas/RecordsRrtype"
        }
      },
      "KeywordsRdata": {
        "name": "_keywords_rdata[]",
        "in": "query",
        "schema": {
          "$ref": "#/components/schemas/KeywordsString"
        }
      },
      "KeywordsCommonConfigId": {
        "name": "_keywords_common_config_id[]",
        "in": "query",
        "schema": {
          "$ref": "#/components/schemas/KeywordsId"
        }
      },
      "KeywordsZoneProxyEnabled": {
        "name": "_keywords_zone_proxy_enabled[]",
        "in": "query",
        "schema": {
          "$ref": "#/components/schemas/ZoneProxyEnabled"
        }
      },
      "KeywordsLbDomainState": {
        "name": "_keywords_state[]",
        "in": "query",
        "schema": {
          "$ref": "#/components/schemas/KeywordsLbDomainState"
        }
      },
      "KeywordsLbDomainFavorite": {
        "name": "_keywords_favorite[]",
        "in": "query",
        "schema": {
          "$ref": "#/components/schemas/KeywordsLbDomainFavorite"
        }
      },
      "KeywordsLabel": {
        "name": "_keywords_label[]",
        "in": "query",
        "schema": {
          "$ref": "#/components/schemas/KeywordsLabel"
        }
      },
      "KeywordsLbDomainsLogsLogType": {
        "name": "_keywords_log_type[]",
        "in": "query",
        "schema": {
          "$ref": "#/components/schemas/SearchLbDomainsLogsType"
        }
      },
      "KeywordsLbDomainsLogsOperation": {
        "name": "_keywords_operation[]",
        "in": "query",
        "schema": {
          "$ref": "#/components/schemas/SearchLbDomainsLogsOperation"
        }
      },
      "KeywordsLbDomainsLogsStatus": {
        "name": "_keywords_status[]",
        "in": "query",
        "schema": {
          "$ref": "#/components/schemas/SearchLbDomainsLogsStatus"
        }
      }
    },
    "requestBodies": {
      "PutContractLabels": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ContractLabels"
            },
            "examples": {
              "PutContractLabels": {
                "$ref": "#/components/examples/PutContractLabels"
              }
            }
          }
        }
      },
      "PutZoneLabels": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ZoneLabels"
            },
            "examples": {
              "PutZoneLabels": {
                "$ref": "#/components/examples/PutZoneLabels"
              }
            }
          }
        }
      }
    },
    "schemas": {
      "Response": {
        "type": "object",
        "required": [
          "request_id"
        ],
        "properties": {
          "request_id": {
            "$ref": "#/components/schemas/RequestId"
          }
        }
      },
      "RequestId": {
        "type": "string",
        "minLength": 32,
        "maxLength": 32,
        "description": "処理の問い合わせの際のキーになる文字列"
      },
      "SystemId": {
        "type": "string",
        "minLength": 14,
        "maxLength": 14
      },
      "TsigId": {
        "type": "integer",
        "nullable": true,
        "minimum": 1,
        "format": "int64"
      },
      "Id": {
        "type": "integer",
        "minimum": 1,
        "format": "int64"
      },
      "ServiceCode": {
        "type": "string",
        "minLength": 11,
        "maxLength": 11
      },
      "ResourceName": {
        "type": "string",
        "maxLength": 253,
        "description": "登録可能な文字列は[**こちら**](https://manual.iij.jp/dpf/help/19629152.html#DNS%E3%83%AC%E3%82%B3%E3%83%BC%E3%83%89%E3%81%AE%E7%99%BB%E9%8C%B2%E3%83%AB%E3%83%BC%E3%83%AB-%E3%83%9B%E3%82%B9%E3%83%88%E5%90%8D%E3%81%AE%E5%85%B1%E9%80%9A%E3%83%AB%E3%83%BC%E3%83%AB)のホスト名の共通ルールを参照してください。"
      },
      "LogDateTime": {
        "type": "string",
        "format": "date-time"
      },
      "LogTarget": {
        "type": "string",
        "nullable": false,
        "default": ""
      },
      "Description": {
        "type": "string",
        "description": "コメント",
        "default": "",
        "minLength": 0,
        "maxLength": 80
      },
      "PatchDescription": {
        "type": "string",
        "description": "コメント",
        "minLength": 0,
        "maxLength": 80
      },
      "Operator": {
        "type": "string",
        "description": "編集者",
        "default": null,
        "nullable": true
      },
      "JobsUrl": {
        "type": "string"
      },
      "Network": {
        "type": "string",
        "nullable": true
      },
      "ErrorType": {
        "type": "string"
      },
      "ErrorMessage": {
        "type": "string"
      },
      "ErrorDetails": {
        "type": "array",
        "minLength": 1,
        "items": {
          "type": "object",
          "properties": {
            "code": {
              "type": "string"
            },
            "attribute": {
              "type": "string"
            }
          }
        }
      },
      "TargetErrorDetails": {
        "type": "array",
        "minLength": 1,
        "items": {
          "type": "object",
          "properties": {
            "code": {
              "type": "string"
            },
            "attribute": {
              "type": "string"
            },
            "target": {
              "type": "string"
            }
          }
        }
      },
      "BadRequest": {
        "type": "object",
        "required": [
          "request_id",
          "error_type",
          "error_message",
          "error_details"
        ],
        "properties": {
          "request_id": {
            "$ref": "#/components/schemas/RequestId"
          },
          "error_type": {
            "$ref": "#/components/schemas/ErrorType"
          },
          "error_message": {
            "$ref": "#/components/schemas/ErrorMessage"
          },
          "error_details": {
            "$ref": "#/components/schemas/ErrorDetails"
          }
        }
      },
      "TargetBadRequest": {
        "type": "object",
        "required": [
          "request_id",
          "error_type",
          "error_message",
          "error_details"
        ],
        "properties": {
          "request_id": {
            "$ref": "#/components/schemas/RequestId"
          },
          "error_type": {
            "$ref": "#/components/schemas/ErrorType"
          },
          "error_message": {
            "$ref": "#/components/schemas/ErrorMessage"
          },
          "error_details": {
            "$ref": "#/components/schemas/TargetErrorDetails"
          }
        }
      },
      "GetCount": {
        "type": "object",
        "required": [
          "request_id",
          "result"
        ],
        "properties": {
          "request_id": {
            "$ref": "#/components/schemas/RequestId"
          },
          "result": {
            "type": "object",
            "required": [
              "count"
            ],
            "properties": {
              "count": {
                "type": "integer",
                "format": "int32"
              }
            }
          }
        }
      },
      "AsyncResponse": {
        "type": "object",
        "required": [
          "request_id",
          "jobs_url"
        ],
        "properties": {
          "request_id": {
            "$ref": "#/components/schemas/RequestId"
          },
          "jobs_url": {
            "$ref": "#/components/schemas/JobsUrl"
          }
        }
      },
      "SearchType": {
        "type": "string",
        "default": "AND",
        "enum": [
          "AND",
          "OR"
        ]
      },
      "SearchOffset": {
        "type": "integer",
        "format": "int32",
        "default": 0,
        "minimum": 0,
        "maximum": 10000000
      },
      "SearchLimit": {
        "type": "integer",
        "format": "int32",
        "default": 100,
        "minimum": 1,
        "maximum": 10000
      },
      "SearchDate": {
        "type": "string",
        "format": "full-date",
        "default": ""
      },
      "SearchTimeZone": {
        "type": "string",
        "format": "time-numoffset",
        "default": "+00:00"
      },
      "SearchOrder": {
        "type": "string",
        "default": "ASC",
        "enum": [
          "ASC",
          "DESC"
        ]
      },
      "KeywordsString": {
        "type": "array",
        "minItems": 0,
        "default": [],
        "items": {
          "type": "string",
          "maxLength": 381
        }
      },
      "KeywordsId": {
        "type": "array",
        "minItems": 0,
        "default": [],
        "items": {
          "type": "integer",
          "minimum": 1,
          "format": "int64"
        }
      },
      "SearchLogsOffset": {
        "type": "integer",
        "format": "int32",
        "default": 0,
        "minimum": 0,
        "maximum": 9900
      },
      "SearchLogsLimit": {
        "type": "integer",
        "format": "int32",
        "default": 100,
        "minimum": 1,
        "maximum": 100
      },
      "CcPrimaryAddress": {
        "type": "string",
        "description": "IPアドレス"
      },
      "CcPrimaryEnabled": {
        "type": "integer",
        "description": "詳細説明は[**こちら**](#tag/cc_primaries)",
        "enum": [
          0,
          1
        ]
      },
      "CcPrimary": {
        "type": "object",
        "required": [
          "id",
          "address",
          "tsig_id",
          "enabled"
        ],
        "properties": {
          "id": {
            "$ref": "#/components/schemas/Id"
          },
          "address": {
            "$ref": "#/components/schemas/CcPrimaryAddress"
          },
          "tsig_id": {
            "$ref": "#/components/schemas/TsigId"
          },
          "enabled": {
            "$ref": "#/components/schemas/CcPrimaryEnabled"
          }
        }
      },
      "GetCcPrimaries": {
        "type": "object",
        "required": [
          "request_id",
          "results"
        ],
        "properties": {
          "request_id": {
            "$ref": "#/components/schemas/RequestId"
          },
          "results": {
            "type": "array",
            "minItems": 0,
            "default": [],
            "items": {
              "$ref": "#/components/schemas/CcPrimary"
            }
          }
        }
      },
      "PostCcPrimary": {
        "type": "object",
        "required": [
          "address"
        ],
        "properties": {
          "tsig_id": {
            "$ref": "#/components/schemas/TsigId"
          },
          "address": {
            "$ref": "#/components/schemas/CcPrimaryAddress"
          }
        }
      },
      "GetCcPrimary": {
        "type": "object",
        "required": [
          "request_id",
          "result"
        ],
        "properties": {
          "request_id": {
            "$ref": "#/components/schemas/RequestId"
          },
          "result": {
            "$ref": "#/components/schemas/CcPrimary"
          }
        }
      },
      "PatchCcPrimary": {
        "type": "object",
        "properties": {
          "tsig_id": {
            "$ref": "#/components/schemas/TsigId"
          },
          "address": {
            "$ref": "#/components/schemas/CcPrimaryAddress"
          },
          "enabled": {
            "$ref": "#/components/schemas/CcPrimaryEnabled"
          }
        }
      },
      "CcNotifiedServerAddress": {
        "type": "string",
        "description": "IPアドレス"
      },
      "NotifiedServer": {
        "type": "object",
        "required": [
          "id",
          "address",
          "tsig_id"
        ],
        "properties": {
          "id": {
            "$ref": "#/components/schemas/Id"
          },
          "address": {
            "$ref": "#/components/schemas/CcNotifiedServerAddress"
          },
          "tsig_id": {
            "$ref": "#/components/schemas/TsigId"
          }
        }
      },
      "GetCcSecNotifiedServers": {
        "type": "object",
        "required": [
          "request_id",
          "results"
        ],
        "properties": {
          "request_id": {
            "$ref": "#/components/schemas/RequestId"
          },
          "results": {
            "type": "array",
            "minItems": 0,
            "default": [],
            "items": {
              "$ref": "#/components/schemas/NotifiedServer"
            }
          }
        }
      },
      "PostCcSecNotifiedServer": {
        "type": "object",
        "required": [
          "address"
        ],
        "properties": {
          "tsig_id": {
            "$ref": "#/components/schemas/TsigId"
          },
          "address": {
            "$ref": "#/components/schemas/CcNotifiedServerAddress"
          }
        }
      },
      "GetCcSecNotifiedServer": {
        "type": "object",
        "required": [
          "request_id",
          "result"
        ],
        "properties": {
          "request_id": {
            "$ref": "#/components/schemas/RequestId"
          },
          "result": {
            "$ref": "#/components/schemas/NotifiedServer"
          }
        }
      },
      "PatchCcSecNotifiedServer": {
        "type": "object",
        "properties": {
          "tsig_id": {
            "$ref": "#/components/schemas/TsigId"
          },
          "address": {
            "$ref": "#/components/schemas/CcNotifiedServerAddress"
          }
        }
      },
      "CcSecTransferNetwork": {
        "type": "string",
        "description": "IPアドレス/プレフィックス長"
      },
      "CcSecTransferAcl": {
        "type": "object",
        "required": [
          "id",
          "network",
          "tsig_id"
        ],
        "properties": {
          "id": {
            "$ref": "#/components/schemas/Id"
          },
          "network": {
            "$ref": "#/components/schemas/CcSecTransferNetwork"
          },
          "tsig_id": {
            "$ref": "#/components/schemas/TsigId"
          }
        }
      },
      "GetCcSecTransferAcls": {
        "type": "object",
        "required": [
          "request_id",
          "results"
        ],
        "properties": {
          "request_id": {
            "$ref": "#/components/schemas/RequestId"
          },
          "results": {
            "type": "array",
            "minItems": 0,
            "default": [],
            "items": {
              "$ref": "#/components/schemas/CcSecTransferAcl"
            }
          }
        }
      },
      "PostCcSecTransferAcl": {
        "type": "object",
        "required": [
          "network"
        ],
        "properties": {
          "tsig_id": {
            "$ref": "#/components/schemas/TsigId"
          },
          "network": {
            "$ref": "#/components/schemas/CcSecTransferNetwork"
          }
        }
      },
      "GetCcSecTransferAcl": {
        "type": "object",
        "required": [
          "request_id",
          "result"
        ],
        "properties": {
          "request_id": {
            "$ref": "#/components/schemas/RequestId"
          },
          "result": {
            "$ref": "#/components/schemas/CcSecTransferAcl"
          }
        }
      },
      "PatchCcSecTransferAcl": {
        "type": "object",
        "properties": {
          "tsig_id": {
            "$ref": "#/components/schemas/TsigId"
          },
          "network": {
            "$ref": "#/components/schemas/CcSecTransferNetwork"
          }
        }
      },
      "CcNoticeAccountName": {
        "type": "string",
        "description": "アカウント名",
        "minLength": 1,
        "maxLength": 80
      },
      "CcNoticeAccountLang": {
        "type": "string",
        "description": "言語設定",
        "enum": [
          "ja",
          "en_US"
        ]
      },
      "CcNoticeAccountProps": {
        "type": "object",
        "properties": {
          "mail": {
            "minLength": 0,
            "maxLength": 254,
            "type": "string",
            "description": "メールアドレス"
          },
          "phone": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/CcNoticeAccountPhone"
              },
              {
                "$ref": "#/components/schemas/CcNoticeAccountEmptyPhone"
              }
            ]
          }
        }
      },
      "CcNoticeAccountPhone": {
        "type": "object",
        "properties": {
          "country_code": {
            "type": "string",
            "description": "国番号（number指定時必須）",
            "enum": [
              "1",
              "81"
            ]
          },
          "number": {
            "minLength": 8,
            "maxLength": 13,
            "type": "string",
            "description": "ハイフンを除いた電話番号（country_code指定時必須）"
          }
        }
      },
      "CcNoticeAccountEmptyPhone": {
        "type": "object",
        "properties": {
          "country_code": {
            "type": "string",
            "description": "国番号（電話番号空の場合)",
            "enum": [
              ""
            ]
          },
          "number": {
            "type": "string",
            "description": "電話番号（電話番号空の場合)",
            "enum": [
              ""
            ]
          }
        }
      },
      "CcNoticeAccount": {
        "type": "object",
        "required": [
          "resource_name",
          "name",
          "lang",
          "props"
        ],
        "properties": {
          "resource_name": {
            "$ref": "#/components/schemas/ResourceName"
          },
          "name": {
            "$ref": "#/components/schemas/CcNoticeAccountName"
          },
          "lang": {
            "$ref": "#/components/schemas/CcNoticeAccountLang"
          },
          "props": {
            "type": "object",
            "required": [
              "mail",
              "phone"
            ],
            "properties": {
              "mail": {
                "minLength": 0,
                "maxLength": 254,
                "type": "string",
                "description": "メールアドレス"
              },
              "phone": {
                "oneOf": [
                  {
                    "type": "object",
                    "required": [
                      "country_code",
                      "number"
                    ],
                    "properties": {
                      "country_code": {
                        "type": "string",
                        "description": "国番号（電話番号空の場合)",
                        "enum": [
                          ""
                        ]
                      },
                      "number": {
                        "type": "string",
                        "description": "電話番号（電話番号空の場合)",
                        "enum": [
                          ""
                        ]
                      }
                    }
                  },
                  {
                    "type": "object",
                    "required": [
                      "country_code",
                      "number"
                    ],
                    "properties": {
                      "country_code": {
                        "type": "string",
                        "description": "国番号（number指定時必須）",
                        "enum": [
                          "1",
                          "81"
                        ]
                      },
                      "number": {
                        "minLength": 8,
                        "maxLength": 13,
                        "type": "string",
                        "description": "ハイフンを除いた電話番号（country_code指定時必須）"
                      }
                    }
                  }
                ]
              }
            }
          }
        }
      },
      "GetCcNoticeAccounts": {
        "type": "object",
        "required": [
          "request_id",
          "results"
        ],
        "properties": {
          "request_id": {
            "$ref": "#/components/schemas/RequestId"
          },
          "results": {
            "type": "array",
            "minItems": 0,
            "default": [],
            "items": {
              "$ref": "#/components/schemas/CcNoticeAccount"
            }
          }
        }
      },
      "PostCcNoticeAccount": {
        "type": "object",
        "required": [
          "name",
          "lang"
        ],
        "properties": {
          "resource_name": {
            "$ref": "#/components/schemas/ResourceName"
          },
          "name": {
            "$ref": "#/components/schemas/CcNoticeAccountName"
          },
          "lang": {
            "$ref": "#/components/schemas/CcNoticeAccountLang"
          },
          "props": {
            "$ref": "#/components/schemas/CcNoticeAccountProps"
          }
        }
      },
      "GetCcNoticeAccount": {
        "type": "object",
        "required": [
          "request_id",
          "result"
        ],
        "properties": {
          "request_id": {
            "$ref": "#/components/schemas/RequestId"
          },
          "result": {
            "$ref": "#/components/schemas/CcNoticeAccount"
          }
        }
      },
      "PatchCcNoticeAccount": {
        "type": "object",
        "properties": {
          "name": {
            "$ref": "#/components/schemas/CcNoticeAccountName"
          },
          "lang": {
            "$ref": "#/components/schemas/CcNoticeAccountLang"
          },
          "props": {
            "$ref": "#/components/schemas/CcNoticeAccountProps"
          }
        }
      },
      "ManagedDnsEnabled": {
        "type": "integer",
        "description": "詳細説明は[**こちら**](#tag/common_configs)",
        "enum": [
          0,
          1
        ]
      },
      "CommonConfigDefault": {
        "type": "integer",
        "description": "詳細説明は[**こちら**](#tag/common_configs)",
        "enum": [
          0,
          1
        ]
      },
      "CommonConfigName": {
        "type": "string",
        "description": "name",
        "minLength": 1,
        "maxLength": 80
      },
      "CommonConfig": {
        "type": "object",
        "required": [
          "id",
          "name",
          "managed_dns_enabled",
          "default",
          "description"
        ],
        "properties": {
          "id": {
            "$ref": "#/components/schemas/Id"
          },
          "name": {
            "$ref": "#/components/schemas/CommonConfigName"
          },
          "managed_dns_enabled": {
            "$ref": "#/components/schemas/ManagedDnsEnabled"
          },
          "default": {
            "$ref": "#/components/schemas/CommonConfigDefault"
          },
          "description": {
            "$ref": "#/components/schemas/Description"
          }
        }
      },
      "GetCommonConfigs": {
        "type": "object",
        "required": [
          "request_id",
          "results"
        ],
        "properties": {
          "request_id": {
            "$ref": "#/components/schemas/RequestId"
          },
          "results": {
            "type": "array",
            "minItems": 0,
            "default": [],
            "items": {
              "$ref": "#/components/schemas/CommonConfig"
            }
          }
        }
      },
      "PostCommonConfig": {
        "type": "object",
        "required": [
          "name"
        ],
        "properties": {
          "name": {
            "$ref": "#/components/schemas/CommonConfigName"
          },
          "description": {
            "$ref": "#/components/schemas/Description"
          }
        }
      },
      "GetCommonConfig": {
        "type": "object",
        "required": [
          "request_id",
          "result"
        ],
        "properties": {
          "request_id": {
            "$ref": "#/components/schemas/RequestId"
          },
          "result": {
            "$ref": "#/components/schemas/CommonConfig"
          }
        }
      },
      "PatchDefaultCommonConfig": {
        "type": "object",
        "required": [
          "common_config_id"
        ],
        "properties": {
          "common_config_id": {
            "$ref": "#/components/schemas/Id"
          }
        }
      },
      "PatchCommonConfig": {
        "type": "object",
        "properties": {
          "name": {
            "$ref": "#/components/schemas/CommonConfigName"
          },
          "description": {
            "$ref": "#/components/schemas/Description"
          }
        }
      },
      "PatchManagedDns": {
        "type": "object",
        "required": [
          "managed_dns_enabled"
        ],
        "properties": {
          "managed_dns_enabled": {
            "$ref": "#/components/schemas/ManagedDnsEnabled"
          }
        }
      },
      "GetContractPartners": {
        "type": "object",
        "required": [
          "request_id",
          "results"
        ],
        "properties": {
          "request_id": {
            "$ref": "#/components/schemas/RequestId"
          },
          "results": {
            "type": "array",
            "minItems": 0,
            "default": [],
            "items": {
              "type": "object",
              "required": [
                "service_code"
              ],
              "properties": {
                "service_code": {
                  "$ref": "#/components/schemas/ServiceCode"
                }
              }
            }
          }
        }
      },
      "PatchContractsZones": {
        "type": "object",
        "required": [
          "common_config_id",
          "zone_ids"
        ],
        "properties": {
          "common_config_id": {
            "$ref": "#/components/schemas/Id"
          },
          "zone_ids": {
            "type": "array",
            "minItems": 1,
            "items": {
              "$ref": "#/components/schemas/SystemId"
            }
          }
        }
      },
      "PatchContractsLbDomains": {
        "type": "object",
        "required": [
          "common_config_id",
          "lb_domain_ids"
        ],
        "properties": {
          "common_config_id": {
            "$ref": "#/components/schemas/Id"
          },
          "lb_domain_ids": {
            "type": "array",
            "minItems": 1,
            "description": "GET lb_domains Schemaにおける id の配列",
            "items": {
              "$ref": "#/components/schemas/SystemId"
            }
          }
        }
      },
      "ContractLabels": {
        "type": "object",
        "required": [
          "labels"
        ],
        "properties": {
          "labels": {
            "default": {},
            "type": "object",
            "description": "ラベル",
            "minProperties": 0,
            "maxProperties": 10,
            "additionalProperties": {
              "type": "string",
              "maxLength": 63,
              "minLength": 1,
              "description": "Objectは最大で10個\\\n登録可能な文字列は[**こちら**](https://manual.iij.jp/dpf/help/50639516.html)のラベルの共通ルールを参照してください。\n"
            }
          }
        }
      },
      "ContractState": {
        "type": "integer",
        "description": "詳細説明は[**こちら**](#tag/contracts)",
        "enum": [
          1,
          2
        ]
      },
      "ContractFavorite": {
        "type": "integer",
        "description": "詳細説明は[**こちら**](#tag/contracts)",
        "enum": [
          1,
          2
        ]
      },
      "ContractPlan": {
        "type": "integer",
        "description": "詳細説明は[**こちら**](#tag/contracts)",
        "enum": [
          1,
          2
        ]
      },
      "Contract": {
        "type": "object",
        "required": [
          "id",
          "service_code",
          "state",
          "favorite",
          "plan",
          "description"
        ],
        "properties": {
          "id": {
            "$ref": "#/components/schemas/SystemId"
          },
          "service_code": {
            "$ref": "#/components/schemas/ServiceCode"
          },
          "state": {
            "$ref": "#/components/schemas/ContractState"
          },
          "favorite": {
            "$ref": "#/components/schemas/ContractFavorite"
          },
          "plan": {
            "$ref": "#/components/schemas/ContractPlan"
          },
          "description": {
            "$ref": "#/components/schemas/Description"
          }
        }
      },
      "GetContracts": {
        "type": "object",
        "required": [
          "request_id",
          "results"
        ],
        "properties": {
          "request_id": {
            "$ref": "#/components/schemas/RequestId"
          },
          "results": {
            "type": "array",
            "minItems": 0,
            "default": [],
            "items": {
              "$ref": "#/components/schemas/Contract"
            }
          }
        }
      },
      "GetContract": {
        "type": "object",
        "required": [
          "request_id",
          "result"
        ],
        "properties": {
          "request_id": {
            "$ref": "#/components/schemas/RequestId"
          },
          "result": {
            "$ref": "#/components/schemas/Contract"
          }
        }
      },
      "PatchContract": {
        "type": "object",
        "properties": {
          "favorite": {
            "$ref": "#/components/schemas/ContractFavorite"
          },
          "description": {
            "$ref": "#/components/schemas/Description"
          }
        }
      },
      "ContractsLogsOperation": {
        "type": "string",
        "description": "詳細説明は[**こちら**](#tag/logs-(contracts))",
        "enum": [
          "add_cc_primary",
          "update_cc_primary",
          "delete_cc_primary",
          "add_cc_sec_notified_server",
          "update_cc_sec_notified_server",
          "delete_cc_sec_notified_server",
          "add_cc_sec_transfer_acl",
          "update_cc_sec_transfer_acl",
          "delete_cc_sec_transfer_acl",
          "add_notification_account",
          "update_notification_account",
          "delete_notification_account",
          "mail_notification",
          "phone_notification",
          "create_common_config",
          "switch_default_common_config",
          "update_common_config",
          "delete_common_config",
          "copy_common_config",
          "update_managed_dns_state",
          "update_contract_description",
          "update_contract_favorite",
          "update_contract_labels",
          "apply_common_config",
          "create_contract_partnership",
          "delete_contract_partnership",
          "create_tsig",
          "update_tsig",
          "delete_tsig"
        ]
      },
      "ContractsLogsStatus": {
        "type": "string",
        "description": "詳細説明は[**こちら**](#tag/logs-(contracts))",
        "enum": [
          "start",
          "success",
          "failure",
          "retry"
        ]
      },
      "ContractsLogsLogType": {
        "type": "string",
        "description": "詳細説明は[**こちら**](#tag/logs-(contracts))",
        "enum": [
          "service",
          "common_config",
          "notification"
        ]
      },
      "ContractsLog": {
        "type": "object",
        "required": [
          "time",
          "log_type",
          "operator",
          "operation",
          "target",
          "request_id",
          "status"
        ],
        "properties": {
          "time": {
            "$ref": "#/components/schemas/LogDateTime"
          },
          "log_type": {
            "$ref": "#/components/schemas/ContractsLogsLogType"
          },
          "operator": {
            "$ref": "#/components/schemas/Operator"
          },
          "operation": {
            "$ref": "#/components/schemas/ContractsLogsOperation"
          },
          "target": {
            "$ref": "#/components/schemas/LogTarget"
          },
          "request_id": {
            "$ref": "#/components/schemas/RequestId"
          },
          "status": {
            "$ref": "#/components/schemas/ContractsLogsStatus"
          }
        }
      },
      "GetContractsLogs": {
        "type": "object",
        "required": [
          "request_id",
          "results"
        ],
        "properties": {
          "request_id": {
            "$ref": "#/components/schemas/RequestId"
          },
          "results": {
            "type": "array",
            "minItems": 0,
            "default": [],
            "items": {
              "$ref": "#/components/schemas/ContractsLog"
            }
          }
        }
      },
      "DefaultTtlValue": {
        "type": "integer",
        "description": "TTL",
        "minimum": 1,
        "maximum": 2147483647
      },
      "DefaultTtlState": {
        "type": "integer",
        "description": "詳細説明は[**こちら**](#tag/default_ttl)",
        "enum": [
          0,
          3,
          5
        ]
      },
      "DefaultTtl": {
        "type": "object",
        "required": [
          "value",
          "state",
          "operator"
        ],
        "properties": {
          "value": {
            "$ref": "#/components/schemas/DefaultTtlValue"
          },
          "state": {
            "$ref": "#/components/schemas/DefaultTtlState"
          },
          "operator": {
            "$ref": "#/components/schemas/Operator"
          }
        }
      },
      "GetDefaultTtl": {
        "type": "object",
        "required": [
          "request_id",
          "result"
        ],
        "properties": {
          "request_id": {
            "$ref": "#/components/schemas/RequestId"
          },
          "result": {
            "$ref": "#/components/schemas/DefaultTtl"
          }
        }
      },
      "PatchDefaultTtl": {
        "type": "object",
        "required": [
          "value"
        ],
        "properties": {
          "value": {
            "$ref": "#/components/schemas/DefaultTtlValue"
          }
        }
      },
      "GetDefaultTtlDiffs": {
        "type": "object",
        "required": [
          "request_id",
          "results"
        ],
        "properties": {
          "request_id": {
            "$ref": "#/components/schemas/RequestId"
          },
          "results": {
            "type": "array",
            "minItems": 0,
            "default": [],
            "items": {
              "type": "object",
              "required": [
                "new",
                "old"
              ],
              "properties": {
                "new": {
                  "$ref": "#/components/schemas/DefaultTtl"
                },
                "old": {
                  "$ref": "#/components/schemas/DefaultTtl"
                }
              }
            }
          }
        }
      },
      "Qps": {
        "type": "integer",
        "minimum": 0
      },
      "QpsName": {
        "type": "string",
        "nullable": true
      },
      "QpsMonth": {
        "type": "string",
        "description": "集計対象月(YYYY-MM)"
      },
      "QpsHistory": {
        "type": "object",
        "required": [
          "service_code",
          "name",
          "values"
        ],
        "properties": {
          "service_code": {
            "$ref": "#/components/schemas/ServiceCode"
          },
          "name": {
            "$ref": "#/components/schemas/QpsName"
          },
          "values": {
            "type": "array",
            "minItems": 12,
            "maxItems": 12,
            "items": {
              "$ref": "#/components/schemas/QpsValue"
            }
          }
        }
      },
      "QpsValue": {
        "type": "object",
        "required": [
          "month",
          "qps"
        ],
        "properties": {
          "month": {
            "$ref": "#/components/schemas/QpsMonth"
          },
          "qps": {
            "$ref": "#/components/schemas/Qps"
          }
        }
      },
      "GetQpsHistories": {
        "type": "object",
        "required": [
          "request_id",
          "results"
        ],
        "properties": {
          "request_id": {
            "$ref": "#/components/schemas/RequestId"
          },
          "results": {
            "type": "array",
            "minItems": 0,
            "default": [],
            "items": {
              "$ref": "#/components/schemas/QpsHistory"
            }
          }
        }
      },
      "TsigsName": {
        "type": "string"
      },
      "TsigsPostName": {
        "type": "string",
        "description": "先頭末尾がハイフン以外の[a-z0-9]とハイフンで構成された文字列が使用できます",
        "minLength": 1,
        "maxLength": 63
      },
      "TsigsAlgorithm": {
        "type": "integer",
        "description": "詳細説明は[**こちら**](#tag/tsigs)",
        "enum": [
          0
        ]
      },
      "TsigsSecret": {
        "type": "string"
      },
      "Tsig": {
        "type": "object",
        "required": [
          "id",
          "name",
          "algorithm",
          "secret",
          "description"
        ],
        "properties": {
          "id": {
            "$ref": "#/components/schemas/Id"
          },
          "name": {
            "$ref": "#/components/schemas/TsigsName"
          },
          "algorithm": {
            "$ref": "#/components/schemas/TsigsAlgorithm"
          },
          "secret": {
            "$ref": "#/components/schemas/TsigsSecret"
          },
          "description": {
            "$ref": "#/components/schemas/Description"
          }
        }
      },
      "GetTsigs": {
        "type": "object",
        "required": [
          "request_id",
          "results"
        ],
        "properties": {
          "request_id": {
            "$ref": "#/components/schemas/RequestId"
          },
          "results": {
            "type": "array",
            "minItems": 0,
            "default": [],
            "items": {
              "$ref": "#/components/schemas/Tsig"
            }
          }
        }
      },
      "PostTsig": {
        "type": "object",
        "required": [
          "name"
        ],
        "properties": {
          "name": {
            "$ref": "#/components/schemas/TsigsPostName"
          },
          "description": {
            "$ref": "#/components/schemas/Description"
          }
        }
      },
      "GetTsig": {
        "type": "object",
        "required": [
          "request_id",
          "result"
        ],
        "properties": {
          "request_id": {
            "$ref": "#/components/schemas/RequestId"
          },
          "result": {
            "$ref": "#/components/schemas/Tsig"
          }
        }
      },
      "PatchTsig": {
        "type": "object",
        "required": [
          "description"
        ],
        "properties": {
          "description": {
            "$ref": "#/components/schemas/Description"
          }
        }
      },
      "GetTsigsCommonConfigs": {
        "type": "object",
        "required": [
          "request_id",
          "results"
        ],
        "properties": {
          "request_id": {
            "$ref": "#/components/schemas/RequestId"
          },
          "results": {
            "type": "array",
            "minItems": 0,
            "default": [],
            "items": {
              "$ref": "#/components/schemas/CommonConfig"
            }
          }
        }
      },
      "DnssecEnabled": {
        "type": "integer",
        "description": "詳細説明は[**こちら**](#tag/dnssec)",
        "enum": [
          0,
          1
        ]
      },
      "DnssecState": {
        "type": "integer",
        "description": "詳細説明は[**こちら**](#tag/dnssec)",
        "enum": [
          0,
          1,
          2,
          3,
          4
        ]
      },
      "DnssecDsState": {
        "type": "integer",
        "description": "詳細説明は[**こちら**](#tag/dnssec)",
        "enum": [
          0,
          1,
          3,
          4,
          5,
          6,
          7,
          8
        ]
      },
      "Dnssec": {
        "type": "object",
        "required": [
          "enabled",
          "state",
          "ds_state"
        ],
        "properties": {
          "enabled": {
            "$ref": "#/components/schemas/DnssecEnabled"
          },
          "state": {
            "$ref": "#/components/schemas/DnssecState"
          },
          "ds_state": {
            "$ref": "#/components/schemas/DnssecDsState"
          }
        }
      },
      "GetDnssec": {
        "type": "object",
        "required": [
          "request_id",
          "result"
        ],
        "properties": {
          "request_id": {
            "$ref": "#/components/schemas/RequestId"
          },
          "result": {
            "$ref": "#/components/schemas/Dnssec"
          }
        }
      },
      "PatchDnssec": {
        "required": [
          "enabled"
        ],
        "properties": {
          "enabled": {
            "$ref": "#/components/schemas/DnssecEnabled"
          }
        }
      },
      "DsRecordsRrset": {
        "type": "string"
      },
      "DsRecordsTransitedAt": {
        "type": "string",
        "format": "date-time"
      },
      "DsRecord": {
        "type": "object",
        "required": [
          "rrset",
          "transited_at"
        ],
        "properties": {
          "rrset": {
            "$ref": "#/components/schemas/DsRecordsRrset"
          },
          "transited_at": {
            "$ref": "#/components/schemas/DsRecordsTransitedAt"
          }
        }
      },
      "GetDsRecords": {
        "type": "object",
        "required": [
          "request_id",
          "results"
        ],
        "properties": {
          "request_id": {
            "$ref": "#/components/schemas/RequestId"
          },
          "results": {
            "type": "array",
            "minItems": 0,
            "default": [],
            "items": {
              "$ref": "#/components/schemas/DsRecord"
            }
          }
        }
      },
      "ZonesLogsType": {
        "type": "string",
        "description": "詳細説明は[**こちら**](#tag/logs-(zones))",
        "enum": [
          "service",
          "record",
          "dnssec"
        ]
      },
      "ZonesLogsOperation": {
        "type": "string",
        "description": "詳細説明は[**こちら**](#tag/logs-(zones))",
        "enum": [
          "updating_default_ttl",
          "dismiss_default_ttl_change",
          "update_dnssec_configuration",
          "begin_ksk_rollover",
          "adding_record",
          "updating_record",
          "deleting_record",
          "dismiss_record_change",
          "update_zone_proxy",
          "update_zone_description",
          "update_zone_favorite",
          "update_zone_labels",
          "commit_zone",
          "upload_zone",
          "dismiss_zone_edits",
          "bulk_update_records",
          "upsert_subdomain_ns_records",
          "create_delegations"
        ]
      },
      "ZonesLogsStatus": {
        "type": "string",
        "description": "詳細説明は[**こちら**](#tag/logs-(zones))",
        "enum": [
          "start",
          "success",
          "failure",
          "retry"
        ]
      },
      "ZonesLog": {
        "type": "object",
        "required": [
          "time",
          "log_type",
          "operator",
          "operation",
          "target",
          "request_id",
          "status"
        ],
        "properties": {
          "time": {
            "$ref": "#/components/schemas/LogDateTime"
          },
          "log_type": {
            "$ref": "#/components/schemas/ZonesLogsType"
          },
          "operator": {
            "$ref": "#/components/schemas/Operator"
          },
          "operation": {
            "$ref": "#/components/schemas/ZonesLogsOperation"
          },
          "target": {
            "$ref": "#/components/schemas/LogTarget"
          },
          "request_id": {
            "$ref": "#/components/schemas/RequestId"
          },
          "status": {
            "$ref": "#/components/schemas/ZonesLogsStatus"
          }
        }
      },
      "GetZonesLogs": {
        "type": "object",
        "required": [
          "request_id",
          "results"
        ],
        "properties": {
          "request_id": {
            "$ref": "#/components/schemas/RequestId"
          },
          "results": {
            "type": "array",
            "minItems": 0,
            "default": [],
            "items": {
              "$ref": "#/components/schemas/ZonesLog"
            }
          }
        }
      },
      "RecordsName": {
        "type": "string",
        "description": "name",
        "minLength": 1,
        "maxLength": 255
      },
      "RecordsTtl": {
        "type": "integer",
        "description": "TTL",
        "nullable": true,
        "default": null,
        "minimum": 1,
        "maximum": 2147483647
      },
      "RecordsRrtype": {
        "type": "string",
        "description": "レコードタイプ",
        "enum": [
          "A",
          "AAAA",
          "ANAME",
          "CAA",
          "CNAME",
          "DS",
          "HTTPS",
          "MX",
          "NAPTR",
          "NS",
          "PTR",
          "SOA",
          "SRV",
          "SVCB",
          "TLSA",
          "TXT"
        ]
      },
      "DsRecordsRrtype": {
        "type": "string",
        "description": "レコードタイプ",
        "enum": [
          "DS"
        ]
      },
      "RecordsRdata": {
        "type": "array",
        "description": "レコードの値",
        "minItems": 1,
        "items": {
          "type": "object",
          "properties": {
            "value": {
              "type": "string"
            }
          }
        }
      },
      "RecordsState": {
        "type": "integer",
        "description": "詳細説明は[**こちら**](#tag/records)",
        "enum": [
          0,
          1,
          2,
          3,
          5
        ]
      },
      "Record": {
        "type": "object",
        "required": [
          "id",
          "name",
          "ttl",
          "rrtype",
          "rdata",
          "labels",
          "state",
          "description",
          "operator"
        ],
        "properties": {
          "id": {
            "$ref": "#/components/schemas/SystemId"
          },
          "name": {
            "$ref": "#/components/schemas/RecordsName"
          },
          "ttl": {
            "$ref": "#/components/schemas/RecordsTtl"
          },
          "rrtype": {
            "$ref": "#/components/schemas/RecordsRrtype"
          },
          "rdata": {
            "$ref": "#/components/schemas/RecordsRdata"
          },
          "labels": {
            "$ref": "#/components/schemas/RecordLabels"
          },
          "state": {
            "$ref": "#/components/schemas/RecordsState"
          },
          "description": {
            "$ref": "#/components/schemas/Description"
          },
          "operator": {
            "$ref": "#/components/schemas/Operator"
          }
        }
      },
      "RecordLabels": {
        "default": {},
        "type": "object",
        "description": "ラベル",
        "minProperties": 0,
        "maxProperties": 10,
        "additionalProperties": {
          "type": "string",
          "maxLength": 63,
          "minLength": 1,
          "description": "Objectは最大で10個\\\n登録可能な文字列は[**こちら**](https://manual.iij.jp/dpf/help/50639516.html)のラベルの共通ルールを参照してください。\n"
        }
      },
      "GetRecords": {
        "type": "object",
        "required": [
          "request_id",
          "results"
        ],
        "properties": {
          "request_id": {
            "$ref": "#/components/schemas/RequestId"
          },
          "results": {
            "type": "array",
            "minItems": 0,
            "default": [],
            "items": {
              "$ref": "#/components/schemas/Record"
            }
          }
        }
      },
      "PutRecord": {
        "type": "object",
        "required": [
          "records"
        ],
        "properties": {
          "records": {
            "type": "array",
            "minItems": 1,
            "items": {
              "type": "object",
              "required": [
                "name",
                "ttl",
                "rrtype",
                "rdata",
                "labels",
                "description"
              ],
              "properties": {
                "name": {
                  "$ref": "#/components/schemas/RecordsName"
                },
                "ttl": {
                  "$ref": "#/components/schemas/RecordsTtl"
                },
                "rrtype": {
                  "type": "string",
                  "description": "レコードタイプ",
                  "enum": [
                    "A",
                    "AAAA",
                    "CAA",
                    "CNAME",
                    "DS",
                    "NS",
                    "MX",
                    "NAPTR",
                    "SOA",
                    "SRV",
                    "TXT",
                    "TLSA",
                    "ANAME",
                    "PTR"
                  ]
                },
                "rdata": {
                  "$ref": "#/components/schemas/RecordsRdata"
                },
                "description": {
                  "$ref": "#/components/schemas/Description"
                },
                "labels": {
                  "$ref": "#/components/schemas/RecordLabels"
                }
              }
            }
          }
        }
      },
      "PostRecord": {
        "type": "object",
        "required": [
          "name",
          "rrtype",
          "rdata"
        ],
        "properties": {
          "name": {
            "$ref": "#/components/schemas/RecordsName"
          },
          "ttl": {
            "$ref": "#/components/schemas/RecordsTtl"
          },
          "rrtype": {
            "type": "string",
            "description": "レコードタイプ",
            "enum": [
              "A",
              "AAAA",
              "CAA",
              "CNAME",
              "DS",
              "NS",
              "MX",
              "NAPTR",
              "SRV",
              "TXT",
              "TLSA",
              "ANAME",
              "PTR"
            ]
          },
          "rdata": {
            "$ref": "#/components/schemas/RecordsRdata"
          },
          "description": {
            "$ref": "#/components/schemas/Description"
          },
          "labels": {
            "$ref": "#/components/schemas/RecordLabels"
          }
        }
      },
      "GetRecordsDiffs": {
        "type": "object",
        "required": [
          "request_id",
          "results"
        ],
        "properties": {
          "request_id": {
            "$ref": "#/components/schemas/RequestId"
          },
          "results": {
            "type": "array",
            "minItems": 0,
            "default": [],
            "items": {
              "type": "object",
              "required": [
                "new",
                "old"
              ],
              "properties": {
                "new": {
                  "$ref": "#/components/schemas/Record"
                },
                "old": {
                  "$ref": "#/components/schemas/Record"
                }
              }
            }
          }
        }
      },
      "GetRecord": {
        "type": "object",
        "required": [
          "request_id",
          "result"
        ],
        "properties": {
          "request_id": {
            "$ref": "#/components/schemas/RequestId"
          },
          "result": {
            "$ref": "#/components/schemas/Record"
          }
        }
      },
      "PatchRecord": {
        "type": "object",
        "properties": {
          "ttl": {
            "$ref": "#/components/schemas/RecordsTtl"
          },
          "rdata": {
            "$ref": "#/components/schemas/RecordsRdata"
          },
          "labels": {
            "$ref": "#/components/schemas/RecordLabels"
          },
          "description": {
            "$ref": "#/components/schemas/Description"
          }
        }
      },
      "ZoneHistoriesCommittedAt": {
        "type": "string",
        "format": "date-time"
      },
      "ZoneHistoriesText": {
        "type": "string"
      },
      "ZoneHistory": {
        "type": "object",
        "required": [
          "id",
          "committed_at",
          "description",
          "operator"
        ],
        "properties": {
          "id": {
            "$ref": "#/components/schemas/Id"
          },
          "committed_at": {
            "$ref": "#/components/schemas/ZoneHistoriesCommittedAt"
          },
          "description": {
            "$ref": "#/components/schemas/Description"
          },
          "operator": {
            "$ref": "#/components/schemas/Operator"
          }
        }
      },
      "ZoneHistoryText": {
        "type": "object",
        "required": [
          "id",
          "committed_at",
          "description",
          "operator",
          "text"
        ],
        "properties": {
          "id": {
            "$ref": "#/components/schemas/Id"
          },
          "committed_at": {
            "$ref": "#/components/schemas/ZoneHistoriesCommittedAt"
          },
          "description": {
            "$ref": "#/components/schemas/Description"
          },
          "operator": {
            "$ref": "#/components/schemas/Operator"
          },
          "text": {
            "$ref": "#/components/schemas/ZoneHistoriesText"
          }
        }
      },
      "GetZoneHistories": {
        "required": [
          "request_id",
          "results"
        ],
        "properties": {
          "request_id": {
            "$ref": "#/components/schemas/RequestId"
          },
          "results": {
            "type": "array",
            "minItems": 0,
            "default": [],
            "items": {
              "$ref": "#/components/schemas/ZoneHistory"
            }
          }
        }
      },
      "GetZoneHistoriesText": {
        "required": [
          "request_id",
          "result"
        ],
        "properties": {
          "request_id": {
            "$ref": "#/components/schemas/RequestId"
          },
          "result": {
            "$ref": "#/components/schemas/ZoneHistoryText"
          }
        }
      },
      "ZoneProxyStatus": {
        "type": "string",
        "description": "詳細説明は[**こちら**](#tag/zone_proxy)",
        "enum": [
          "OK",
          "NG"
        ]
      },
      "ZoneProxyEnabled": {
        "type": "integer",
        "description": "詳細説明は[**こちら**](#tag/zone_proxy)",
        "enum": [
          0,
          1
        ]
      },
      "ZoneProxy": {
        "type": "object",
        "required": [
          "enabled"
        ],
        "properties": {
          "enabled": {
            "$ref": "#/components/schemas/ZoneProxyEnabled"
          }
        }
      },
      "ZoneProxyHealth": {
        "type": "object",
        "required": [
          "address",
          "status",
          "tsig_name",
          "enabled"
        ],
        "properties": {
          "address": {
            "$ref": "#/components/schemas/CcPrimaryAddress"
          },
          "status": {
            "$ref": "#/components/schemas/ZoneProxyStatus"
          },
          "tsig_name": {
            "$ref": "#/components/schemas/TsigsName"
          },
          "enabled": {
            "$ref": "#/components/schemas/ZoneProxyEnabled"
          }
        }
      },
      "GetZoneProxy": {
        "type": "object",
        "required": [
          "request_id",
          "result"
        ],
        "properties": {
          "request_id": {
            "$ref": "#/components/schemas/RequestId"
          },
          "result": {
            "$ref": "#/components/schemas/ZoneProxy"
          }
        }
      },
      "PatchZoneProxy": {
        "type": "object",
        "required": [
          "enabled"
        ],
        "properties": {
          "enabled": {
            "$ref": "#/components/schemas/ZoneProxyEnabled"
          }
        }
      },
      "GetZoneProxyHealth": {
        "type": "object",
        "required": [
          "request_id",
          "results"
        ],
        "properties": {
          "request_id": {
            "$ref": "#/components/schemas/RequestId"
          },
          "results": {
            "type": "array",
            "minItems": 0,
            "default": [],
            "items": {
              "$ref": "#/components/schemas/ZoneProxyHealth"
            }
          }
        }
      },
      "ZonesName": {
        "type": "string",
        "description": "name",
        "minLength": 1,
        "maxLength": 254
      },
      "ZonesFavorite": {
        "type": "integer",
        "description": "詳細説明は[**こちら**](#tag/zones)",
        "enum": [
          1,
          2
        ]
      },
      "ZonesState": {
        "type": "integer",
        "description": "詳細説明は[**こちら**](#tag/zones)",
        "enum": [
          1,
          2
        ]
      },
      "Zone": {
        "type": "object",
        "required": [
          "id",
          "common_config_id",
          "service_code",
          "state",
          "favorite",
          "name",
          "network",
          "description"
        ],
        "properties": {
          "id": {
            "$ref": "#/components/schemas/SystemId"
          },
          "common_config_id": {
            "$ref": "#/components/schemas/Id"
          },
          "service_code": {
            "$ref": "#/components/schemas/ServiceCode"
          },
          "state": {
            "$ref": "#/components/schemas/ZonesState"
          },
          "favorite": {
            "$ref": "#/components/schemas/ZonesFavorite"
          },
          "name": {
            "$ref": "#/components/schemas/ZonesName"
          },
          "network": {
            "$ref": "#/components/schemas/Network"
          },
          "description": {
            "$ref": "#/components/schemas/Description"
          }
        }
      },
      "GetZones": {
        "required": [
          "request_id",
          "results"
        ],
        "properties": {
          "request_id": {
            "$ref": "#/components/schemas/RequestId"
          },
          "results": {
            "type": "array",
            "minItems": 0,
            "default": [],
            "items": {
              "$ref": "#/components/schemas/Zone"
            }
          }
        }
      },
      "GetZone": {
        "required": [
          "request_id",
          "result"
        ],
        "properties": {
          "request_id": {
            "$ref": "#/components/schemas/RequestId"
          },
          "result": {
            "$ref": "#/components/schemas/Zone"
          }
        }
      },
      "PatchZone": {
        "type": "object",
        "properties": {
          "favorite": {
            "$ref": "#/components/schemas/ZonesFavorite"
          },
          "description": {
            "$ref": "#/components/schemas/Description"
          }
        }
      },
      "PatchZoneCommit": {
        "type": "object",
        "properties": {
          "description": {
            "$ref": "#/components/schemas/Description"
          }
        }
      },
      "GetManagedServers": {
        "required": [
          "request_id",
          "results"
        ],
        "properties": {
          "request_id": {
            "$ref": "#/components/schemas/RequestId"
          },
          "results": {
            "type": "array",
            "minItems": 0,
            "default": [],
            "items": {
              "type": "string"
            }
          }
        }
      },
      "ZoneLabels": {
        "type": "object",
        "required": [
          "labels"
        ],
        "properties": {
          "labels": {
            "default": {},
            "type": "object",
            "description": "ラベル",
            "minProperties": 0,
            "maxProperties": 10,
            "additionalProperties": {
              "type": "string",
              "maxLength": 63,
              "minLength": 1,
              "description": "Objectは最大で10個\\\n登録可能な文字列は[**こちら**](https://manual.iij.jp/dpf/help/50639516.html)のラベルの共通ルールを参照してください。\n"
            }
          }
        }
      },
      "DelegationsRequested": {
        "type": "integer",
        "description": "詳細説明は[**こちら**](#tag/delegations)",
        "enum": [
          0,
          1
        ]
      },
      "DelegationsRequestedAt": {
        "type": "string",
        "format": "date-time"
      },
      "Delegation": {
        "type": "object",
        "required": [
          "id",
          "service_code",
          "name",
          "network",
          "description",
          "delegation_requested_at"
        ],
        "properties": {
          "id": {
            "$ref": "#/components/schemas/SystemId"
          },
          "service_code": {
            "$ref": "#/components/schemas/ServiceCode"
          },
          "name": {
            "$ref": "#/components/schemas/ZonesName"
          },
          "network": {
            "$ref": "#/components/schemas/Network"
          },
          "description": {
            "$ref": "#/components/schemas/Description"
          },
          "delegation_requested_at": {
            "$ref": "#/components/schemas/DelegationsRequestedAt"
          }
        }
      },
      "GetDelegations": {
        "required": [
          "request_id",
          "results"
        ],
        "properties": {
          "request_id": {
            "$ref": "#/components/schemas/RequestId"
          },
          "results": {
            "type": "array",
            "minItems": 0,
            "default": [],
            "items": {
              "$ref": "#/components/schemas/Delegation"
            }
          }
        }
      },
      "PostDelegations": {
        "required": [
          "zone_ids"
        ],
        "properties": {
          "zone_ids": {
            "type": "array",
            "minItems": 1,
            "items": {
              "$ref": "#/components/schemas/SystemId"
            }
          }
        }
      },
      "GetJobs": {
        "type": "object",
        "required": [
          "request_id",
          "status"
        ],
        "properties": {
          "request_id": {
            "$ref": "#/components/schemas/RequestId"
          },
          "status": {
            "type": "string",
            "description": "詳細説明は[**こちら**](#tag/jobs)",
            "enum": [
              "RUNNING",
              "SUCCESSFUL",
              "FAILED"
            ]
          },
          "resources_url": {
            "description": "status: SUCCESSFULの場合のみ、レスポンスに含まれます",
            "type": "string"
          },
          "error_type": {
            "description": "status: FAILEDの場合のみ、レスポンスに含まれます",
            "type": "string"
          },
          "error_message": {
            "description": "status: FAILEDの場合のみ、レスポンスに含まれます",
            "type": "string"
          }
        }
      },
      "GetPing": {
        "type": "object",
        "required": [
          "request_id"
        ],
        "properties": {
          "request_id": {
            "$ref": "#/components/schemas/RequestId"
          }
        }
      },
      "LbDomainName": {
        "type": "string",
        "description": "LBドメイン名",
        "minLength": 1,
        "maxLength": 254
      },
      "LbDomainState": {
        "type": "integer",
        "enum": [
          1,
          2
        ],
        "description": "詳細説明は[**こちら**](#tag/lb_domains)"
      },
      "KeywordsLbDomainState": {
        "type": "array",
        "minItems": 0,
        "default": [],
        "description": "詳細説明は[**こちら**](#tag/lb_domains)",
        "items": {
          "type": "integer",
          "enum": [
            1,
            2
          ]
        }
      },
      "KeywordsLbDomainFavorite": {
        "type": "array",
        "minItems": 0,
        "default": [],
        "description": "詳細説明は[**こちら**](#tag/lb_domains)",
        "items": {
          "type": "integer",
          "enum": [
            1,
            2
          ]
        }
      },
      "LbDomainFavorite": {
        "type": "integer",
        "enum": [
          1,
          2
        ],
        "description": "詳細説明は[**こちら**](#tag/lb_domains)"
      },
      "LbDomainLabels": {
        "type": "object",
        "required": [
          "labels"
        ],
        "properties": {
          "labels": {
            "default": {},
            "type": "object",
            "description": "ラベル",
            "additionalProperties": {
              "type": "string",
              "maxLength": 63,
              "minLength": 1,
              "description": "Objectは最大で10個\\\n登録可能な文字列は[**こちら**](https://manual.iij.jp/dpf/help/50639516.html)のラベルの共通ルールを参照してください。\n"
            }
          }
        }
      },
      "KeywordsLabel": {
        "type": "array",
        "minItems": 0,
        "default": [],
        "items": {
          "type": "string",
          "maxLength": 381
        },
        "description": "Valueは「labelのKey=labelのValue」のようにイコール区切りで指定"
      },
      "LbDomain": {
        "type": "object",
        "required": [
          "id",
          "common_config_id",
          "service_code",
          "state",
          "favorite",
          "name",
          "description",
          "rule_resource_name"
        ],
        "properties": {
          "id": {
            "$ref": "#/components/schemas/SystemId"
          },
          "common_config_id": {
            "$ref": "#/components/schemas/Id"
          },
          "service_code": {
            "$ref": "#/components/schemas/ServiceCode"
          },
          "state": {
            "$ref": "#/components/schemas/LbDomainState"
          },
          "favorite": {
            "$ref": "#/components/schemas/LbDomainFavorite"
          },
          "name": {
            "$ref": "#/components/schemas/LbDomainName"
          },
          "description": {
            "$ref": "#/components/schemas/Description"
          },
          "rule_resource_name": {
            "$ref": "#/components/schemas/ResourceName"
          }
        }
      },
      "GetLbDomains": {
        "type": "object",
        "required": [
          "request_id",
          "results"
        ],
        "properties": {
          "request_id": {
            "$ref": "#/components/schemas/RequestId"
          },
          "results": {
            "type": "array",
            "minItems": 0,
            "default": [],
            "items": {
              "$ref": "#/components/schemas/LbDomain"
            }
          }
        }
      },
      "GetLbDomain": {
        "required": [
          "request_id",
          "result"
        ],
        "properties": {
          "request_id": {
            "$ref": "#/components/schemas/RequestId"
          },
          "result": {
            "$ref": "#/components/schemas/LbDomain"
          }
        }
      },
      "PatchLbDomain": {
        "type": "object",
        "properties": {
          "favorite": {
            "$ref": "#/components/schemas/LbDomainFavorite"
          },
          "description": {
            "$ref": "#/components/schemas/Description"
          },
          "rule_resource_name": {
            "$ref": "#/components/schemas/ResourceName"
          }
        }
      },
      "GetLbDomainLabels": {
        "required": [
          "request_id",
          "result"
        ],
        "properties": {
          "request_id": {
            "$ref": "#/components/schemas/RequestId"
          },
          "result": {
            "$ref": "#/components/schemas/LbDomainLabels"
          }
        }
      },
      "PutLbDomainLabels": {
        "$ref": "#/components/schemas/LbDomainLabels"
      },
      "MonitoringName": {
        "type": "string",
        "description": "監視名",
        "minLength": 1,
        "maxLength": 80
      },
      "MonitoringMtype": {
        "type": "string",
        "description": "監視種別",
        "enum": [
          "ping",
          "tcp",
          "http",
          "static"
        ]
      },
      "MonitoringPropsLocation": {
        "type": "string",
        "description": "監視元ロケーション",
        "enum": [
          "jp",
          "us",
          "all"
        ],
        "default": "all"
      },
      "MonitoringPropsInterval": {
        "type": "integer",
        "description": "監視間隔（s）",
        "minimum": 30,
        "maximum": 600,
        "default": 30
      },
      "MonitoringPropsHoldtime": {
        "type": "integer",
        "description": "保留時間（s）",
        "minimum": 0,
        "maximum": 3600,
        "default": 0
      },
      "MonitoringPropsTimeout": {
        "type": "integer",
        "description": "タイムアウト（s）",
        "minimum": 1,
        "maximum": 30,
        "default": 5
      },
      "MonitoringPropsTCPPort": {
        "type": "integer",
        "description": "ポート番号",
        "minimum": 0,
        "maximum": 65535
      },
      "MonitoringPropsHTTPPort": {
        "type": "integer",
        "description": "ポート番号,POST時に未指定の場合はHTTPの場合は80,HTTPSの場合は443",
        "minimum": 0,
        "maximum": 65535
      },
      "MonitoringPropsTLSEnabled": {
        "type": "boolean",
        "description": "TLS監視利用フラグ",
        "default": false
      },
      "MonitoringPropsTLSSNI": {
        "type": "string",
        "description": "TLS SNI値、未指定の場合、監視時にSNIとして、Hostヘッダーを利用",
        "maxLength": 253
      },
      "MonitoringPropsResponseMatch": {
        "type": "string",
        "description": "レスポンスボディマッチ文字列",
        "default": "",
        "maxLength": 256
      },
      "MonitoringPropsHTTPS": {
        "type": "boolean",
        "description": "HTTPS利用フラグ",
        "default": false
      },
      "MonitoringPropsHeaders": {
        "type": "array",
        "description": "Hostヘッダー",
        "minItems": 0,
        "maxItems": 1,
        "items": {
          "$ref": "#/components/schemas/MonitoringPropsHeader"
        }
      },
      "MonitoringPropsHeader": {
        "type": "object",
        "description": "ヘッダーの中身",
        "required": [
          "field_name",
          "field_value"
        ],
        "properties": {
          "field_name": {
            "type": "string",
            "enum": [
              "Host"
            ]
          },
          "field_value": {
            "type": "string",
            "description": "Hostヘッダー",
            "maxLength": 8192
          }
        }
      },
      "MonitoringPropsPath": {
        "type": "string",
        "description": "URLのPATH部(先頭の/が補完されて利用される)",
        "maxLength": 2048
      },
      "MonitoringPropsStatusCodes": {
        "type": "array",
        "description": "マッチするステータスコードの配列",
        "minItems": 0,
        "maxItems": 10,
        "default": [],
        "items": {
          "$ref": "#/components/schemas/MonitoringPropsStatusCode"
        }
      },
      "MonitoringPropsStatusCode": {
        "type": "string",
        "description": "ステータスコード（0-9の3桁の文字列のみ指定可能）"
      },
      "MonitoringPropsResult": {
        "type": "string",
        "description": "監視種別staticの監視結果の固定値",
        "enum": [
          "up",
          "down",
          "unknown"
        ],
        "default": "up"
      },
      "Monitoring": {
        "anyOf": [
          {
            "$ref": "#/components/schemas/MonitoringPing"
          },
          {
            "$ref": "#/components/schemas/MonitoringTCP"
          },
          {
            "$ref": "#/components/schemas/MonitoringHTTP"
          },
          {
            "$ref": "#/components/schemas/MonitoringStatic"
          }
        ]
      },
      "MonitoringPing": {
        "type": "object",
        "required": [
          "resource_name",
          "name",
          "mtype",
          "description",
          "props"
        ],
        "properties": {
          "resource_name": {
            "$ref": "#/components/schemas/ResourceName"
          },
          "name": {
            "$ref": "#/components/schemas/MonitoringName"
          },
          "mtype": {
            "type": "string",
            "enum": [
              "ping"
            ]
          },
          "description": {
            "$ref": "#/components/schemas/Description"
          },
          "props": {
            "type": "object",
            "required": [
              "location",
              "interval",
              "holdtime",
              "timeout"
            ],
            "properties": {
              "location": {
                "$ref": "#/components/schemas/MonitoringPropsLocation"
              },
              "interval": {
                "$ref": "#/components/schemas/MonitoringPropsInterval"
              },
              "holdtime": {
                "$ref": "#/components/schemas/MonitoringPropsHoldtime"
              },
              "timeout": {
                "$ref": "#/components/schemas/MonitoringPropsTimeout"
              }
            }
          }
        }
      },
      "MonitoringTCP": {
        "type": "object",
        "required": [
          "resource_name",
          "name",
          "mtype",
          "description",
          "props"
        ],
        "properties": {
          "resource_name": {
            "$ref": "#/components/schemas/ResourceName"
          },
          "name": {
            "$ref": "#/components/schemas/MonitoringName"
          },
          "mtype": {
            "type": "string",
            "enum": [
              "tcp"
            ]
          },
          "description": {
            "$ref": "#/components/schemas/Description"
          },
          "props": {
            "type": "object",
            "required": [
              "location",
              "interval",
              "holdtime",
              "timeout",
              "port",
              "tls_enabled",
              "tls_sni"
            ],
            "properties": {
              "location": {
                "$ref": "#/components/schemas/MonitoringPropsLocation"
              },
              "interval": {
                "$ref": "#/components/schemas/MonitoringPropsInterval"
              },
              "holdtime": {
                "$ref": "#/components/schemas/MonitoringPropsHoldtime"
              },
              "timeout": {
                "$ref": "#/components/schemas/MonitoringPropsTimeout"
              },
              "port": {
                "$ref": "#/components/schemas/MonitoringPropsTCPPort"
              },
              "tls_enabled": {
                "$ref": "#/components/schemas/MonitoringPropsTLSEnabled"
              },
              "tls_sni": {
                "$ref": "#/components/schemas/MonitoringPropsTLSSNI"
              }
            }
          }
        }
      },
      "MonitoringHTTP": {
        "type": "object",
        "required": [
          "resource_name",
          "name",
          "mtype",
          "description",
          "props"
        ],
        "properties": {
          "resource_name": {
            "$ref": "#/components/schemas/ResourceName"
          },
          "name": {
            "$ref": "#/components/schemas/MonitoringName"
          },
          "mtype": {
            "type": "string",
            "enum": [
              "http"
            ]
          },
          "description": {
            "$ref": "#/components/schemas/Description"
          },
          "props": {
            "type": "object",
            "required": [
              "location",
              "interval",
              "holdtime",
              "timeout",
              "port",
              "https",
              "tls_sni",
              "response_match",
              "headers",
              "path",
              "status_codes"
            ],
            "properties": {
              "location": {
                "$ref": "#/components/schemas/MonitoringPropsLocation"
              },
              "interval": {
                "$ref": "#/components/schemas/MonitoringPropsInterval"
              },
              "holdtime": {
                "$ref": "#/components/schemas/MonitoringPropsHoldtime"
              },
              "timeout": {
                "$ref": "#/components/schemas/MonitoringPropsTimeout"
              },
              "port": {
                "$ref": "#/components/schemas/MonitoringPropsHTTPPort"
              },
              "https": {
                "$ref": "#/components/schemas/MonitoringPropsHTTPS"
              },
              "tls_sni": {
                "$ref": "#/components/schemas/MonitoringPropsTLSSNI"
              },
              "response_match": {
                "$ref": "#/components/schemas/MonitoringPropsResponseMatch"
              },
              "headers": {
                "$ref": "#/components/schemas/MonitoringPropsHeaders"
              },
              "path": {
                "$ref": "#/components/schemas/MonitoringPropsPath"
              },
              "status_codes": {
                "$ref": "#/components/schemas/MonitoringPropsStatusCodes"
              }
            }
          }
        }
      },
      "MonitoringStatic": {
        "type": "object",
        "required": [
          "resource_name",
          "name",
          "mtype",
          "description",
          "props"
        ],
        "properties": {
          "resource_name": {
            "$ref": "#/components/schemas/ResourceName"
          },
          "name": {
            "$ref": "#/components/schemas/MonitoringName"
          },
          "mtype": {
            "type": "string",
            "enum": [
              "static"
            ]
          },
          "description": {
            "$ref": "#/components/schemas/Description"
          },
          "props": {
            "type": "object",
            "required": [
              "result"
            ],
            "properties": {
              "result": {
                "$ref": "#/components/schemas/MonitoringPropsResult"
              }
            }
          }
        }
      },
      "GetMonitoring": {
        "required": [
          "request_id",
          "result"
        ],
        "properties": {
          "request_id": {
            "$ref": "#/components/schemas/RequestId"
          },
          "result": {
            "required": [
              "sites"
            ],
            "allOf": [
              {
                "$ref": "#/components/schemas/Monitoring"
              },
              {
                "$ref": "#/components/schemas/Sites"
              }
            ]
          }
        }
      },
      "GetMonitorings": {
        "type": "object",
        "required": [
          "request_id",
          "results"
        ],
        "properties": {
          "request_id": {
            "$ref": "#/components/schemas/RequestId"
          },
          "results": {
            "type": "array",
            "minItems": 0,
            "default": [],
            "items": {
              "required": [
                "sites"
              ],
              "allOf": [
                {
                  "$ref": "#/components/schemas/Monitoring"
                },
                {
                  "$ref": "#/components/schemas/Sites"
                }
              ]
            }
          }
        }
      },
      "PatchMonitoring": {
        "anyOf": [
          {
            "$ref": "#/components/schemas/PatchMonitoringPing"
          },
          {
            "$ref": "#/components/schemas/PatchMonitoringTCP"
          },
          {
            "$ref": "#/components/schemas/PatchMonitoringHTTP"
          },
          {
            "$ref": "#/components/schemas/PatchMonitoringStatic"
          }
        ]
      },
      "PatchMonitoringPing": {
        "type": "object",
        "properties": {
          "name": {
            "$ref": "#/components/schemas/MonitoringName"
          },
          "description": {
            "$ref": "#/components/schemas/Description"
          },
          "props": {
            "type": "object",
            "properties": {
              "location": {
                "$ref": "#/components/schemas/MonitoringPropsLocation"
              },
              "interval": {
                "$ref": "#/components/schemas/MonitoringPropsInterval"
              },
              "holdtime": {
                "$ref": "#/components/schemas/MonitoringPropsHoldtime"
              },
              "timeout": {
                "$ref": "#/components/schemas/MonitoringPropsTimeout"
              }
            }
          }
        }
      },
      "PatchMonitoringTCP": {
        "type": "object",
        "properties": {
          "name": {
            "$ref": "#/components/schemas/MonitoringName"
          },
          "description": {
            "$ref": "#/components/schemas/Description"
          },
          "props": {
            "type": "object",
            "properties": {
              "location": {
                "$ref": "#/components/schemas/MonitoringPropsLocation"
              },
              "interval": {
                "$ref": "#/components/schemas/MonitoringPropsInterval"
              },
              "holdtime": {
                "$ref": "#/components/schemas/MonitoringPropsHoldtime"
              },
              "timeout": {
                "$ref": "#/components/schemas/MonitoringPropsTimeout"
              },
              "port": {
                "$ref": "#/components/schemas/MonitoringPropsTCPPort"
              },
              "tls_enabled": {
                "$ref": "#/components/schemas/MonitoringPropsTLSEnabled"
              },
              "tls_sni": {
                "$ref": "#/components/schemas/MonitoringPropsTLSSNI"
              }
            }
          }
        }
      },
      "PatchMonitoringHTTP": {
        "type": "object",
        "properties": {
          "name": {
            "$ref": "#/components/schemas/MonitoringName"
          },
          "description": {
            "$ref": "#/components/schemas/Description"
          },
          "props": {
            "type": "object",
            "properties": {
              "location": {
                "$ref": "#/components/schemas/MonitoringPropsLocation"
              },
              "interval": {
                "$ref": "#/components/schemas/MonitoringPropsInterval"
              },
              "holdtime": {
                "$ref": "#/components/schemas/MonitoringPropsHoldtime"
              },
              "timeout": {
                "$ref": "#/components/schemas/MonitoringPropsTimeout"
              },
              "port": {
                "$ref": "#/components/schemas/MonitoringPropsHTTPPort"
              },
              "https": {
                "$ref": "#/components/schemas/MonitoringPropsHTTPS"
              },
              "tls_sni": {
                "$ref": "#/components/schemas/MonitoringPropsTLSSNI"
              },
              "response_match": {
                "$ref": "#/components/schemas/MonitoringPropsResponseMatch"
              },
              "headers": {
                "$ref": "#/components/schemas/MonitoringPropsHeaders"
              },
              "path": {
                "$ref": "#/components/schemas/MonitoringPropsPath"
              },
              "status_codes": {
                "$ref": "#/components/schemas/MonitoringPropsStatusCodes"
              }
            }
          }
        }
      },
      "PatchMonitoringStatic": {
        "type": "object",
        "properties": {
          "name": {
            "$ref": "#/components/schemas/MonitoringName"
          },
          "description": {
            "$ref": "#/components/schemas/Description"
          },
          "props": {
            "type": "object",
            "properties": {
              "result": {
                "$ref": "#/components/schemas/MonitoringPropsResult"
              }
            }
          }
        }
      },
      "PostMonitoring": {
        "anyOf": [
          {
            "$ref": "#/components/schemas/PostMonitoringPing"
          },
          {
            "$ref": "#/components/schemas/PostMonitoringTCP"
          },
          {
            "$ref": "#/components/schemas/PostMonitoringHTTP"
          },
          {
            "$ref": "#/components/schemas/PostMonitoringStatic"
          }
        ]
      },
      "PostMonitoringPing": {
        "type": "object",
        "required": [
          "name",
          "mtype"
        ],
        "properties": {
          "resource_name": {
            "$ref": "#/components/schemas/ResourceName"
          },
          "name": {
            "$ref": "#/components/schemas/MonitoringName"
          },
          "mtype": {
            "type": "string",
            "enum": [
              "ping"
            ]
          },
          "description": {
            "$ref": "#/components/schemas/Description"
          },
          "props": {
            "type": "object",
            "properties": {
              "location": {
                "$ref": "#/components/schemas/MonitoringPropsLocation"
              },
              "interval": {
                "$ref": "#/components/schemas/MonitoringPropsInterval"
              },
              "holdtime": {
                "$ref": "#/components/schemas/MonitoringPropsHoldtime"
              },
              "timeout": {
                "$ref": "#/components/schemas/MonitoringPropsTimeout"
              }
            }
          }
        }
      },
      "PostMonitoringTCP": {
        "type": "object",
        "required": [
          "name",
          "mtype"
        ],
        "properties": {
          "resource_name": {
            "$ref": "#/components/schemas/ResourceName"
          },
          "name": {
            "$ref": "#/components/schemas/MonitoringName"
          },
          "mtype": {
            "type": "string",
            "enum": [
              "tcp"
            ]
          },
          "description": {
            "$ref": "#/components/schemas/Description"
          },
          "props": {
            "type": "object",
            "properties": {
              "location": {
                "$ref": "#/components/schemas/MonitoringPropsLocation"
              },
              "interval": {
                "$ref": "#/components/schemas/MonitoringPropsInterval"
              },
              "holdtime": {
                "$ref": "#/components/schemas/MonitoringPropsHoldtime"
              },
              "timeout": {
                "$ref": "#/components/schemas/MonitoringPropsTimeout"
              },
              "port": {
                "$ref": "#/components/schemas/MonitoringPropsTCPPort"
              },
              "tls_enabled": {
                "$ref": "#/components/schemas/MonitoringPropsTLSEnabled"
              },
              "tls_sni": {
                "$ref": "#/components/schemas/MonitoringPropsTLSSNI"
              }
            }
          }
        }
      },
      "PostMonitoringHTTP": {
        "type": "object",
        "required": [
          "name",
          "mtype"
        ],
        "properties": {
          "resource_name": {
            "$ref": "#/components/schemas/ResourceName"
          },
          "name": {
            "$ref": "#/components/schemas/MonitoringName"
          },
          "mtype": {
            "type": "string",
            "enum": [
              "http"
            ]
          },
          "description": {
            "$ref": "#/components/schemas/Description"
          },
          "props": {
            "type": "object",
            "properties": {
              "location": {
                "$ref": "#/components/schemas/MonitoringPropsLocation"
              },
              "interval": {
                "$ref": "#/components/schemas/MonitoringPropsInterval"
              },
              "holdtime": {
                "$ref": "#/components/schemas/MonitoringPropsHoldtime"
              },
              "timeout": {
                "$ref": "#/components/schemas/MonitoringPropsTimeout"
              },
              "port": {
                "$ref": "#/components/schemas/MonitoringPropsHTTPPort"
              },
              "https": {
                "$ref": "#/components/schemas/MonitoringPropsHTTPS"
              },
              "tls_sni": {
                "$ref": "#/components/schemas/MonitoringPropsTLSSNI"
              },
              "response_match": {
                "$ref": "#/components/schemas/MonitoringPropsResponseMatch"
              },
              "headers": {
                "$ref": "#/components/schemas/MonitoringPropsHeaders"
              },
              "path": {
                "$ref": "#/components/schemas/MonitoringPropsPath"
              },
              "status_codes": {
                "$ref": "#/components/schemas/MonitoringPropsStatusCodes"
              }
            }
          }
        }
      },
      "PostMonitoringStatic": {
        "type": "object",
        "required": [
          "name",
          "mtype"
        ],
        "properties": {
          "resource_name": {
            "$ref": "#/components/schemas/ResourceName"
          },
          "name": {
            "$ref": "#/components/schemas/MonitoringName"
          },
          "mtype": {
            "type": "string",
            "enum": [
              "static"
            ]
          },
          "description": {
            "$ref": "#/components/schemas/Description"
          },
          "props": {
            "type": "object",
            "properties": {
              "result": {
                "$ref": "#/components/schemas/MonitoringPropsResult"
              }
            }
          }
        }
      },
      "SiteName": {
        "type": "string",
        "description": "サイト名",
        "minLength": 1,
        "maxLength": 80
      },
      "SiteRrtype": {
        "type": "string",
        "enum": [
          "A",
          "AAAA",
          "CNAME"
        ],
        "description": "レコードタイプ"
      },
      "SiteLiveStatus": {
        "type": "string",
        "enum": [
          "up",
          "down"
        ],
        "description": "Live Status"
      },
      "Site": {
        "type": "object",
        "required": [
          "resource_name",
          "name",
          "rrtype",
          "description",
          "live_status"
        ],
        "properties": {
          "resource_name": {
            "$ref": "#/components/schemas/ResourceName"
          },
          "name": {
            "$ref": "#/components/schemas/SiteName"
          },
          "rrtype": {
            "$ref": "#/components/schemas/SiteRrtype"
          },
          "description": {
            "$ref": "#/components/schemas/Description"
          },
          "live_status": {
            "$ref": "#/components/schemas/SiteLiveStatus"
          }
        }
      },
      "Sites": {
        "type": "object",
        "properties": {
          "sites": {
            "type": "array",
            "default": [],
            "items": {
              "type": "object",
              "required": [
                "resource_name",
                "name",
                "rrtype",
                "description",
                "live_status",
                "endpoints"
              ],
              "properties": {
                "resource_name": {
                  "$ref": "#/components/schemas/ResourceName"
                },
                "name": {
                  "$ref": "#/components/schemas/SiteName"
                },
                "rrtype": {
                  "$ref": "#/components/schemas/SiteRrtype"
                },
                "description": {
                  "$ref": "#/components/schemas/Description"
                },
                "live_status": {
                  "$ref": "#/components/schemas/SiteLiveStatus"
                },
                "endpoints": {
                  "type": "array",
                  "default": [],
                  "items": {
                    "$ref": "#/components/schemas/Endpoint"
                  }
                }
              }
            }
          }
        }
      },
      "GetSites": {
        "type": "object",
        "required": [
          "request_id",
          "results"
        ],
        "properties": {
          "request_id": {
            "$ref": "#/components/schemas/RequestId"
          },
          "results": {
            "type": "array",
            "minItems": 0,
            "default": [],
            "items": {
              "required": [
                "endpoints"
              ],
              "allOf": [
                {
                  "$ref": "#/components/schemas/Site"
                },
                {
                  "$ref": "#/components/schemas/Endpoints"
                }
              ]
            }
          }
        }
      },
      "PostSite": {
        "type": "object",
        "required": [
          "name",
          "rrtype"
        ],
        "properties": {
          "resource_name": {
            "$ref": "#/components/schemas/ResourceName"
          },
          "name": {
            "$ref": "#/components/schemas/SiteName"
          },
          "rrtype": {
            "$ref": "#/components/schemas/SiteRrtype"
          },
          "description": {
            "$ref": "#/components/schemas/Description"
          }
        }
      },
      "GetSite": {
        "required": [
          "request_id",
          "result"
        ],
        "properties": {
          "request_id": {
            "$ref": "#/components/schemas/RequestId"
          },
          "result": {
            "required": [
              "endpoints"
            ],
            "allOf": [
              {
                "$ref": "#/components/schemas/Site"
              },
              {
                "$ref": "#/components/schemas/Endpoints"
              }
            ]
          }
        }
      },
      "PatchSite": {
        "type": "object",
        "properties": {
          "name": {
            "$ref": "#/components/schemas/SiteName"
          },
          "description": {
            "$ref": "#/components/schemas/Description"
          }
        }
      },
      "EndpointName": {
        "type": "string",
        "description": "エンドポイント名",
        "minLength": 1,
        "maxLength": 80
      },
      "EndpointMonitoringTarget": {
        "type": "string",
        "default": "",
        "description": "監視ターゲット（IPアドレス形式かホスト名形式）",
        "maxLength": 254
      },
      "EndpointWeight": {
        "type": "integer",
        "description": "weight",
        "minimum": 1,
        "maximum": 255
      },
      "EndpointManualFailback": {
        "type": "boolean",
        "default": false,
        "description": "手動切り戻し設定値"
      },
      "EndpointManualFailover": {
        "type": "boolean",
        "default": false,
        "description": "手動切り離し設定値"
      },
      "EndpointEnabled": {
        "type": "boolean",
        "default": false,
        "description": "状態"
      },
      "EndpointLiveStatus": {
        "type": "string",
        "enum": [
          "up",
          "down"
        ],
        "description": "Live Status"
      },
      "EndpointReadyStatus": {
        "type": "string",
        "enum": [
          "up",
          "down"
        ],
        "description": "Ready Status"
      },
      "EndpointRdata": {
        "type": "array",
        "description": "RDATA",
        "minItems": 1,
        "maxItems": 10,
        "items": {
          "type": "object",
          "required": [
            "value"
          ],
          "properties": {
            "value": {
              "type": "string"
            }
          }
        }
      },
      "EndpointMonitoringEnabled": {
        "type": "object",
        "required": [
          "enabled"
        ],
        "properties": {
          "enabled": {
            "type": "boolean",
            "default": false,
            "description": "エンドポイントと監視の紐付け状態"
          }
        }
      },
      "EndpointMonitoringResult": {
        "type": "object",
        "required": [
          "result"
        ],
        "properties": {
          "result": {
            "type": "string",
            "enum": [
              "up",
              "down",
              "unknown"
            ],
            "description": "エンドポイントと監視の紐付けの成功しているかどうかの状態",
            "default": "unknown"
          }
        }
      },
      "EndpointForce": {
        "type": "boolean",
        "default": false,
        "description": "指定することで Live Status が down であっても手動切り戻しが可能"
      },
      "EndpointMonitorings": {
        "type": "object",
        "properties": {
          "monitorings": {
            "type": "array",
            "default": [],
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/Monitoring"
                },
                {
                  "$ref": "#/components/schemas/EndpointMonitoringEnabled"
                },
                {
                  "$ref": "#/components/schemas/EndpointMonitoringResult"
                }
              ]
            }
          }
        }
      },
      "Endpoint": {
        "type": "object",
        "required": [
          "resource_name",
          "name",
          "monitoring_target",
          "description",
          "weight",
          "manual_failback",
          "manual_failover",
          "enabled",
          "live_status",
          "ready_status",
          "rdata",
          "monitorings"
        ],
        "properties": {
          "resource_name": {
            "$ref": "#/components/schemas/ResourceName"
          },
          "name": {
            "$ref": "#/components/schemas/EndpointName"
          },
          "monitoring_target": {
            "$ref": "#/components/schemas/EndpointMonitoringTarget"
          },
          "description": {
            "$ref": "#/components/schemas/Description"
          },
          "weight": {
            "$ref": "#/components/schemas/EndpointWeight"
          },
          "manual_failback": {
            "$ref": "#/components/schemas/EndpointManualFailback"
          },
          "manual_failover": {
            "$ref": "#/components/schemas/EndpointManualFailover"
          },
          "enabled": {
            "$ref": "#/components/schemas/EndpointEnabled"
          },
          "live_status": {
            "$ref": "#/components/schemas/EndpointLiveStatus"
          },
          "ready_status": {
            "$ref": "#/components/schemas/EndpointReadyStatus"
          },
          "rdata": {
            "$ref": "#/components/schemas/EndpointRdata"
          }
        }
      },
      "Endpoints": {
        "type": "object",
        "properties": {
          "endpoints": {
            "type": "array",
            "default": [],
            "items": {
              "$ref": "#/components/schemas/Endpoint"
            }
          }
        }
      },
      "GetEndpoints": {
        "type": "object",
        "required": [
          "request_id",
          "results"
        ],
        "properties": {
          "request_id": {
            "$ref": "#/components/schemas/RequestId"
          },
          "results": {
            "type": "array",
            "minItems": 0,
            "default": [],
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/Endpoint"
                },
                {
                  "$ref": "#/components/schemas/EndpointMonitorings"
                }
              ]
            }
          }
        }
      },
      "PostEndpoint": {
        "type": "object",
        "required": [
          "name",
          "weight",
          "rdata"
        ],
        "properties": {
          "resource_name": {
            "$ref": "#/components/schemas/ResourceName"
          },
          "name": {
            "$ref": "#/components/schemas/EndpointName"
          },
          "monitoring_target": {
            "$ref": "#/components/schemas/EndpointMonitoringTarget"
          },
          "description": {
            "$ref": "#/components/schemas/Description"
          },
          "weight": {
            "$ref": "#/components/schemas/EndpointWeight"
          },
          "manual_failback": {
            "$ref": "#/components/schemas/EndpointManualFailback"
          },
          "manual_failover": {
            "$ref": "#/components/schemas/EndpointManualFailover"
          },
          "enabled": {
            "$ref": "#/components/schemas/EndpointEnabled"
          },
          "rdata": {
            "$ref": "#/components/schemas/EndpointRdata"
          },
          "monitorings": {
            "type": "array",
            "default": [],
            "items": {
              "type": "object",
              "required": [
                "resource_name"
              ],
              "properties": {
                "resource_name": {
                  "type": "string",
                  "maxLength": 253,
                  "description": "紐付ける監視のリソース名(GET monitorings Schemaにおける resource_name)"
                },
                "enabled": {
                  "type": "boolean",
                  "default": false,
                  "description": "エンドポイントと監視の紐付け状態"
                }
              }
            }
          }
        }
      },
      "GetEndpoint": {
        "type": "object",
        "required": [
          "request_id",
          "result"
        ],
        "properties": {
          "request_id": {
            "$ref": "#/components/schemas/RequestId"
          },
          "result": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Endpoint"
              },
              {
                "$ref": "#/components/schemas/EndpointMonitorings"
              }
            ]
          }
        }
      },
      "PatchEndpoint": {
        "type": "object",
        "properties": {
          "name": {
            "$ref": "#/components/schemas/EndpointName"
          },
          "monitoring_target": {
            "type": "string",
            "description": "監視ターゲット（IPアドレス形式かホスト名形式）",
            "maxLength": 254
          },
          "description": {
            "$ref": "#/components/schemas/Description"
          },
          "weight": {
            "$ref": "#/components/schemas/EndpointWeight"
          },
          "manual_failback": {
            "type": "boolean",
            "description": "手動切り戻し設定値"
          },
          "manual_failover": {
            "type": "boolean",
            "description": "手動切り離し設定値"
          },
          "enabled": {
            "type": "boolean",
            "description": "状態"
          },
          "rdata": {
            "$ref": "#/components/schemas/EndpointRdata"
          },
          "monitorings": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "resource_name"
              ],
              "properties": {
                "resource_name": {
                  "type": "string",
                  "maxLength": 253,
                  "description": "紐付ける監視のリソース名(GET monitorings Schemaにおける resource_name)"
                },
                "enabled": {
                  "type": "boolean",
                  "description": "エンドポイントと監視の紐付け状態"
                }
              }
            }
          }
        }
      },
      "PostManualFailback": {
        "type": "object",
        "properties": {
          "force": {
            "$ref": "#/components/schemas/EndpointForce"
          }
        }
      },
      "RuleName": {
        "type": "string",
        "description": "ルール名",
        "minLength": 1,
        "maxLength": 80
      },
      "Rule": {
        "type": "object",
        "required": [
          "resource_name",
          "name",
          "description",
          "methods"
        ],
        "properties": {
          "resource_name": {
            "$ref": "#/components/schemas/ResourceName"
          },
          "name": {
            "$ref": "#/components/schemas/RuleName"
          },
          "description": {
            "$ref": "#/components/schemas/Description"
          },
          "methods": {
            "type": "array",
            "default": [],
            "items": {
              "type": "object",
              "required": [
                "method"
              ],
              "properties": {
                "priority": {
                  "$ref": "#/components/schemas/RuleMethodPriority"
                },
                "method": {
                  "$ref": "#/components/schemas/RuleMethodMethod"
                }
              }
            }
          }
        }
      },
      "GetRules": {
        "type": "object",
        "required": [
          "request_id",
          "results"
        ],
        "properties": {
          "request_id": {
            "$ref": "#/components/schemas/RequestId"
          },
          "results": {
            "type": "array",
            "minItems": 0,
            "default": [],
            "items": {
              "$ref": "#/components/schemas/Rule"
            }
          }
        }
      },
      "PostRule": {
        "type": "object",
        "required": [
          "name"
        ],
        "properties": {
          "resource_name": {
            "$ref": "#/components/schemas/ResourceName"
          },
          "name": {
            "$ref": "#/components/schemas/RuleName"
          },
          "description": {
            "$ref": "#/components/schemas/Description"
          }
        }
      },
      "GetRule": {
        "required": [
          "request_id",
          "result"
        ],
        "properties": {
          "request_id": {
            "$ref": "#/components/schemas/RequestId"
          },
          "result": {
            "$ref": "#/components/schemas/Rule"
          }
        }
      },
      "PatchRule": {
        "type": "object",
        "properties": {
          "name": {
            "$ref": "#/components/schemas/RuleName"
          },
          "description": {
            "$ref": "#/components/schemas/Description"
          }
        }
      },
      "RuleMethodPriority": {
        "type": "integer",
        "minimum": 0,
        "maximum": 255,
        "description": "優先度（親メソッドが failover の場合のみ指定）"
      },
      "RuleMethodMethod": {
        "type": "object",
        "required": [
          "resource_name",
          "mtype",
          "enabled",
          "live_status",
          "ready_status"
        ],
        "properties": {
          "resource_name": {
            "$ref": "#/components/schemas/ResourceName"
          },
          "mtype": {
            "type": "string",
            "enum": [
              "entry_a",
              "entry_aaaa",
              "entry_cname",
              "failover",
              "exit_site",
              "exit_sorry"
            ],
            "description": "メソッド種別"
          },
          "parent_resource_name": {
            "type": "string",
            "description": "親メソッドのリソース名",
            "maxLength": 253
          },
          "enabled": {
            "type": "boolean",
            "default": false,
            "description": "状態"
          },
          "site_resource_name": {
            "type": "string",
            "description": "紐付けされているサイトのリソース名（mtype が exit_site の場合のみ指定）",
            "maxLength": 253
          },
          "live_status": {
            "type": "string",
            "enum": [
              "up",
              "down"
            ],
            "description": "Live Status"
          },
          "ready_status": {
            "type": "string",
            "enum": [
              "up",
              "down"
            ],
            "description": "Ready Status"
          }
        }
      },
      "RuleMethod": {
        "type": "object",
        "required": [
          "method"
        ],
        "properties": {
          "priority": {
            "$ref": "#/components/schemas/RuleMethodPriority"
          },
          "method": {
            "$ref": "#/components/schemas/RuleMethodMethod"
          }
        }
      },
      "GetRuleMethods": {
        "type": "object",
        "required": [
          "request_id",
          "results"
        ],
        "properties": {
          "request_id": {
            "$ref": "#/components/schemas/RequestId"
          },
          "results": {
            "type": "array",
            "minItems": 0,
            "default": [],
            "items": {
              "$ref": "#/components/schemas/RuleMethod"
            }
          }
        }
      },
      "PostRuleMethod": {
        "type": "object",
        "required": [
          "method"
        ],
        "properties": {
          "priority": {
            "$ref": "#/components/schemas/RuleMethodPriority"
          },
          "method": {
            "type": "object",
            "required": [
              "mtype"
            ],
            "properties": {
              "resource_name": {
                "$ref": "#/components/schemas/ResourceName"
              },
              "mtype": {
                "type": "string",
                "enum": [
                  "entry_a",
                  "entry_aaaa",
                  "entry_cname",
                  "failover",
                  "exit_site",
                  "exit_sorry"
                ],
                "description": "メソッド種別"
              },
              "parent_resource_name": {
                "type": "string",
                "description": "親メソッドのリソース名（mtype が failover/exit_site/exit_sorry の場合は必須）",
                "maxLength": 253
              },
              "enabled": {
                "type": "boolean",
                "default": false,
                "description": "状態"
              },
              "site_resource_name": {
                "type": "string",
                "description": "紐付けされているサイトのリソース名（mtype が exit_site の場合のみ指定）",
                "maxLength": 253
              }
            }
          }
        }
      },
      "GetRuleMethod": {
        "required": [
          "request_id",
          "result"
        ],
        "properties": {
          "request_id": {
            "$ref": "#/components/schemas/RequestId"
          },
          "result": {
            "$ref": "#/components/schemas/RuleMethod"
          }
        }
      },
      "PatchRuleMethod": {
        "type": "object",
        "properties": {
          "priority": {
            "$ref": "#/components/schemas/RuleMethodPriority"
          },
          "method": {
            "type": "object",
            "properties": {
              "enabled": {
                "type": "boolean",
                "description": "状態"
              }
            }
          }
        }
      },
      "Config": {
        "type": "object",
        "required": [
          "monitorings",
          "sites",
          "rules"
        ],
        "properties": {
          "monitorings": {
            "type": "array",
            "default": [],
            "items": {
              "$ref": "#/components/schemas/Monitoring"
            }
          },
          "sites": {
            "type": "array",
            "default": [],
            "items": {
              "type": "object",
              "required": [
                "resource_name",
                "name",
                "rrtype",
                "description",
                "live_status",
                "endpoints"
              ],
              "properties": {
                "resource_name": {
                  "$ref": "#/components/schemas/ResourceName"
                },
                "name": {
                  "$ref": "#/components/schemas/SiteName"
                },
                "rrtype": {
                  "$ref": "#/components/schemas/SiteRrtype"
                },
                "description": {
                  "$ref": "#/components/schemas/Description"
                },
                "live_status": {
                  "$ref": "#/components/schemas/SiteLiveStatus"
                },
                "endpoints": {
                  "type": "array",
                  "default": [],
                  "items": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/Endpoint"
                      },
                      {
                        "$ref": "#/components/schemas/EndpointMonitorings"
                      }
                    ]
                  }
                }
              }
            }
          },
          "rules": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "resource_name",
                "name",
                "description",
                "methods"
              ],
              "properties": {
                "resource_name": {
                  "$ref": "#/components/schemas/ResourceName"
                },
                "name": {
                  "$ref": "#/components/schemas/RuleName"
                },
                "description": {
                  "$ref": "#/components/schemas/Description"
                },
                "methods": {
                  "$ref": "#/components/schemas/ConfigRuleMethods"
                }
              }
            }
          }
        }
      },
      "GetConfig": {
        "type": "object",
        "required": [
          "request_id",
          "result"
        ],
        "properties": {
          "request_id": {
            "$ref": "#/components/schemas/RequestId"
          },
          "result": {
            "$ref": "#/components/schemas/Config"
          }
        }
      },
      "PutConfig": {
        "type": "object",
        "required": [
          "monitorings",
          "sites",
          "rules"
        ],
        "properties": {
          "monitorings": {
            "type": "array",
            "minItems": 0,
            "maxItems": 50,
            "items": {
              "type": "object",
              "required": [
                "resource_name",
                "name",
                "mtype",
                "description",
                "props"
              ],
              "properties": {
                "resource_name": {
                  "$ref": "#/components/schemas/ResourceName"
                },
                "name": {
                  "$ref": "#/components/schemas/MonitoringName"
                },
                "mtype": {
                  "$ref": "#/components/schemas/MonitoringMtype"
                },
                "description": {
                  "$ref": "#/components/schemas/PatchDescription"
                },
                "props": {
                  "type": "object",
                  "properties": {
                    "location": {
                      "type": "string",
                      "enum": [
                        "jp",
                        "us",
                        "all"
                      ],
                      "description": "監視元ロケーション（指定可能な監視種別はping,tcp,http）"
                    },
                    "interval": {
                      "type": "integer",
                      "minimum": 30,
                      "maximum": 600,
                      "description": "監視間隔（s）（指定可能な監視種別はping,tcp,http）"
                    },
                    "holdtime": {
                      "type": "integer",
                      "minimum": 0,
                      "maximum": 3600,
                      "description": "保留時間（s）（指定可能な監視種別はping,tcp,http）"
                    },
                    "timeout": {
                      "type": "integer",
                      "minimum": 1,
                      "maximum": 30,
                      "description": "タイムアウト（s）（指定可能な監視種別はping,tcp,http）"
                    },
                    "port": {
                      "type": "integer",
                      "minimum": 0,
                      "maximum": 65535,
                      "description": "ポート番号（指定可能な監視種別はtcp,http）"
                    },
                    "tls_enabled": {
                      "type": "boolean",
                      "description": "TLS監視（指定可能な監視種別はtcp）"
                    },
                    "tls_sni": {
                      "type": "string",
                      "maxLength": 253,
                      "description": "TLS SNI（指定可能な監視種別はtcp,http）"
                    },
                    "response_match": {
                      "type": "string",
                      "maxLength": 256,
                      "description": "レスポンスボディマッチ文字列（指定可能な監視種別はhttp）"
                    },
                    "https": {
                      "type": "boolean",
                      "description": "HTTPS利用（指定可能な監視種別はhttp）"
                    },
                    "headers": {
                      "type": "array",
                      "description": "Hostヘッダー（指定可能な監視種別はhttp）",
                      "minItems": 0,
                      "maxItems": 1,
                      "items": {
                        "type": "object",
                        "required": [
                          "field_name",
                          "field_value"
                        ],
                        "properties": {
                          "field_name": {
                            "type": "string",
                            "enum": [
                              "Host"
                            ]
                          },
                          "field_value": {
                            "type": "string",
                            "description": "Hostヘッダー",
                            "maxLength": 8192
                          }
                        }
                      }
                    },
                    "path": {
                      "type": "string",
                      "maxLength": 2048,
                      "description": "パス（先頭に「/」は不要。指定可能な監視種別はhttp）"
                    },
                    "status_codes": {
                      "type": "array",
                      "minItems": 0,
                      "maxItems": 10,
                      "description": "ステータスコード（0-9の3桁の文字列のみ指定可能。指定可能な監視種別はhttp）",
                      "items": {
                        "type": "string"
                      }
                    },
                    "result": {
                      "type": "string",
                      "enum": [
                        "up",
                        "down",
                        "unknown"
                      ],
                      "description": "固定値（指定可能な監視種別はstatic）"
                    }
                  }
                }
              }
            }
          },
          "sites": {
            "type": "array",
            "minItems": 0,
            "maxItems": 50,
            "items": {
              "type": "object",
              "required": [
                "resource_name",
                "name",
                "rrtype",
                "description",
                "endpoints"
              ],
              "properties": {
                "resource_name": {
                  "$ref": "#/components/schemas/ResourceName"
                },
                "name": {
                  "$ref": "#/components/schemas/SiteName"
                },
                "rrtype": {
                  "$ref": "#/components/schemas/SiteRrtype"
                },
                "description": {
                  "$ref": "#/components/schemas/PatchDescription"
                },
                "endpoints": {
                  "type": "array",
                  "minItems": 0,
                  "maxItems": 50,
                  "items": {
                    "type": "object",
                    "required": [
                      "resource_name",
                      "name",
                      "monitoring_target",
                      "description",
                      "weight",
                      "manual_failback",
                      "manual_failover",
                      "enabled",
                      "rdata",
                      "monitorings"
                    ],
                    "properties": {
                      "resource_name": {
                        "$ref": "#/components/schemas/ResourceName"
                      },
                      "name": {
                        "$ref": "#/components/schemas/EndpointName"
                      },
                      "monitoring_target": {
                        "type": "string",
                        "description": "監視ターゲット（IPアドレス形式かホスト名形式）",
                        "maxLength": 254
                      },
                      "description": {
                        "$ref": "#/components/schemas/PatchDescription"
                      },
                      "weight": {
                        "$ref": "#/components/schemas/EndpointWeight"
                      },
                      "manual_failback": {
                        "type": "boolean",
                        "description": "手動切り戻し設定値"
                      },
                      "manual_failover": {
                        "type": "boolean",
                        "description": "手動切り離し設定値"
                      },
                      "enabled": {
                        "type": "boolean",
                        "description": "状態"
                      },
                      "rdata": {
                        "$ref": "#/components/schemas/EndpointRdata"
                      },
                      "monitorings": {
                        "type": "array",
                        "minItems": 0,
                        "maxItems": 50,
                        "items": {
                          "type": "object",
                          "required": [
                            "resource_name",
                            "enabled"
                          ],
                          "properties": {
                            "resource_name": {
                              "type": "string",
                              "maxLength": 253,
                              "description": "紐付ける監視のリソース名"
                            },
                            "enabled": {
                              "type": "boolean",
                              "description": "エンドポイントと監視の紐付け状態"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "rules": {
            "type": "array",
            "minItems": 1,
            "maxItems": 10,
            "items": {
              "type": "object",
              "required": [
                "resource_name",
                "name",
                "description",
                "methods"
              ],
              "properties": {
                "resource_name": {
                  "$ref": "#/components/schemas/ResourceName"
                },
                "name": {
                  "$ref": "#/components/schemas/RuleName"
                },
                "description": {
                  "$ref": "#/components/schemas/PatchDescription"
                },
                "methods": {
                  "$ref": "#/components/schemas/ConfigRuleMethods"
                }
              }
            }
          }
        }
      },
      "ConfigRuleMethods": {
        "type": "array",
        "items": {
          "type": "object",
          "required": [
            "method"
          ],
          "properties": {
            "priority": {
              "$ref": "#/components/schemas/RuleMethodPriority"
            },
            "method": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/RuleMethodMethod"
                },
                {
                  "type": "object",
                  "required": [
                    "methods"
                  ],
                  "properties": {
                    "methods": {
                      "$ref": "#/components/schemas/ConfigRuleMethods"
                    }
                  }
                }
              ]
            }
          }
        }
      },
      "SearchLbDomainsLogsType": {
        "type": "array",
        "minItems": 0,
        "default": [],
        "description": "詳細説明は[**こちら**](#tag/logs-(lb_domains)",
        "items": {
          "$ref": "#/components/schemas/LbDomainsLogsType"
        }
      },
      "SearchLbDomainsLogsOperation": {
        "type": "array",
        "minItems": 0,
        "default": [],
        "description": "詳細説明は[**こちら**](#tag/logs-(lb_domains))",
        "items": {
          "$ref": "#/components/schemas/LbDomainsLogsOperation"
        }
      },
      "SearchLbDomainsLogsStatus": {
        "type": "array",
        "minItems": 0,
        "default": [],
        "description": "詳細説明は[**こちら**](#tag/logs-(lb_domains))",
        "items": {
          "$ref": "#/components/schemas/LbDomainsLogsStatus"
        }
      },
      "LbDomainsLogsType": {
        "type": "string",
        "enum": [
          "service",
          "rule",
          "site",
          "monitoring",
          "file",
          "monitoring_event"
        ]
      },
      "LbDomainsLogsOperation": {
        "type": "string",
        "enum": [
          "update_lb_domain_description",
          "update_lb_domain_favorite",
          "update_lb_domain_labels",
          "update_lb_domain_rule",
          "add_rule",
          "update_rule",
          "delete_rule",
          "add_rule_method",
          "update_rule_method",
          "delete_rule_method",
          "add_site",
          "update_site",
          "delete_site",
          "add_endpoint",
          "update_endpoint",
          "delete_endpoint",
          "manual_failover",
          "manual_failback",
          "add_monitoring",
          "update_monitoring",
          "delete_monitoring",
          "file_import",
          "monitoring_result_changed",
          "endpoint_live_status_changed",
          "endpoint_ready_status_changed",
          "site_live_status_changed"
        ]
      },
      "LbDomainsLogsStatus": {
        "type": "string",
        "enum": [
          "start",
          "success",
          "failure",
          "retry"
        ]
      },
      "LbDomainsLog": {
        "type": "object",
        "required": [
          "time",
          "log_type",
          "operator",
          "operation",
          "target",
          "request_id",
          "status"
        ],
        "properties": {
          "time": {
            "$ref": "#/components/schemas/LogDateTime"
          },
          "log_type": {
            "$ref": "#/components/schemas/LbDomainsLogsType"
          },
          "operator": {
            "$ref": "#/components/schemas/Operator"
          },
          "operation": {
            "$ref": "#/components/schemas/LbDomainsLogsOperation"
          },
          "target": {
            "$ref": "#/components/schemas/LogTarget"
          },
          "request_id": {
            "$ref": "#/components/schemas/RequestId"
          },
          "status": {
            "$ref": "#/components/schemas/LbDomainsLogsStatus"
          }
        }
      },
      "GetLbDomainsLogs": {
        "type": "object",
        "required": [
          "request_id",
          "results"
        ],
        "properties": {
          "request_id": {
            "$ref": "#/components/schemas/RequestId"
          },
          "results": {
            "type": "array",
            "minItems": 0,
            "default": [],
            "items": {
              "$ref": "#/components/schemas/LbDomainsLog"
            }
          }
        }
      }
    },
    "responses": {
      "Accepted": {
        "description": "Accepted",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/AsyncResponse"
            },
            "examples": {
              "AsyncResponse": {
                "$ref": "#/components/examples/AsyncResponse"
              }
            }
          }
        }
      },
      "GetContractLabelsSuccessResponse": {
        "description": "OK",
        "content": {
          "application/json": {
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/Response"
                },
                {
                  "type": "object",
                  "required": [
                    "result"
                  ],
                  "properties": {
                    "result": {
                      "$ref": "#/components/schemas/ContractLabels"
                    }
                  }
                }
              ]
            },
            "examples": {
              "success": {
                "$ref": "#/components/examples/GetContractLabels"
              }
            }
          }
        }
      },
      "PutContractLabelsBadRequest": {
        "description": "Bad Request\n\n<details close>\n<summary>ErrorDetails</summary>\n\ncode | attribute | 対処方法\n-----|-----------|----------\nnot_found | contract | 指定したContractIdを確認してください\ninvalid | schema | 指定したパラメータを確認してください\ninvalid_format_key | labels | 指定したlabel_keyのフォーマットを確認してください\ninvalid_length_key | labels | 指定したlabel_keyの文字数を確認してください\ninvalid_char_type_key | labels | 指定したlabel_keyの文字種を確認してください\ninvalid_format_value | labels | 指定したlabel_valueのフォーマットを確認してください\ninvalid_length_value | labels | 指定したlabel_valueの文字数を確認してください\ninvalid_char_type_value | labels | 指定したlabel_valueの文字種を確認してください\ninvalid_type_value | labels | 指定したパラメータの型を確認してください\n\n</details>\n",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/TargetBadRequest"
            },
            "examples": {
              "BadRequest": {
                "$ref": "#/components/examples/BadRequest"
              }
            }
          }
        }
      },
      "GetZoneLabelsSuccessResponse": {
        "description": "OK",
        "content": {
          "application/json": {
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/Response"
                },
                {
                  "type": "object",
                  "required": [
                    "result"
                  ],
                  "properties": {
                    "result": {
                      "$ref": "#/components/schemas/ZoneLabels"
                    }
                  }
                }
              ]
            },
            "examples": {
              "success": {
                "$ref": "#/components/examples/GetZoneLabels"
              }
            }
          }
        }
      },
      "PutZoneLabelsBadRequest": {
        "description": "Bad Request\n\n<details close>\n<summary>ErrorDetails</summary>\n\ncode | attribute | 対処方法\n-----|-----------|----------\nnot_found | zone | 指定したZoneIdを確認してください\ninvalid | schema | 指定したパラメータを確認してください\ninvalid_format_key | labels | 指定したlabel_keyのフォーマットを確認してください\ninvalid_length_key | labels | 指定したlabel_keyの文字数を確認してください\ninvalid_char_type_key | labels | 指定したlabel_keyの文字種を確認してください\ninvalid_format_value | labels | 指定したlabel_valueのフォーマットを確認してください\ninvalid_length_value | labels | 指定したlabel_valueの文字数を確認してください\ninvalid_char_type_value | labels | 指定したlabel_valueの文字種を確認してください\ninvalid_type_value | labels | 指定したパラメータの型を確認してください\n\n</details>\n",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/TargetBadRequest"
            },
            "examples": {
              "BadRequest": {
                "$ref": "#/components/examples/BadRequest"
              }
            }
          }
        }
      },
      "GetDsRecordsSuccessResponse": {
        "description": "OK",
        "content": {
          "application/json": {
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/Response"
                },
                {
                  "type": "object",
                  "required": [
                    "results"
                  ],
                  "properties": {
                    "results": {
                      "type": "array",
                      "minItems": 0,
                      "default": [],
                      "items": {
                        "type": "object",
                        "required": [
                          "name",
                          "ttl",
                          "rrtype",
                          "rdata"
                        ],
                        "properties": {
                          "name": {
                            "$ref": "#/components/schemas/RecordsName"
                          },
                          "ttl": {
                            "$ref": "#/components/schemas/RecordsTtl"
                          },
                          "rrtype": {
                            "$ref": "#/components/schemas/DsRecordsRrtype"
                          },
                          "rdata": {
                            "$ref": "#/components/schemas/RecordsRdata"
                          }
                        }
                      }
                    }
                  }
                }
              ]
            },
            "examples": {
              "success": {
                "$ref": "#/components/examples/GetDsRecordsFromCds"
              }
            }
          }
        }
      }
    },
    "examples": {
      "AsyncResponse": {
        "value": {
          "request_id": "782d746ac3cb46499b31708fa80e8660",
          "jobs_url": "https://api.dns-platform.jp/dpf/v1/jobs/{RequestId}"
        }
      },
      "BadRequest": {
        "value": {
          "request_id": "782d746ac3cb46499b31708fa80e8660",
          "error_type": "Bad Request",
          "error_message": "There are invalid parameters",
          "error_details": [
            {
              "code": "invalid",
              "attribute": "schema"
            }
          ]
        }
      },
      "GetCount": {
        "value": {
          "request_id": "782d746ac3cb46499b31708fa80e8660",
          "result": {
            "count": 10
          }
        }
      },
      "GetCcPrimaries": {
        "value": {
          "request_id": "782d746ac3cb46499b31708fa80e8660",
          "results": [
            {
              "id": 1234,
              "address": "192.0.2.0",
              "tsig_id": 1234,
              "enabled": 0
            },
            {
              "id": 1235,
              "address": "198.51.100.0",
              "tsig_id": null,
              "enabled": 1
            }
          ]
        }
      },
      "PostCcPrimary": {
        "value": {
          "tsig_id": 1234,
          "address": "192.0.2.0"
        }
      },
      "GetCcPrimary": {
        "value": {
          "request_id": "782d746ac3cb46499b31708fa80e8660",
          "result": {
            "id": 1234,
            "address": "192.0.2.0",
            "tsig_id": 1234,
            "enabled": 0
          }
        }
      },
      "PatchCcPrimary": {
        "value": {
          "enabled": 1
        }
      },
      "GetCcSecNotifiedServers": {
        "value": {
          "request_id": "782d746ac3cb46499b31708fa80e8660",
          "results": [
            {
              "id": 1234,
              "address": "192.0.2.0",
              "tsig_id": 1234
            },
            {
              "id": 1235,
              "address": "198.51.100.0",
              "tsig_id": null
            }
          ]
        }
      },
      "PostCcSecNotifiedServer": {
        "value": {
          "tsig_id": 1234,
          "address": "192.0.2.0"
        }
      },
      "GetCcSecNotifiedServer": {
        "value": {
          "request_id": "782d746ac3cb46499b31708fa80e8660",
          "result": {
            "id": 1234,
            "address": "192.0.2.0",
            "tsig_id": 1234
          }
        }
      },
      "PatchCcSecNotifiedServer": {
        "value": {
          "address": "198.51.100.0"
        }
      },
      "GetCcSecTransferAcls": {
        "value": {
          "request_id": "782d746ac3cb46499b31708fa80e8660",
          "results": [
            {
              "id": 1234,
              "network": "192.0.2.0/24",
              "tsig_id": 1234
            },
            {
              "id": 1235,
              "network": "198.51.100.0/24",
              "tsig_id": null
            }
          ]
        }
      },
      "PostCcSecTransferAcl": {
        "value": {
          "network": "192.0.2.0/24",
          "tsig_id": 1234
        }
      },
      "GetCcSecTransferAcl": {
        "value": {
          "request_id": "782d746ac3cb46499b31708fa80e8660",
          "result": {
            "id": 1234,
            "network": "192.0.2.0/24",
            "tsig_id": 1234
          }
        }
      },
      "PatchCcSecTransferAcl": {
        "value": {
          "network": "192.0.2.0/24",
          "tsig_id": 1234
        }
      },
      "GetCcNoticeAccounts": {
        "value": {
          "request_id": "782d746ac3cb46499b31708fa80e8660",
          "results": [
            {
              "resource_name": "a-1234567890-0abcd",
              "name": "name1",
              "lang": "ja",
              "props": {
                "mail": "iij-taro@example.jp",
                "phone": {
                  "country_code": "",
                  "number": ""
                }
              }
            },
            {
              "resource_name": "b-1234567890-0abcd",
              "name": "name2",
              "lang": "en_US",
              "props": {
                "mail": "iij-taro@example.jp",
                "phone": {
                  "country_code": "",
                  "number": ""
                }
              }
            }
          ]
        }
      },
      "PostCcNoticeAccount": {
        "value": {
          "resource_name": "a-1234567890-0abcd",
          "name": "name1",
          "lang": "ja",
          "props": {
            "mail": "iij-taro@example.jp"
          }
        }
      },
      "GetCcNoticeAccount": {
        "value": {
          "request_id": "782d746ac3cb46499b31708fa80e8660",
          "result": {
            "resource_name": "a-1234567890-0abcd",
            "name": "name1",
            "lang": "ja",
            "props": {
              "mail": "iij-taro@example.jp",
              "phone": {
                "country_code": "",
                "number": ""
              }
            }
          }
        }
      },
      "PatchCcNoticeAccount": {
        "value": {
          "name": "name1",
          "lang": "ja",
          "props": {
            "mail": "iij-taro@example.jp"
          }
        }
      },
      "GetCommonConfigs": {
        "value": {
          "request_id": "782d746ac3cb46499b31708fa80e8660",
          "results": [
            {
              "id": 1234,
              "name": "name1",
              "managed_dns_enabled": 0,
              "default": 1,
              "description": ""
            },
            {
              "id": 1235,
              "name": "name2",
              "managed_dns_enabled": 0,
              "default": 0,
              "description": ""
            }
          ]
        }
      },
      "PostCommonConfig": {
        "value": {
          "name": "name",
          "description": ""
        }
      },
      "GetCommonConfig": {
        "value": {
          "request_id": "782d746ac3cb46499b31708fa80e8660",
          "result": {
            "id": 1234,
            "name": "name",
            "managed_dns_enabled": 0,
            "default": 1,
            "description": ""
          }
        }
      },
      "PatchCommonConfig": {
        "value": {
          "name": "name"
        }
      },
      "PatchDefaultCommonConfig": {
        "value": {
          "common_config_id": 1234
        }
      },
      "PatchManagedDns": {
        "value": {
          "managed_dns_enabled": 1
        }
      },
      "GetContracts": {
        "value": {
          "request_id": "782d746ac3cb46499b31708fa80e8660",
          "results": [
            {
              "id": "fxxxxxxxxxxxxx",
              "service_code": "dpfxxxxxxxx",
              "state": 1,
              "favorite": 1,
              "plan": 2,
              "description": ""
            },
            {
              "id": "fyyyyyyyyyyyyy",
              "service_code": "dpfyyyyyyyy",
              "state": 2,
              "favorite": 2,
              "plan": 1,
              "description": ""
            }
          ]
        }
      },
      "GetContract": {
        "value": {
          "request_id": "782d746ac3cb46499b31708fa80e8660",
          "result": {
            "id": "fxxxxxxxxxxxxx",
            "service_code": "dpfxxxxxxxx",
            "state": 1,
            "favorite": 1,
            "plan": 2,
            "description": ""
          }
        }
      },
      "PatchContract": {
        "value": {
          "favorite": 2
        }
      },
      "GetContractLabels": {
        "summary": "正常取得",
        "value": {
          "request_id": "782d746ac3cb46499b31708fa80e8660",
          "result": {
            "labels": {
              "label_key_1": "label_value_1",
              "label_key_2": "label_value_2"
            }
          }
        }
      },
      "PutContractLabels": {
        "value": {
          "labels": {
            "label_key_1": "label_value_1",
            "label_key_2": "label_value_2"
          }
        }
      },
      "GetContractsLogs": {
        "value": {
          "request_id": "782d746ac3cb46499b31708fa80e8660",
          "results": [
            {
              "time": "2020-01-01T00:00:00.000+09:00",
              "log_type": "service",
              "operator": "iij-taro@example.jp",
              "operation": "update_contract_description",
              "target": "",
              "request_id": "782d746ac3cb46499b31708fa80e8660",
              "status": "success"
            },
            {
              "time": "2020-01-01T00:01:00.000+09:00",
              "log_type": "common_config",
              "operator": "iij-taro@example.jp",
              "operation": "update_common_config",
              "target": "default",
              "request_id": "782d746ac3cb46499b31708fa80e8660",
              "status": "start"
            }
          ]
        }
      },
      "GetContractPartners": {
        "value": {
          "request_id": "782d746ac3cb46499b31708fa80e8660",
          "results": [
            {
              "service_code": "iidxxxxxxxx"
            }
          ]
        }
      },
      "PatchContractsZones": {
        "value": {
          "common_config_id": 1234,
          "zone_ids": [
            "mxxxxxxxxxxxxx",
            "myyyyyyyyyyyyy"
          ]
        }
      },
      "PatchContractsLbDomains": {
        "value": {
          "common_config_id": 1234,
          "lb_domain_ids": [
            "bxxxxxxxxxxxxx",
            "byyyyyyyyyyyyy"
          ]
        }
      },
      "GetDnssec": {
        "value": {
          "request_id": "782d746ac3cb46499b31708fa80e8660",
          "result": {
            "enabled": 1,
            "state": 2,
            "ds_state": 3
          }
        }
      },
      "PatchDnssec": {
        "value": {
          "enabled": 1
        }
      },
      "GetDsRecords": {
        "value": {
          "request_id": "782d746ac3cb46499b31708fa80e8660",
          "results": [
            {
              "rrset": "example.com. IN DS 1234 8 2 E8.....",
              "transited_at": "2020-01-01T01:02:03.000+00:00"
            }
          ]
        }
      },
      "GetQpsHistories": {
        "value": {
          "request_id": "782d746ac3cb46499b31708fa80e8660",
          "results": [
            {
              "service_code": "dpfxxxxxxxx",
              "name": null,
              "values": [
                {
                  "month": "2019-01",
                  "qps": 0
                },
                {
                  "month": "2019-02",
                  "qps": 10
                },
                {
                  "month": "2019-03",
                  "qps": 20
                },
                {
                  "month": "2019-04",
                  "qps": 30
                },
                {
                  "month": "2019-05",
                  "qps": 40
                },
                {
                  "month": "2019-06",
                  "qps": 50
                },
                {
                  "month": "2019-07",
                  "qps": 60
                },
                {
                  "month": "2019-08",
                  "qps": 70
                },
                {
                  "month": "2019-09",
                  "qps": 80
                },
                {
                  "month": "2019-10",
                  "qps": 90
                },
                {
                  "month": "2019-11",
                  "qps": 110
                },
                {
                  "month": "2019-12",
                  "qps": 120
                }
              ]
            },
            {
              "service_code": "dpmyyyyyyyy",
              "name": "name1.example.com.",
              "values": [
                {
                  "month": "2019-01",
                  "qps": 0
                },
                {
                  "month": "2019-02",
                  "qps": 10
                },
                {
                  "month": "2019-03",
                  "qps": 20
                },
                {
                  "month": "2019-04",
                  "qps": 30
                },
                {
                  "month": "2019-05",
                  "qps": 40
                },
                {
                  "month": "2019-06",
                  "qps": 50
                },
                {
                  "month": "2019-07",
                  "qps": 60
                },
                {
                  "month": "2019-08",
                  "qps": 70
                },
                {
                  "month": "2019-09",
                  "qps": 80
                },
                {
                  "month": "2019-10",
                  "qps": 90
                },
                {
                  "month": "2019-11",
                  "qps": 110
                },
                {
                  "month": "2019-12",
                  "qps": 120
                }
              ]
            },
            {
              "service_code": "dplzzzzzzzz",
              "name": "lb.xxxxxxxxxxxxxxxx.x.d-16.jp.",
              "values": [
                {
                  "month": "2019-01",
                  "qps": 0
                },
                {
                  "month": "2019-02",
                  "qps": 10
                },
                {
                  "month": "2019-03",
                  "qps": 20
                },
                {
                  "month": "2019-04",
                  "qps": 30
                },
                {
                  "month": "2019-05",
                  "qps": 40
                },
                {
                  "month": "2019-06",
                  "qps": 50
                },
                {
                  "month": "2019-07",
                  "qps": 60
                },
                {
                  "month": "2019-08",
                  "qps": 70
                },
                {
                  "month": "2019-09",
                  "qps": 80
                },
                {
                  "month": "2019-10",
                  "qps": 90
                },
                {
                  "month": "2019-11",
                  "qps": 110
                },
                {
                  "month": "2019-12",
                  "qps": 120
                }
              ]
            }
          ]
        }
      },
      "GetTsigs": {
        "value": {
          "request_id": "782d746ac3cb46499b31708fa80e8660",
          "results": [
            {
              "id": 1234,
              "name": "name1.fxxxxxxxxxxxxx.d-53.net.",
              "algorithm": 0,
              "secret": "YWJjZGVmZ2hpamtsbW5vcHFyc3R1dnd4eXowMTIzNTY3ODk=",
              "description": ""
            },
            {
              "id": 1235,
              "name": "name2.fxxxxxxxxxxxxx.d-53.net.",
              "algorithm": 0,
              "secret": "MDEyMzU2Nzg5YWJjZGVmZ2hpamtsbW5vcHFyc3R1dnd4eXo=",
              "description": ""
            }
          ]
        }
      },
      "PostTsig": {
        "value": {
          "name": "name",
          "description": ""
        }
      },
      "GetTsig": {
        "value": {
          "request_id": "782d746ac3cb46499b31708fa80e8660",
          "result": {
            "id": 1234,
            "name": "name.fxxxxxxxxxxxxx.d-53.net.",
            "algorithm": 0,
            "secret": "YWJjZGVmZ2hpamtsbW5vcHFyc3R1dnd4eXowMTIzNTY3ODk=",
            "description": ""
          }
        }
      },
      "PatchTsig": {
        "value": {
          "description": "description"
        }
      },
      "GetCommonConfigsTsig": {
        "value": {
          "request_id": "782d746ac3cb46499b31708fa80e8660",
          "results": [
            {
              "id": 1234,
              "name": "name1",
              "managed_dns_enabled": 0,
              "default": 1,
              "description": ""
            },
            {
              "id": 1235,
              "name": "name2",
              "managed_dns_enabled": 0,
              "default": 0,
              "description": ""
            }
          ]
        }
      },
      "GetDefaultTtl": {
        "value": {
          "request_id": "782d746ac3cb46499b31708fa80e8660",
          "result": {
            "value": 28800,
            "state": 0,
            "operator": null
          }
        }
      },
      "PatchDefaultTtl": {
        "value": {
          "value": 28800
        }
      },
      "GetDiffsDefaultTtl": {
        "value": {
          "request_id": "782d746ac3cb46499b31708fa80e8660",
          "results": [
            {
              "new": {
                "value": 28800,
                "state": 3,
                "operator": "SAXXXXXXX"
              },
              "old": {
                "value": 800,
                "state": 5,
                "operator": null
              }
            }
          ]
        }
      },
      "GetZonesLogs": {
        "value": {
          "request_id": "782d746ac3cb46499b31708fa80e8660",
          "results": [
            {
              "time": "2020-01-01T00:00:00.000+09:00",
              "log_type": "service",
              "operator": "iij-taro@example.jp",
              "operation": "update_zone_proxy",
              "target": "example.com.",
              "request_id": "782d746ac3cb46499b31708fa80e8660",
              "status": "success"
            },
            {
              "time": "2020-01-01T00:01:00.000+09:00",
              "log_type": "record",
              "operator": "iij-taro@example.jp",
              "operation": "updating_default_ttl",
              "target": "",
              "request_id": "782d746ac3cb46499b31708fa80e8660",
              "status": "start"
            }
          ]
        }
      },
      "GetRecords": {
        "value": {
          "request_id": "782d746ac3cb46499b31708fa80e8660",
          "results": [
            {
              "id": "rxxxxxxxxxxxxx",
              "name": "example.com",
              "ttl": null,
              "rrtype": "SOA",
              "rdata": [
                {
                  "value": "ns000.d-53.net. dns-managers.iij.ad.jp. 1 3600 600 604800 300"
                }
              ],
              "labels": {
                "label_key_1": "label_value_1",
                "label_key_2": "label_value_2"
              },
              "state": 0,
              "description": "",
              "operator": null
            },
            {
              "id": "ryyyyyyyyyyyyy",
              "name": "example.com",
              "ttl": null,
              "rrtype": "NS",
              "rdata": [
                {
                  "value": "ns001-xxxxxxxxxxxxxxxx.x.d-53.jp."
                },
                {
                  "value": "ns001-xxxxxxxxxxxxxxxx.x.d-53.org."
                },
                {
                  "value": "ns001-xxxxxxxxxxxxxxxx.x.d-53.info."
                }
              ],
              "labels": {
                "label_key_3": "label_value_3",
                "label_key_4": "label_value_4"
              },
              "state": 0,
              "description": "",
              "operator": null
            }
          ]
        }
      },
      "PutRecord": {
        "value": {
          "records": [
            {
              "name": "example.com.",
              "ttl": null,
              "rrtype": "SOA",
              "rdata": [
                {
                  "value": "ns000.d-53.net. dns-managers.iij.ad.jp. 1 3600 600 604800 900"
                }
              ],
              "labels": {
                "key1": "value1",
                "key2": "value2"
              },
              "description": ""
            },
            {
              "name": "example.com.",
              "ttl": 300,
              "rrtype": "NS",
              "rdata": [
                {
                  "value": "ns001-xxxxxxxxxxxxxxxx.o.d-53.jp."
                },
                {
                  "value": "ns001-xxxxxxxxxxxxxxxx.o.d-53.net."
                },
                {
                  "value": "ns001-xxxxxxxxxxxxxxxx.o.d-53.info."
                }
              ],
              "labels": {
                "key3": "value3",
                "key4": "value4"
              },
              "description": "comment"
            },
            {
              "name": "sample.example.com.",
              "ttl": 600,
              "rrtype": "TXT",
              "rdata": [
                {
                  "value": "\"sample\""
                }
              ],
              "labels": {},
              "description": ""
            }
          ]
        }
      },
      "PostRecord": {
        "value": {
          "name": "example.com",
          "rrtype": "A",
          "rdata": [
            {
              "value": "192.0.2.0"
            }
          ],
          "description": ""
        }
      },
      "GetRecord": {
        "value": {
          "request_id": "782d746ac3cb46499b31708fa80e8660",
          "result": {
            "id": "rxxxxxxxxxxxxx",
            "name": "example.com",
            "ttl": null,
            "rrtype": "SOA",
            "rdata": [
              {
                "value": "ns000.d-53.net. dns-managers.iij.ad.jp. 1 3600 600 604800 300"
              }
            ],
            "labels": {
              "label_key_1": "label_value_1",
              "label_key_2": "label_value_2"
            },
            "state": 0,
            "description": "",
            "operator": null
          }
        }
      },
      "PatchRecord": {
        "value": {
          "ttl": 12345678
        }
      },
      "GetRecordsDiffs": {
        "value": {
          "request_id": "782d746ac3cb46499b31708fa80e8660",
          "results": [
            {
              "new": {
                "id": "rxxxxxxxxxxxxx",
                "name": "example.com",
                "ttl": 100,
                "rrtype": "SOA",
                "rdata": [
                  {
                    "value": "ns000.d-53.net. dns-managers.iij.ad.jp. 1 3600 600 604800 300"
                  }
                ],
                "labels": {
                  "label_key_1": "label_value_1",
                  "label_key_2": "label_value_2"
                },
                "state": 3,
                "description": "",
                "operator": "SAXXXXXXX"
              },
              "old": {
                "id": "rxxxxxxxxxxxxx",
                "name": "example.com",
                "ttl": null,
                "rrtype": "SOA",
                "rdata": [
                  {
                    "value": "ns000.d-53.net. dns-managers.iij.ad.jp. 1 3600 600 604800 300"
                  }
                ],
                "labels": {
                  "label_key_1": "label_value_1",
                  "label_key_2": "label_value_2"
                },
                "state": 5,
                "description": "",
                "operator": null
              }
            },
            {
              "new": {
                "id": "ryyyyyyyyyyyyy",
                "name": "example.com",
                "ttl": 100,
                "rrtype": "NS",
                "rdata": [
                  {
                    "value": "ns001-xxxxxxxxxxxxxxxx.x.d-53.jp."
                  },
                  {
                    "value": "ns001-xxxxxxxxxxxxxxxx.x.d-53.org."
                  },
                  {
                    "value": "ns001-xxxxxxxxxxxxxxxx.x.d-53.info."
                  }
                ],
                "labels": {
                  "label_key_3": "label_value_3",
                  "label_key_4": "label_value_4"
                },
                "state": 3,
                "description": "",
                "operator": "SAXXXXXXX"
              },
              "old": {
                "id": "ryyyyyyyyyyyyy",
                "name": "example.com",
                "ttl": null,
                "rrtype": "NS",
                "rdata": [
                  {
                    "value": "ns001-xxxxxxxxxxxxxxxx.x.d-53.jp."
                  },
                  {
                    "value": "ns001-xxxxxxxxxxxxxxxx.x.d-53.org."
                  },
                  {
                    "value": "ns001-xxxxxxxxxxxxxxxx.x.d-53.info."
                  }
                ],
                "labels": {
                  "label_key_3": "label_value_3",
                  "label_key_4": "label_value_4"
                },
                "state": 5,
                "description": "",
                "operator": null
              }
            }
          ]
        }
      },
      "GetDsRecordsFromCds": {
        "value": {
          "request_id": "782d746ac3cb46499b31708fa80e8660",
          "results": [
            {
              "name": "sub.example.com.",
              "ttl": 28800,
              "rrtype": "DS",
              "rdata": [
                {
                  "value": "41647 13 2 2ad225a2e5b514c2f443f30bb5fa926cf4a11a2722349b7b37000cd06ef7185f"
                }
              ]
            }
          ]
        }
      },
      "GetZoneHistories": {
        "value": {
          "request_id": "782d746ac3cb46499b31708fa80e8660",
          "results": [
            {
              "id": 1234,
              "committed_at": "2020-01-01T01:02:03.000+00:00",
              "description": "",
              "operator": "SAXXXXXXX"
            },
            {
              "id": 1235,
              "committed_at": "2020-01-01T01:02:03.000+00:00",
              "description": "",
              "operator": "SAXXXXXXX"
            }
          ]
        }
      },
      "GetZoneHistoriesText": {
        "value": {
          "request_id": "782d746ac3cb46499b31708fa80e8660",
          "result": {
            "id": 1234,
            "committed_at": "2020-01-01T01:02:03.000+00:00",
            "description": "",
            "operator": "SAXXXXXXX",
            "text": "$TTL 28800\nexample.com.  IN SOA ns000.d-53.net. dns-managers.iij.ad.jp. 1 3600 600 604800 300\nexample.com.  IN NS ns001-xxxxxxxxxxxxxxxx.x.d-53.jp.\nexample.com.  IN NS ns001-xxxxxxxxxxxxxxxx.x.d-53.org.\nexample.com.  IN NS ns001-xxxxxxxxxxxxxxxx.x.d-53.info."
          }
        }
      },
      "GetZoneProxy": {
        "value": {
          "request_id": "782d746ac3cb46499b31708fa80e8660",
          "result": {
            "enabled": 1
          }
        }
      },
      "PatchZoneProxy": {
        "value": {
          "enabled": 0
        }
      },
      "GetHealthCheck": {
        "value": {
          "request_id": "782d746ac3cb46499b31708fa80e8660",
          "results": [
            {
              "address": "192.0.2.0",
              "status": "NG",
              "tsig_name": "name1.fxxxxxxxxxxxxx.d-53.net.",
              "enabled": 1
            },
            {
              "address": "198.51.100.0",
              "status": "OK",
              "tsig_name": "name2.fxxxxxxxxxxxxx.d-53.net.",
              "enabled": 1
            }
          ]
        }
      },
      "GetZones": {
        "value": {
          "request_id": "782d746ac3cb46499b31708fa80e8660",
          "results": [
            {
              "id": "mxxxxxxxxxxxxx",
              "common_config_id": 1234,
              "service_code": "dpmxxxxxxxx",
              "state": 1,
              "favorite": 1,
              "name": "name1.example.com.",
              "network": null,
              "description": ""
            },
            {
              "id": "myyyyyyyyyyyyy",
              "common_config_id": 1235,
              "service_code": "dpmyyyyyyyy",
              "state": 1,
              "favorite": 2,
              "network": null,
              "name": "name2.example.com.",
              "description": ""
            }
          ]
        }
      },
      "GetZone": {
        "value": {
          "request_id": "782d746ac3cb46499b31708fa80e8660",
          "result": {
            "id": "mxxxxxxxxxxxxx",
            "common_config_id": 1234,
            "service_code": "dpmxxxxxxxx",
            "state": 1,
            "favorite": 1,
            "name": "name.example.com.",
            "network": null,
            "description": ""
          }
        }
      },
      "PatchZone": {
        "value": {
          "favorite": 2
        }
      },
      "PatchZoneCommit": {
        "value": {
          "description": "description"
        }
      },
      "GetManagedServers": {
        "value": {
          "request_id": "782d746ac3cb46499b31708fa80e8660",
          "results": [
            "ns001-xxxxxxxxxxxxxxxx.x.d-53.jp.",
            "ns001-xxxxxxxxxxxxxxxx.x.d-53.org.",
            "ns001-xxxxxxxxxxxxxxxx.x.d-53.info."
          ]
        }
      },
      "GetZoneLabels": {
        "summary": "正常取得",
        "value": {
          "request_id": "782d746ac3cb46499b31708fa80e8660",
          "result": {
            "labels": {
              "label_key_1": "label_value_1",
              "label_key_2": "label_value_2"
            }
          }
        }
      },
      "PutZoneLabels": {
        "value": {
          "labels": {
            "label_key_1": "label_value_1",
            "label_key_2": "label_value_2"
          }
        }
      },
      "GetDelegations": {
        "value": {
          "request_id": "782d746ac3cb46499b31708fa80e8660",
          "results": [
            {
              "id": "mxxxxxxxxxxxxx",
              "service_code": "dpmxxxxxxxx",
              "name": "name1.example.com.",
              "network": null,
              "description": "",
              "delegation_requested_at": "2020-01-01T01:02:03.000+00:00"
            },
            {
              "id": "myyyyyyyyyyyyy",
              "service_code": "dpmyyyyyyyy",
              "name": "name2.example.com.",
              "network": null,
              "description": "",
              "delegation_requested_at": "2020-01-01T01:02:03.000+00:00"
            }
          ]
        }
      },
      "PostDelegations": {
        "value": {
          "zone_ids": [
            "mxxxxxxxxxxxxx",
            "myyyyyyyyyyyyy"
          ]
        }
      },
      "GetJobsRunning": {
        "summary": "jobs status is \"RUNNING\" examples",
        "value": {
          "request_id": "782d746ac3cb46499b31708fa80e8660",
          "status": "RUNNING"
        }
      },
      "GetJobsSuccessful": {
        "summary": "jobs status is \"SUCCESSFUL\" examples",
        "value": {
          "request_id": "782d746ac3cb46499b31708fa80e8660",
          "status": "SUCCESSFUL",
          "resources_url": "https://api.dns-platform.jp/dpf/v1/{RESOURCES_PATH}"
        }
      },
      "GetJobsFailed": {
        "summary": "jobs status is \"FAILED\" examples",
        "value": {
          "request_id": "782d746ac3cb46499b31708fa80e8660",
          "status": "FAILED",
          "error_type": "Bad Request",
          "error_message": "There are invalid parameters"
        }
      },
      "GetPing": {
        "value": {
          "request_id": "782d746ac3cb46499b31708fa80e8660"
        }
      },
      "GetLbDomains": {
        "value": {
          "request_id": "782d746ac3cb46499b31708fa80e8660",
          "results": [
            {
              "id": "bxxxxxxxxxxxxx",
              "common_config_id": 1234,
              "service_code": "dplxxxxxxxx",
              "state": 1,
              "favorite": 1,
              "name": "lb.xxxxxxxxxxxxxxxx.x.d-16.jp.",
              "description": "",
              "rule_resource_name": "bxxxxxxxxxxxxx-xxxx-xxxxx"
            },
            {
              "id": "byyyyyyyyyyyyy",
              "common_config_id": 1235,
              "service_code": "dplyyyyyyyy",
              "state": 1,
              "favorite": 2,
              "name": "lb.yyyyyyyyyyyyyyyy.y.d-16.jp.",
              "description": "",
              "rule_resource_name": "byyyyyyyyyyyyy-yyyy-yyyyy"
            }
          ]
        }
      },
      "GetLbDomain": {
        "value": {
          "request_id": "782d746ac3cb46499b31708fa80e8660",
          "result": {
            "id": "bxxxxxxxxxxxxx",
            "common_config_id": 1234,
            "service_code": "dplxxxxxxxx",
            "state": 1,
            "favorite": 1,
            "name": "lb.xxxxxxxxxxxxxxxx.x.d-16.jp.",
            "description": "",
            "rule_resource_name": "bxxxxxxxxxxxxx-xxxx-xxxxx"
          }
        }
      },
      "PatchLbDomain": {
        "value": {
          "favorite": 2
        }
      },
      "GetLbDomainLabels": {
        "value": {
          "request_id": "782d746ac3cb46499b31708fa80e8660",
          "result": {
            "labels": {
              "label_key_1": "label_value_1",
              "label_key_2": "label_value_2"
            }
          }
        }
      },
      "PutLbDomainLabels": {
        "value": {
          "labels": {
            "label_key_1": "label_value_1",
            "label_key_2": "label_value_2"
          }
        }
      },
      "GetMonitorings": {
        "value": {
          "request_id": "782d746ac3cb46499b31708fa80e8660",
          "results": [
            {
              "resource_name": "bxxxxxxxxxxxxx-xxxx-xxxxx",
              "name": "monitoring001",
              "mtype": "static",
              "description": "",
              "props": {
                "result": "up"
              },
              "sites": []
            },
            {
              "resource_name": "byyyyyyyyyyyyy-yyyy-yyyyy",
              "name": "monitoring002",
              "mtype": "static",
              "description": "",
              "props": {
                "result": "down"
              },
              "sites": []
            }
          ]
        }
      },
      "PostMonitoringPing": {
        "value": {
          "name": "monitoring-ping",
          "mtype": "ping",
          "props": {
            "interval": 600,
            "timeout": 30,
            "holdtime": 0
          }
        }
      },
      "PostMonitoringTCP": {
        "value": {
          "name": "monitoring-tcp",
          "mtype": "tcp",
          "props": {
            "interval": 600,
            "timeout": 30,
            "holdtime": 0,
            "port": 53
          }
        }
      },
      "PostMonitoringHTTP": {
        "value": {
          "name": "monitoring-ping",
          "mtype": "http",
          "props": {
            "interval": 600,
            "timeout": 30,
            "holdtime": 0,
            "https": true,
            "headers": [
              {
                "field_name": "Host",
                "field_value": "www.example.jp"
              }
            ],
            "path": "ready",
            "response_match": "status=ok",
            "status_codes": [
              "200",
              "202"
            ]
          }
        }
      },
      "PostMonitoringStatic": {
        "value": {
          "name": "monitoring-static",
          "mtype": "static",
          "description": "",
          "props": {
            "result": "down"
          }
        }
      },
      "GetMonitoring": {
        "value": {
          "request_id": "782d746ac3cb46499b31708fa80e8660",
          "result": {
            "resource_name": "bxxxxxxxxxxxxx-xxxx-xxxxx",
            "name": "monitoring001",
            "mtype": "static",
            "description": "",
            "props": {
              "result": "up"
            },
            "sites": []
          }
        }
      },
      "PatchMonitoringPing": {
        "value": {
          "props": {
            "interval": 300
          }
        }
      },
      "PatchMonitoringTCP": {
        "value": {
          "description": "description",
          "props": {
            "port": 443
          }
        }
      },
      "PatchMonitoringHTTP": {
        "value": {
          "description": "description",
          "props": {
            "path": "live"
          }
        }
      },
      "PatchMonitoringStatic": {
        "value": {
          "name": "monitoring-static2",
          "description": "description",
          "props": {
            "result": "up"
          }
        }
      },
      "GetSites": {
        "value": {
          "request_id": "782d746ac3cb46499b31708fa80e8660",
          "results": [
            {
              "resource_name": "bxxxxxxxxxxxxx-xxxx-xxxxx",
              "name": "site001",
              "rrtype": "A",
              "description": "",
              "live_status": "down",
              "endpoints": []
            },
            {
              "resource_name": "byyyyyyyyyyyyy-yyyy-yyyyy",
              "name": "site002",
              "rrtype": "AAAA",
              "description": "",
              "live_status": "up",
              "endpoints": []
            }
          ]
        }
      },
      "PostSite": {
        "value": {
          "name": "site001",
          "rrtype": "A",
          "description": ""
        }
      },
      "GetSite": {
        "value": {
          "request_id": "782d746ac3cb46499b31708fa80e8660",
          "result": {
            "resource_name": "bxxxxxxxxxxxxx-xxxx-xxxxx",
            "name": "site001",
            "rrtype": "A",
            "description": "",
            "live_status": "down",
            "endpoints": []
          }
        }
      },
      "PatchSite": {
        "value": {
          "name": "site002"
        }
      },
      "GetEndpoints": {
        "value": {
          "request_id": "782d746ac3cb46499b31708fa80e8660",
          "results": [
            {
              "resource_name": "bxxxxxxxxxxxxx-xxxx-xxxxx",
              "name": "endpoint001",
              "monitoring_target": "",
              "description": "",
              "weight": 1,
              "manual_failback": true,
              "manual_failover": true,
              "enabled": true,
              "live_status": "down",
              "ready_status": "down",
              "rdata": [
                {
                  "value": "example.com."
                }
              ],
              "monitorings": []
            },
            {
              "resource_name": "byyyyyyyyyyyyy-yyyy-yyyyy",
              "name": "endpoint002",
              "monitoring_target": "",
              "description": "",
              "weight": 2,
              "manual_failback": false,
              "manual_failover": false,
              "enabled": true,
              "live_status": "down",
              "ready_status": "down",
              "rdata": [
                {
                  "value": "example.com."
                }
              ],
              "monitorings": []
            }
          ]
        }
      },
      "PostEndpoint": {
        "value": {
          "name": "endpoint002",
          "weight": 1,
          "description": "",
          "rdata": [
            {
              "value": "example.com."
            }
          ]
        }
      },
      "GetEndpoint": {
        "value": {
          "request_id": "782d746ac3cb46499b31708fa80e8660",
          "result": {
            "resource_name": "bxxxxxxxxxxxxx-xxxx-xxxxx",
            "name": "endpoint001",
            "monitoring_target": "",
            "description": "",
            "weight": 1,
            "manual_failback": true,
            "manual_failover": true,
            "enabled": true,
            "live_status": "down",
            "ready_status": "down",
            "rdata": [
              {
                "value": "example.com."
              }
            ],
            "monitorings": []
          }
        }
      },
      "PatchEndpoint": {
        "value": {
          "weight": 255
        }
      },
      "PostManualFailback": {
        "value": {
          "force": true
        }
      },
      "GetRules": {
        "value": {
          "request_id": "782d746ac3cb46499b31708fa80e8660",
          "results": [
            {
              "resource_name": "bxxxxxxxxxxxxx-xxxx-xxxxx",
              "name": "rule001",
              "description": "",
              "methods": []
            },
            {
              "resource_name": "byyyyyyyyyyyyy-yyyy-yyyyy",
              "name": "rule002",
              "description": "",
              "methods": [
                {
                  "method": {
                    "resource_name": "bzzzzzzzzzzzzz-zzzz-zzzzz",
                    "mtype": "entry_a",
                    "enabled": true,
                    "live_status": "down",
                    "ready_status": "down"
                  }
                }
              ]
            }
          ]
        }
      },
      "PostRule": {
        "value": {
          "name": "rule001",
          "description": ""
        }
      },
      "GetRule": {
        "value": {
          "request_id": "782d746ac3cb46499b31708fa80e8660",
          "result": {
            "resource_name": "bxxxxxxxxxxxxx-xxxx-xxxxx",
            "name": "rule001",
            "description": "",
            "methods": []
          }
        }
      },
      "PatchRule": {
        "value": {
          "name": "rule002"
        }
      },
      "GetRuleMethods": {
        "value": {
          "request_id": "782d746ac3cb46499b31708fa80e8660",
          "results": [
            {
              "method": {
                "resource_name": "bxxxxxxxxxxxxx-xxxx-xxxxx",
                "mtype": "entry_a",
                "enabled": true,
                "live_status": "down",
                "ready_status": "down"
              }
            },
            {
              "method": {
                "resource_name": "byyyyyyyyyyyyy-yyyy-yyyyy",
                "mtype": "failover",
                "enabled": false,
                "live_status": "down",
                "ready_status": "down",
                "parent_resource_name": "bxxxxxxxxxxxxx-xxxx-xxxxx"
              }
            },
            {
              "method": {
                "resource_name": "bzzzzzzzzzzzzz-zzzz-zzzzz",
                "mtype": "failover",
                "enabled": false,
                "live_status": "down",
                "ready_status": "down",
                "parent_resource_name": "byyyyyyyyyyyyy-yyyy-yyyyy"
              },
              "priority": 1
            }
          ]
        }
      },
      "PostRuleMethod": {
        "value": {
          "method": {
            "mtype": "failover",
            "enabled": false,
            "parent_resource_name": "bxxxxxxxxxxxxx-xxxx-xxxxx"
          }
        }
      },
      "GetRuleMethod": {
        "value": {
          "request_id": "782d746ac3cb46499b31708fa80e8660",
          "result": {
            "method": {
              "resource_name": "bxxxxxxxxxxxxx-xxxx-xxxxx",
              "mtype": "entry_a",
              "enabled": true,
              "live_status": "down",
              "ready_status": "down"
            }
          }
        }
      },
      "PatchRuleMethod": {
        "value": {
          "method": {
            "enabled": true
          }
        }
      },
      "GetConfig": {
        "value": {
          "request_id": "782d746ac3cb46499b31708fa80e8660",
          "result": {
            "monitorings": [
              {
                "resource_name": "bxxxxxxxxxxxxx-xxxx",
                "name": "monitoring001",
                "mtype": "ping",
                "description": "",
                "props": {
                  "location": "all",
                  "interval": 30,
                  "holdtime": 0,
                  "timeout": 5
                }
              }
            ],
            "sites": [
              {
                "resource_name": "byyyyyyyyyyyyy-yyyy",
                "name": "site001",
                "description": "",
                "rrtype": "A",
                "live_status": "down",
                "endpoints": [
                  {
                    "resource_name": "byyyyyyyyyyyyy-yyyy-yyyyy",
                    "name": "endpoint001",
                    "monitoring_target": "",
                    "description": "",
                    "weight": 1,
                    "manual_failback": false,
                    "manual_failover": false,
                    "enabled": false,
                    "live_status": "down",
                    "ready_status": "down",
                    "rdata": [
                      {
                        "value": "192.0.2.0"
                      }
                    ],
                    "monitorings": [
                      {
                        "resource_name": "bxxxxxxxxxxxxx-xxxx",
                        "name": "monitoring001",
                        "mtype": "ping",
                        "description": "",
                        "props": {
                          "location": "all",
                          "interval": 30,
                          "holdtime": 0,
                          "timeout": 5
                        },
                        "enabled": false,
                        "result": "unknown"
                      }
                    ]
                  }
                ]
              }
            ],
            "rules": [
              {
                "resource_name": "bzzzzzzzzzzzzz-zzzz",
                "name": "rule001",
                "description": "",
                "methods": [
                  {
                    "method": {
                      "resource_name": "bzzzzzzzzzzzzz-zzzz-zzzzz",
                      "mtype": "entry_a",
                      "enabled": false,
                      "live_status": "down",
                      "ready_status": "down",
                      "methods": [
                        {
                          "method": {
                            "resource_name": "bzzzzzzzzzzzzz-zzzz-zzzzz-zzzzzz",
                            "mtype": "failover",
                            "enabled": false,
                            "live_status": "down",
                            "ready_status": "down",
                            "methods": [
                              {
                                "method": {
                                  "resource_name": "bzzzzzzzzzzzzz-zzzz-zzzzz-zzzzzz-zzzzzzz",
                                  "mtype": "exit_site",
                                  "enabled": false,
                                  "live_status": "down",
                                  "ready_status": "down",
                                  "site_resource_name": "byyyyyyyyyyyyy-yyyy",
                                  "methods": []
                                },
                                "priority": 1
                              }
                            ]
                          }
                        }
                      ]
                    }
                  }
                ]
              }
            ]
          }
        }
      },
      "PutConfig": {
        "value": {
          "monitorings": [
            {
              "resource_name": "bxxxxxxxxxxxxx-xxxx",
              "name": "monitoring001",
              "mtype": "ping",
              "description": "",
              "props": {
                "location": "all",
                "interval": 30,
                "holdtime": 0,
                "timeout": 5
              }
            }
          ],
          "sites": [
            {
              "resource_name": "byyyyyyyyyyyyy-yyyy",
              "name": "site001",
              "description": "",
              "rrtype": "A",
              "endpoints": [
                {
                  "resource_name": "byyyyyyyyyyyyy-yyyy-yyyyy",
                  "name": "endpoint001",
                  "monitoring_target": "",
                  "description": "",
                  "weight": 1,
                  "manual_failback": false,
                  "manual_failover": false,
                  "enabled": false,
                  "rdata": [
                    {
                      "value": "192.0.2.0"
                    }
                  ],
                  "monitorings": [
                    {
                      "resource_name": "bxxxxxxxxxxxxx-xxxx",
                      "enabled": false
                    }
                  ]
                }
              ]
            }
          ],
          "rules": [
            {
              "resource_name": "bzzzzzzzzzzzzz-zzzz",
              "name": "rule001",
              "description": "",
              "methods": [
                {
                  "method": {
                    "resource_name": "bzzzzzzzzzzzzz-zzzz-zzzzz",
                    "mtype": "entry_a",
                    "enabled": false,
                    "methods": [
                      {
                        "method": {
                          "resource_name": "bzzzzzzzzzzzzz-zzzz-zzzzz-zzzzzz",
                          "mtype": "failover",
                          "enabled": false,
                          "methods": [
                            {
                              "method": {
                                "resource_name": "bzzzzzzzzzzzzz-zzzz-zzzzz-zzzzzz-zzzzzzz",
                                "mtype": "exit_site",
                                "enabled": false,
                                "site_resource_name": "byyyyyyyyyyyyy-yyyy",
                                "methods": []
                              },
                              "priority": 1
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              ]
            }
          ]
        }
      },
      "GetLbDomainsLogs": {
        "value": {
          "request_id": "782d746ac3cb46499b31708fa80e8660",
          "results": [
            {
              "time": "2020-01-01T00:00:00.000+09:00",
              "log_type": "service",
              "operator": "iij-taro@example.jp",
              "operation": "update_lb_domain_description",
              "target": "",
              "request_id": "fe28e2665a4da48ed7a709edd1ea026f",
              "status": "success"
            },
            {
              "time": "2020-01-01T00:00:00.000+09:00",
              "log_type": "monitoring",
              "operator": "iij-taro@example.jp",
              "operation": "update_monitoring",
              "target": "monitoring1",
              "request_id": "3d8fa9105fabe6841fe7d94f3909a800",
              "status": "success"
            }
          ]
        }
      }
    }
  },
  "tags": [
    {
      "name": "cc_primaries",
      "description": "プライマリネームサーバの操作ができます。\\\nプライマリネームサーバの状態（enabled）は以下のとおりです。\n\n### enabled\n値 | 意味 | 備考\n---|------|-----\n0 | 無効 |\n1 | 有効 |\n"
    },
    {
      "name": "cc_sec_notified_servers",
      "description": "DNS NOTIFYの操作ができます。\n"
    },
    {
      "name": "cc_sec_transfer_acls",
      "description": "ゾーン転送ACLの操作ができます。\n"
    },
    {
      "name": "cc_notice_accounts",
      "description": "通知先アカウントの操作ができます。\n"
    },
    {
      "name": "common_configs",
      "description": "複数のゾーンおよびLBドメインで共通の設定内容を使用するための共通設定を操作できます。\\\nマネージドDNSサーバの状態（managed_dns_enabled）、初期適用の共通設定（default）は以下のとおりです。\n\n### managed_dns_enabled\n値 | 意味 | 備考\n---|------|-----\n0 | 無効 |\n1 | 有効 |\n\n### default\n値 | 意味 | 備考\n---|------|-----\n0 | 無効 |\n1 | 有効 |\n"
    },
    {
      "name": "contracts",
      "description": "DPF契約の操作ができます。\\\n契約プラン（plan）、契約の状態（state）、お気に入りの状態（favorite）は以下のとおりです。\n\n### plan\n値 | 意味 | 備考\n---|------|-----\n 1 | ベーシック |\n 2 | プレミアム |\n\n### state\n値 | 意味 | 備考\n---|------|-----\n 1 | 利用開始前 |\n 2 | 利用中 |\n\n### favorite\n値 | 意味 | 備考\n---|------|-----\n 1 | 表示優先度高 |\n 2 | 表示優先度低 |\n"
    },
    {
      "name": "contract_partners",
      "description": "DPF契約の連携しているサービス情報の操作ができます。\n"
    },
    {
      "name": "logs (contracts)",
      "description": "DPF契約を操作したログを取得できます。\\\n取得可能なログは90日前までとなります。\\\n操作内容（operation）、ログの種別（log_type）、処理の状態（status）は以下のとおりです。\n\n### operation\n値 | 意味 | 備考\n---|------|-----\nadd_cc_primary | プライマリネームサーバ設定の作成 |\nupdate_cc_primary | プライマリネームサーバ設定の更新 |\ndelete_cc_primary | プライマリネームサーバ設定の削除 |\nadd_cc_sec_notified_server | DNS NOTIFY設定の作成 |\nupdate_cc_sec_notified_server | DNS NOTIFY設定の更新 |\ndelete_cc_sec_notified_server | DNS NOTIFY設定の削除 |\nadd_cc_sec_transfer_acl | ゾーン転送ACLの作成 |\nupdate_cc_sec_transfer_acl | ゾーン転送ACLの更新 |\ndelete_cc_sec_transfer_acl | ゾーン転送ACLの削除 |\nadd_notification_account | 通知先アカウント設定の追加 |\nupdate_notification_account | 通知先アカウント設定の更新 |\ndelete_notification_account | 通知先アカウント設定の削除 |\nmail_notification | メール通知の実行 |\nphone_notification | 架電通知の実行 |\ncreate_common_config | 共通設定の作成 |\nswitch_default_common_config | 初期適用される共通設定の更新 |\nupdate_common_config | 共通設定の更新 |\ndelete_common_config | 共通設定の削除 |\ncopy_common_config | 共通設定のコピー |\nupdate_managed_dns_state | マネージドDNSサーバの状態更新 |\nupdate_contract_description | DPF契約情報のコメントの更新 |\nupdate_contract_favorite | DPF契約情報のお気に入り状態の更新 |\nupdate_contract_labels | DPF契約情報のラベルの更新 |\napply_common_config | DPF契約に紐付くゾーンおよびLBドメインの共通設定の更新 |\ncreate_contract_partnership | IIJ IDサービスとの連携 |\ndelete_contract_partnership | IIJ IDサービスとの連携解除 |\ncreate_tsig | TSIG鍵の作成 |\nupdate_tsig | TSIG鍵の更新 |\ndelete_tsig | TSIG鍵の削除 |\n\n### log_type\n値 | 意味 | 備考\n---|------|-----\nservice | サービス設定の操作 |\ncommon_config | 共通設定の操作 |\nnotification | 通知の実行 |\n\n### status\n値 | 意味 | 備考\n---|------|-----\nstart | 処理開始 |\nsuccess | 処理正常終了 |\nfailure | 処理失敗 |\nretry | リトライ |\n"
    },
    {
      "name": "qps",
      "description": ""
    },
    {
      "name": "tsigs",
      "description": "TSIG鍵の操作ができます。\\\nハッシュアルゴリズム（algorithm）は以下のとおりです。\n\n### algorithm\n値 | 意味 | 備考\n---|------|-----\n0 | HMAC-SHA256 |\n"
    },
    {
      "name": "zones (contracts)",
      "description": "DPF契約に紐付くゾーンの操作ができます。\\\nゾーンの状態（state）、お気に入りの状態（favorite）、ゾーンプロキシの状態（zone_proxy_enabled）の詳細な説明は、[**zones**](#tag/zones)を参照してください。\n"
    },
    {
      "name": "lb_domains (contracts)",
      "description": "DPF契約に紐付くLBドメインの操作ができます。\\\nLBドメインの状態（state）、お気に入りの状態（favorite）の詳細な説明は、[**lb_domains**](#tag/lb_domains)を参照してください。\n"
    },
    {
      "name": "default_ttl",
      "description": "契約に紐づくゾーンのデフォルトTTLの操作ができます。\\\nデフォルトTTLの状態（state）は以下のとおりです。\n\n### state\n値 | 意味 | 備考\n---|------|-----\n 0 | 反映済み |\n 3 | 更新予定 |\n 5 | 更新前の状態 |\n"
    },
    {
      "name": "dnssec",
      "description": "DNSSECの操作ができます。\\\nDNSSECの有効状態（enabled）、DNSSECの状態（state）、DSレコードの状態（ds_state）は以下のとおりです。\n\n### enabled\n値 | 意味 | 備考\n---|------|-----\n0 | 無効 |\n1 | 有効 |\n\n### state\n値 | 意味 | 備考\n---|------|-----\n0 | ゾーン公開前 |\n1 | 有効化作業中 |\n2 | 有効 |\n3 | 無効化作業中 |\n4 | 無効 |\n\n### ds_state\n値 | 意味 | 備考\n---|------|-----\n0 | 公開前 |\n1 | DSレコード登録待ち   |\n3 | DSレコード公開中 |\n4 | ロールオーバー準備中 |\n5 | DSレコード変更待ち |\n6 | DSレコード変更反映待ち |\n7 | DSレコード削除待ち |\n8 | DSレコード削除反映待ち |\n"
    },
    {
      "name": "ds_records",
      "description": ""
    },
    {
      "name": "logs (zones)",
      "description": "契約に紐付くゾーンを操作したログを取得できます。\\\n取得可能なログは90日前までとなります。\\\n操作内容（operation）、ログの種別（log_type）、処理の状態（status）は以下のとおりです。\n\n### operation\n値 | 意味 | 備考\n---|------|-----\nupdating_default_ttl | デフォルトTTLの更新 |\ndismiss_default_ttl_change | 編集中デフォルトTTLの取消 |\nupdate_dnssec_configuration | DNSSEC情報の更新 |\nbegin_ksk_rollover | KSKロールオーバーの開始 |\nadding_record | レコードの作成 |\nupdating_record | レコードの更新 |\ndeleting_record | レコードの削除 |\ndismiss_record_change | 編集中レコードの取消 |\nupdate_zone_proxy | ゾーンプロキシ設定の更新 |\nupdate_zone_description | ゾーンのコメントの更新 |\nupdate_zone_favorite | ゾーンのお気に入り状態の更新 |\nupdate_zone_labels | ゾーンのラベルの更新 |\ncommit_zone | 編集中レコードのゾーン反映 |\nupload_zone | ゾーンファイルのアップロード |\ndismiss_zone_edits | 編集中レコードの一括取消 |\nbulk_update_records | レコードの一括更新 |\nupsert_subdomain_ns_records | サブドメインNSレコードの一括登録\t |\ncreate_delegations | ネームサーバ申請 |\n\n### log_type\n値 | 意味 | 備考\n---|------|-----\nservice | サービス設定の操作 |\nrecord | レコードの操作 |\ndnssec | DNSSEC設定の操作 |\n\n### status\n値 | 意味 | 備考\n---|------|-----\nstart | 処理開始 |\nsuccess | 処理正常終了 |\nfailure | 処理失敗 |\nretry | リトライ |\n"
    },
    {
      "name": "records",
      "description": "契約に紐付くゾーンのレコード操作ができます。\\\nレコード操作の状態（state）は以下のとおりです。\n\n### state\n値 | 意味 | 備考\n---|------|-----\n 0 | 反映済み |\n 1 | 追加予定 |\n 2 | 削除予定 |\n 3 | 更新予定 |\n 5 | 更新前の状態 |\n"
    },
    {
      "name": "zone_histories",
      "description": "当日を含めて90日前までのゾーン反映の履歴を確認できます。\\\n確認のタイミングにより、それ以前の履歴を確認できる場合があります。\n"
    },
    {
      "name": "zone_proxy",
      "description": "ゾーンプロキシの操作ができます。\\\nゾーンプロキシの状態（enabled）、ゾーン転送の状態（state）は以下のとおりです。\n\n### enabled\n値 | 意味 | 備考\n---|------|-----\n 0 | 無効 |\n 1 | 有効 |\n\n### state\n値 | 意味 | 備考\n---|------|-----\n OK | ゾーン転送成功 |\n NG | ゾーン転送失敗 |\n"
    },
    {
      "name": "zones",
      "description": "DPF契約に紐付くゾーンの操作ができます。\\\nゾーンの状態（state）、お気に入りの状態（favorite）、ゾーンプロキシの状態（zone_proxy_enabled）は以下のとおりです。\n\n### state\n値 | 意味 | 備考\n---|------|-----\n 1 | 公開前 |\n 2 | 公開 |\n\n### favorite\n値 | 意味 | 備考\n---|------|-----\n 1 | 表示優先度高 |\n 2 | 表示優先度低 |\n\n### zone_proxy_enabled\n値 | 意味 | 備考\n---|------|-----\n 0 | 無効 |\n 1 | 有効 |\n"
    },
    {
      "name": "lb_domains",
      "description": "DPF契約に紐付くLBドメインの操作ができます。\\\nLBドメインの状態（state）、お気に入りの状態（favorite）は以下のとおりです。\n\n### state\n値 | 意味 | 備考\n---|------|-----\n 1 | 公開前 |\n 2 | 公開 |\n\n### favorite\n値 | 意味 | 備考\n---|------|-----\n 1 | 表示優先度高 |\n 2 | 表示優先度低 |\n"
    },
    {
      "name": "monitorings",
      "description": "LBドメインに紐付く監視の操作ができます。\n"
    },
    {
      "name": "sites",
      "description": "LBドメインに紐付くサイトの操作ができます。\n"
    },
    {
      "name": "endpoints",
      "description": "サイトに紐付くエンドポイントの操作ができます。\n"
    },
    {
      "name": "rules",
      "description": "LBドメインに紐付くルールの操作ができます。\\\n適用ルールは[**LBドメインの更新**](#tag/lb_domains/operation/patchLbDomain)で切り替えができます。\n"
    },
    {
      "name": "rule_methods",
      "description": "ルールに紐付くルールメソッドの操作ができます。\n"
    },
    {
      "name": "config",
      "description": "LBドメインに紐付く設定と状態の操作ができます。\n"
    },
    {
      "name": "logs (lb_domains)",
      "description": "契約に紐付くLBドメインを操作したログを取得できます。\\\n取得可能なログは90日前までとなります。\\\n操作内容（operation）、ログの種別（log_type）、処理の状態（status）は以下のとおりです。\n\n### operation\n値 | 意味 | 備考\n---|------|-----\nupdate_lb_domain_description | トラフィックコントロール契約のコメントの更新 |\nupdate_lb_domain_favorite | トラフィックコントロール契約のお気に入り状態の切り替え |\nupdate_lb_domain_labels | トラフィックコントロール契約のラベルの更新 |\nupdate_lb_domain_rule | 適用ルールの切り替え |\nadd_rule | ルールの追加 |\nupdate_rule | ルールの更新 |\ndelete_rule | ルールの削除 |\nadd_rule_method | ルールメソッドの追加 |\nupdate_rule_method | ルールメソッドの更新 |\ndelete_rule_method | ルールメソッドの削除 |\nadd_site | サイトの追加 |\nupdate_site | サイトの更新 |\ndelete_site | サイトの削除 |\nadd_endpoint | エンドポイントの追加 |\nupdate_endpoint | エンドポイントの更新 |\ndelete_endpoint | エンドポイントの削除 |\nmanual_failover | エンドポイントの手動切り離し |\nmanual_failback | エンドポイントの手動切り戻し |\nadd_monitoring | 監視の追加 |\nupdate_monitoring | 監視の更新 |\ndelete_monitoring | 監視の削除 |\nfile_import | ファイルインポート |\nmonitoring_result_changed |  監視結果の更新 |\nendpoint_live_status_changed | エンドポイントLiveStatusの更新 |\nendpoint_ready_status_changed | エンドポイントReadyStatusの更新 |\nsite_live_status_changed | サイトLiveStatusの更新 |\n\n### log_type\n値 | 意味 | 備考\n---|------|-----\nservice | サービス設定の操作 |\nrule | ルールの操作 |\nsite | サイトの操作 |\nmonitoring | 監視の操作 |\nfile | ファイル設定の操作 |\nmonitoring_event | 監視イベントの操作 |\n\n### status\n値 | 意味 | 備考\n---|------|-----\nstart | 処理開始 |\nsuccess | 処理正常終了 |\nfailure | 処理失敗 |\nretry | リトライ |\n"
    },
    {
      "name": "delegations",
      "description": "ネームサーバ申請の操作ができます。\\\nお気に入りの状態（favorite）、ネームサーバの状態（requested）は以下のとおりです。\n\n### favorite\n値 | 意味 | 備考\n---|------|-----\n1 | 表示優先度高 |\n2 | 表示優先度低 |\n\n### requested\n値 | 意味 | 備考\n---|------|-----\n0 | 未申請 |\n1 | 申請済み |\n"
    },
    {
      "name": "jobs",
      "description": "非同期リクエストの状態確認ができます。\\\nリクエストの状態（status）は以下のとおりです。\n\n### status\n値 | 意味 | 備考\n---|------|-----\nRUNNING | 処理中 |\nSUCCESSFUL | 正常終了 |\nFAILED | 異常終了 |\n"
    },
    {
      "name": "ping",
      "description": ""
    }
  ],
  "x-tagGroups": [
    {
      "name": "IIJ DNSプラットフォームサービス",
      "tags": [
        "cc_notice_accounts",
        "cc_primaries",
        "cc_sec_notified_servers",
        "cc_sec_transfer_acls",
        "common_configs",
        "contracts",
        "contract_partners",
        "lb_domains (contracts)",
        "logs (contracts)",
        "qps",
        "tsigs",
        "zones (contracts)"
      ]
    },
    {
      "name": "IIJマネージドDNSサービス",
      "tags": [
        "default_ttl",
        "dnssec",
        "ds_records",
        "logs (zones)",
        "records",
        "zone_histories",
        "zone_proxy",
        "zones"
      ]
    },
    {
      "name": "IIJ DNSトラフィックマネージメントサービス",
      "tags": [
        "config",
        "endpoints",
        "lb_domains",
        "logs (lb_domains)",
        "monitorings",
        "rule_methods",
        "rules",
        "sites"
      ]
    },
    {
      "name": "サービス共通",
      "tags": [
        "delegations",
        "jobs",
        "ping"
      ]
    }
  ]
}
